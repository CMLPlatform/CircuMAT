{"version":3,"file":"Treemap.js","sources":["../../src/Treemap.js"],"sourcesContent":["import {nest} from \"d3-collection\";\nimport {hierarchy, treemap, treemapSquarify} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Treemap\n    @extends Viz\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\n*/\nexport default class Treemap extends Viz {\n\n  /**\n      @memberof Treemap\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._padding = 1;\n    this._shapeConfig = assign({}, this._shapeConfig, {\n      labelConfig: {\n        fontResize: true\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n    this._tile = treemapSquarify;\n    this._treemap = treemap().round(true);\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const tmapData = this._treemap\n      .padding(this._padding)\n      .size([\n        this._width - this._margin.left - this._margin.right,\n        this._height - this._margin.top - this._margin.bottom\n      ])\n      .tile(this._tile)\n      (hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\n\n    const shapeData = [], that = this;\n\n    /**\n        Flattens and merges treemap data.\n        @private\n    */\n    function extractLayout(children) {\n      for (let i = 0; i < children.length; i++) {\n        const node = children[i];\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\n        else {\n          node.__d3plus__ = true;\n          node.id = node.data.key;\n          node.data = merge(node.data.values);\n          node.i = i;\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\n          shapeData.push(node);\n        }\n      }\n    }\n    if (tmapData.children) extractLayout(tmapData.children);\n    const total = tmapData.value;\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n    this._shapes.push(new Rect()\n      .data(shapeData)\n      .label(d => [\n        this._drawLabel(d.data, d.i),\n        `${Math.round(this._sum(d.data, d.i) / total * 100)}%`\n      ])\n      .select(elem(\"g.d3plus-Treemap\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        height: d => d.y1 - d.y0,\n        labelBounds: (d, i, s) => {\n          const h = s.height;\n          const sh = Math.min(50, h * 0.25);\n          return [\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\n            {width: s.width, height: sh, x: -s.width / 2, y: h / 2 - sh}\n          ];\n        },\n        labelConfig: {\n          textAnchor: d => d.l ? \"middle\" : \"start\",\n          verticalAlign: d => d.l ? \"bottom\" : \"top\"\n        },\n        width: d => d.x1 - d.x0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\n      @param {Function|Number} [*value*]\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = typeof _ === \"function\" ? _ : constant(_), this) : this._padding;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : constant(_), this) : this._sum;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling) to the specified function and returns the current class instance. If *value* is not specified, returns the current [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling).\n      @param {Function} [*value*]\n  */\n  tile(_) {\n    return arguments.length ? (this._tile = _, this) : this._tile;\n  }\n\n}\n"],"names":["super","let","this","const"],"mappings":"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"}