{"version":3,"file":"Tree.js","sources":["../../src/Tree.js"],"sourcesContent":["import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])\n      (hierarchy({\n        key: \"root\",\n        values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n      }, d => d.key && d.values ? d.values : null).sort(this._sort))\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n          : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n"],"names":["super","const","this","let"],"mappings":"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"}