{"version":3,"file":"d3plus-plot.js","sources":["../src/buffers/discreteBuffer.js","../src/buffers/Bar.js","../src/buffers/Box.js","../src/buffers/numericBuffer.js","../src/buffers/Circle.js","../src/buffers/Line.js","../src/buffers/Rect.js","../src/Plot.js","../src/AreaPlot.js","../src/BarChart.js","../src/BoxWhisker.js","../src/BumpChart.js","../src/LinePlot.js","../src/Radar.js","../src/StackedArea.js"],"sourcesContent":["/**\n * Adds left/right padding to a point or time scale.\n * @private\n */\nexport default (scale, data, discrete) => {\n\n  if (scale.padding) scale.padding(0.5);\n  else {\n    const closest = data.map(d => d[discrete]).reduce((acc, curr, i, arr) => {\n      if (!i) return acc;\n      const prev = arr[i - 1];\n      if (!acc || curr - prev < acc) return curr - prev;\n      else return acc;\n    }, 0);\n    const domain = scale.domain().slice();\n    if (discrete === \"y\") domain.reverse();\n    domain[0] = new Date(+domain[0] - closest / 2);\n    domain[1] = new Date(+domain[1] + closest / 2);\n    if (discrete === \"y\") domain.reverse();\n    scale.domain(domain);\n  }\n\n};\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => `${d[this._discrete]}_${d.group}`)\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  if (isDiscreteX ? bMax < oppScale(0) : bMax > oppScale(0)) bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  if (isDiscreteX ? bMin > oppScale(0) : bMin < oppScale(0)) bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => d[this._discrete])\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {scaleLog} from \"d3-scale\";\n\nconst floor10 = v => Math.pow(10, Math.floor(Math.log10(Math.abs(v)))) * Math.pow(-1, v < 0);\nconst ceil10 = v => Math.pow(10, Math.ceil(Math.log10(Math.abs(v)))) * Math.pow(-1, v < 0);\n\n/** */\nexport default function(axis, scale, value, size, range, domain, index, invert) {\n\n  if (isNaN(domain[0]) || isNaN(domain[1])) return domain;\n\n  if (invert) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  if (domain[0] === domain[1]) {\n    domain = domain.slice();\n    if (scale === \"log\") {\n      domain = [floor10(domain[0]), ceil10(domain[0])];\n      if (domain[1] < domain[0]) domain.reverse();\n    }\n    else {\n      const mod = Math.abs(parseFloat(domain[0].toPrecision(1).replace(/[0-9]{1}$/, \"1\")));\n      domain[0] -= mod;\n      domain[1] += mod;\n    }\n    axis.domain(invert ? domain.slice().reverse() : domain);\n    return invert ? domain.reverse() : domain;\n  }\n\n  const logMod = domain[0] === domain[1] ? 10 : Math.abs(Math.log(domain[1] - domain[0]) / 10);\n\n  const needsBuffer = () => {\n    let tempAxis = axis.copy();\n    let diverging = false;\n    if (scale === \"log\") {\n      let d = axis.domain().slice(),\n          r = axis.range().slice();\n      if (invert) {\n        d = d.reverse();\n        r = r.reverse();\n      }\n      diverging = d[0] * d[1] < 0;\n      if (diverging) {\n        const percentScale = scaleLog().domain([1e-6, Math.abs(d[index])]).range([0, 1]);\n        const leftPercentage = percentScale(Math.abs(d[index ? 0 : 1]));\n        const zero = leftPercentage / (leftPercentage + 1) * (r[1] - r[0]);\n        d = (index === 0 ? [d[0], 1e-6] : [1e-6, d[1]]).map(Math.abs);\n        r = index === 0 ? [r[0], r[0] + zero] : [r[0] + zero, r[1]];\n      }\n      tempAxis = scaleLog()\n        .domain(d)\n        .range(r);\n    }\n\n    let outside = false;\n    const tempRange = tempAxis.range();\n    let pixelValue;\n    if (scale === \"log\") {\n      pixelValue = diverging ? tempAxis(Math.abs(value)) : tempAxis(value);\n    }\n    else pixelValue = tempAxis(value);\n\n    if (invert) {\n      if (index === 0) outside = pixelValue + size > tempRange[index];\n      else if (index === 1) outside = pixelValue - size < tempRange[index];\n    }\n    else {\n      if (index === 0) outside = pixelValue - size < tempRange[index];\n      else if (index === 1) outside = pixelValue + size > tempRange[index];\n    }\n    return outside;\n\n  };\n\n  if (axis.invert && needsBuffer()) {\n    const mod = 10;\n    if (scale === \"log\") {\n      let i = 0;\n      while (i < 10 && needsBuffer()) {\n        const mod = (index === 0 ? -1 : 1) * (domain[index] < 0 ? -1 : 1);\n        domain[index] += domain[index] * logMod * mod;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n        i++;\n      }\n    }\n    else if (index === 0) {\n      const v = axis.invert(axis(value) + (size + mod) * (invert ? 1 : -1));\n      if (v < domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n    else if (index === 1) {\n      const v = axis.invert(axis(value) + (size + mod) * (invert ? -1 : 1));\n      if (v > domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n  }\n\n  return invert ? domain.reverse() : domain;\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config, buffer}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      const s = buffer ? buffer : config.r(d.data, d.i) * 2;\n\n      if (x.invert) {\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n","import {max} from \"d3-array\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const s = this._discrete === \"x\" ? y : x;\n\n  const d = s.domain().slice();\n\n  if (this._discrete === \"x\") d.reverse();\n\n  const vals = data.map(d => d[this._discrete === \"x\" ? yKey : xKey]);\n  const b = s.invert(s(max(vals)) + (this._discrete === \"x\" ? -10 : 10));\n\n  if (b > d[1]) d[1] = b;\n\n  if (this._discrete === \"x\") d.reverse();\n\n  s.domain(d);\n\n  return [x, y];\n\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the width/height of the largest Rect.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      if (x.invert) {\n        const w = config.width(d.data, d.i);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        const h = config.height(d.data, d.i);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n\n","/* eslint no-cond-assign: 0 */\n\nimport {deviation, extent, max, mean, merge, min, range, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\n\nimport {AxisBottom, AxisLeft, AxisRight, AxisTop, date} from \"d3plus-axis\";\nimport {colorAssign, colorContrast, colorDefaults, colorLegible} from \"d3plus-color\";\nimport {accessor, assign, configPrep, constant, elem, RESET, unique} from \"d3plus-common\";\nimport {formatDate} from \"d3plus-format\";\nimport * as shapes from \"d3plus-shape\";\nimport {textWidth, TextBox} from \"d3plus-text\";\nconst testLineShape = new shapes.Line();\nconst testTextBox = new TextBox();\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as BarBuffer} from \"./buffers/Bar.js\";\nimport {default as BoxBuffer} from \"./buffers/Box.js\";\nimport {default as CircleBuffer} from \"./buffers/Circle.js\";\nimport {default as LineBuffer} from \"./buffers/Line.js\";\nimport {default as RectBuffer} from \"./buffers/Rect.js\";\n\n/**\n    @desc Logic for determining default sizes of shapes using the sizeScaleD3 internal function.\n    @private\n*/\nfunction defaultSize(d) {\n  return this._sizeScaleD3(this._size ? this._size(d) : null);\n}\n\n/**\n    @desc Logic for determining stackOrder ascending using groups.\n    @private\n*/\nfunction stackOrderAscending(series) {\n  const sums = series.map(stackSum);\n  const keys = series.map(d => d.key.split(\"_\")[0]);\n  return d3Shape.stackOrderNone(series).sort((a, b) => keys[b].localeCompare(keys[a]) || sums[a] - sums[b]);\n}\n\n/**\n    @desc Logic for determining stackOrder descending using groups.\n    @private\n*/\nfunction stackOrderDescending(series) {\n  return stackOrderAscending(series).reverse();\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackSum(series) {\n  let i = -1, s = 0, v;\n  const n = series.length;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackOffsetDiverging(series, order) {\n  let n;\n  if (!((n = series.length) > 0)) return;\n  let d, dy, i, yn, yp;\n  const m = series[order[0]].length;\n  for (let j = 0; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      }\n      else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      }\n      else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\n/**\n * Determines if a Bar label should be placed outside of the Bar.\n * @param {@} d\n * @param {*} i\n * @private\n */\nfunction outside(d, i) {\n  if (this._stacked) return false;\n  const other = this._discrete.charAt(0) === \"x\" ? \"y\" : \"x\";\n  const nonDiscrete = this._discrete.replace(this._discrete.charAt(0), other);\n  const range = this[`_${nonDiscrete}Axis`]._d3Scale.range();\n  const value = this[`_${nonDiscrete}`](d, i);\n  const negative = value < 0;\n  const zero = this[`_${nonDiscrete}Axis`]._getPosition(0);\n  const space = nonDiscrete === \"y\"\n    ? negative ? range[1] - zero : zero - range[0]\n    : negative ? zero - range[0] : range[1] - zero;\n  const pos = this[`_${nonDiscrete}Axis`]._getPosition(value);\n  const size = Math.abs(pos - zero);\n  return size < space / 2;\n}\n\n/**\n    @class Plot\n    @extends Viz\n    @desc Creates an x/y plot based on an array of data.\n*/\nexport default class Plot extends Viz {\n\n  /**\n      @memberof Plot\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._annotations = [];\n    this._backgroundConfig = {\n      duration: 0,\n      fill: \"transparent\"\n    };\n    this._barPadding = 0;\n    this._buffer = {\n      Bar: BarBuffer,\n      Box: BoxBuffer,\n      Circle: CircleBuffer,\n      Line: LineBuffer,\n      Rect: RectBuffer\n    };\n    this._confidenceConfig = {\n      fill: (d, i) => {\n        const c = typeof this._shapeConfig.Line.stroke === \"function\"\n          ? this._shapeConfig.Line.stroke(d, i)\n          : this._shapeConfig.Line.stroke;\n        return c;\n      },\n      fillOpacity: constant(0.5)\n    };\n    this._discreteCutoff = 100;\n    this._groupPadding = 5;\n    this._lineMarkerConfig = {\n      fill: (d, i) => colorAssign(this._id(d, i)),\n      r: constant(3)\n    };\n    this._lineMarkers = false;\n    this._previousShapes = [];\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Area: {\n        label: (d, i) => this._stacked ? this._drawLabel(d, i) : false,\n        labelBounds: (d, i, aes) => {\n          let r = shapes.largestRect(aes.points, {angle: range(-20, 20, 5)});\n          if (!r || r.height < 20 || r.width < 50) r = shapes.largestRect(aes.points, {angle: range(-80, 80, 5)});\n          if (!r) return null;\n          const x = min(aes.points, d => d[0]);\n          const y = max(aes.points.filter(d => d[0] === x), d => d[1]);\n          return {\n            angle: r.angle,\n            width: r.width,\n            height: r.height,\n            x: r.cx - r.width / 2 - x,\n            y: r.cy - r.height / 2 - y\n          };\n        },\n        labelConfig: {\n          fontMin: 6,\n          fontResize: true,\n          padding: 10\n        }\n      },\n      ariaLabel: (d, i) => {\n        let ariaLabelStr = \"\";\n        if (d.nested) ariaLabelStr = `${this._drawLabel(d.data, d.i)}`;\n        else {\n          ariaLabelStr = `${this._drawLabel(d, i)}`;\n          if (this._x(d, i) !== undefined) ariaLabelStr += `, x: ${this._x(d, i)}`;\n          if (this._y(d, i) !== undefined) ariaLabelStr += `, y: ${this._y(d, i)}`;\n          if (this._x2(d, i) !== undefined) ariaLabelStr += `, x2: ${this._x2(d, i)}`;\n          if (this._y2(d, i) !== undefined) ariaLabelStr += `, y2: ${this._y2(d, i)}`;\n        }\n        return `${ariaLabelStr}.`;\n      },\n      Bar: {\n        labelBounds(d, i, s) {\n\n          const padding = 1;\n\n          const width = this._discrete === \"y\" ? \"width\" : \"height\";\n          const height = this._discrete === \"y\" ? \"height\" : \"width\";\n\n          const other = this._discrete.charAt(0) === \"x\" ? \"y\" : \"x\";\n          const invert = other === \"y\";\n          const nonDiscrete = this._discrete.replace(this._discrete.charAt(0), other);\n          const range = this[`_${nonDiscrete}Axis`]._d3Scale.range();\n          const space = Math.abs(range[1] - range[0]);\n          const negative = this[`_${nonDiscrete}`](d, i) < 0;\n\n          if (outside.bind(this)(d, i)) {\n            return {\n              [width]: space - s[width],\n              [height]: s[height],\n              x: invert ? -s.width / 2 : negative ? -space : s.width + padding,\n              y: invert ? negative ? s.height + padding : -space : -s.height / 2 + 1\n            };\n          }\n          return {\n            [width]: s[width],\n            [height]: s[height],\n            x: invert ? -s.width / 2 : negative ? this._stacked ? padding : padding - s.width : -padding,\n            y: invert ? negative ? this._stacked ? padding - s.height : padding : -s.height + padding : -s.height / 2 + padding\n          };\n\n        },\n        labelConfig: {\n          fontMax: 16,\n          fontMin: 6,\n          fontResize: true,\n          fontColor(d, i) {\n            return outside.bind(this)(d, i)\n              ? this._backgroundConfig.fill === \"transparent\"\n                ? colorDefaults.dark\n                : colorContrast(this._backgroundConfig.fill)\n              : colorContrast(typeof this._shapeConfig.fill === \"function\" ? this._shapeConfig.fill(d, i) : this._shapeConfig.fill);\n          },\n          fontStroke(d, i) {\n            return outside.bind(this)(d, i)\n              ? this._backgroundConfig.fill === \"transparent\"\n                ? colorDefaults.dark\n                : colorContrast(this._backgroundConfig.fill)\n              : \"transparent\";\n          },\n          fontStrokeWidth(d, i) {\n            return outside.bind(this)(d, i) ? 0.1 : 0;\n          },\n          padding: 3,\n          textAnchor(d, i) {\n            const other = this._discrete.charAt(0) === \"x\" ? \"y\" : \"x\";\n            const invert = other === \"y\";\n            const nonDiscrete = this._discrete.replace(this._discrete.charAt(0), other);\n            const negative = this[`_${nonDiscrete}`](d, i) < 0;\n            return invert\n              ? \"middle\"\n              : outside.bind(this)(d, i)\n                ? negative ? \"end\" : \"start\"\n                : negative ? \"start\" : \"end\";\n          },\n          verticalAlign(d, i) {\n            const other = this._discrete.charAt(0) === \"x\" ? \"y\" : \"x\";\n            const invert = other === \"y\";\n            const nonDiscrete = this._discrete.replace(this._discrete.charAt(0), other);\n            const negative = this[`_${nonDiscrete}`](d, i) < 0;\n            return invert\n              ? outside.bind(this)(d, i)\n                ? negative ? \"top\" : \"bottom\"\n                : negative ? \"bottom\" : \"top\"\n              : \"middle\";\n          }\n        }\n      },\n      Circle: {\n        r: defaultSize.bind(this)\n      },\n      Line: {\n        curve: () => this._discrete ? `monotone${this._discrete.charAt(0).toUpperCase()}` : \"linear\",\n        fill: constant(\"none\"),\n        labelConfig: {\n          fontColor: (d, i) => {\n            const c = typeof this._shapeConfig.Line.stroke === \"function\"\n              ? this._shapeConfig.Line.stroke(d, i)\n              : this._shapeConfig.Line.stroke;\n            return colorLegible(c);\n          },\n          fontResize: false,\n          padding: 5,\n          textAnchor: \"start\",\n          verticalAlign: \"middle\"\n        },\n        stroke: (d, i) => colorAssign(this._id(d, i)),\n        strokeWidth: constant(2)\n      },\n      Rect: {\n        height: d => defaultSize.bind(this)(d) * 2,\n        width: d => defaultSize.bind(this)(d) * 2\n      }\n    });\n    this._shapeOrder = [\"Area\", \"Path\", \"Bar\", \"Box\", \"Line\", \"Rect\", \"Circle\"];\n    this._shapeSort = (a, b) => this._shapeOrder.indexOf(a) - this._shapeOrder.indexOf(b);\n    this._sizeMax = 20;\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._stackOffset = stackOffsetDiverging;\n    this._stackOrder = stackOrderDescending;\n    this._timelineConfig = assign(this._timelineConfig, {brushing: true});\n\n    this._x = accessor(\"x\");\n    this._xAxis = new AxisBottom().align(\"end\");\n    this._xTest = new AxisBottom().align(\"end\").gridSize(0);\n    this._xConfig = {\n      gridConfig: {\n        stroke: d => {\n          if (this._discrete && this._discrete.charAt(0) === \"x\") return \"transparent\";\n          const range = this._xAxis.range();\n          // hides left-most x gridline so it doesn't overlap with the y axis\n          return range[0] === this._xAxis._getPosition.bind(this._xAxis)(d.id) ? \"transparent\" : \"#eee\";\n        }\n      }\n    };\n    this._xCutoff = 150;\n\n    this._x2 = accessor(\"x2\");\n    this._x2Axis = new AxisTop().align(\"start\");\n    this._x2Test = new AxisTop().align(\"start\").gridSize(0);\n    this._x2Config = {\n      padding: 0\n    };\n\n    this._y = accessor(\"y\");\n    this._yAxis = new AxisLeft().align(\"start\");\n    this._yTest = new AxisLeft().align(\"start\").gridSize(0);\n    this._yConfig = {\n      gridConfig: {\n        stroke: d => {\n          if (this._discrete && this._discrete.charAt(0) === \"y\") return \"transparent\";\n          const range = this._yAxis.range();\n          // hides bottom-most y gridline so it doesn't overlap with the x axis\n          return range[range.length - 1] === this._yAxis._getPosition.bind(this._yAxis)(d.id) ? \"transparent\" : \"#eee\";\n        }\n      }\n    };\n    this._yCutoff = 150;\n\n    this._y2 = accessor(\"y2\");\n    this._y2Axis = new AxisRight().align(\"end\");\n    this._y2Test = new AxisLeft().align(\"end\").gridSize(0);\n    this._y2Config = {};\n\n  }\n\n  /**\n      Extends the preDraw behavior of the abstract Viz class.\n      @private\n  */\n  _preDraw() {\n\n    // logic repeated for each axis\n    [\"x\", \"y\", \"x2\", \"y2\"].forEach(k => {\n\n      // if user has supplied a String key as the main method value\n      if (this[`_${k}Key`]) {\n\n        const str = this[`_${k}Key`];\n\n        // if axis is discrete and numerical, do not sum values\n        if (!this._aggs[str] && this._discrete === k) {\n          this._aggs[str] = (a, c) => {\n            const v = Array.from(new Set(a.map(c)));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n\n        // set axis title if not discrete\n        if (str !== k && this[`_${k}Title`] === this[`_${k}Config`].title && this._discrete !== k) {\n          this[`_${k}Title`] = str;\n          this[`_${k}Config`].title = str;\n        }\n\n      }\n\n    });\n\n    super._preDraw();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    if (!this._filteredData.length) return this;\n\n    const stackGroup = (d, i) => this._stacked\n      ? `${this._groupBy.length > 1 ? this._ids(d, i).slice(0, -1).join(\"_\") : \"group\"}`\n      : `${this._ids(d, i).join(\"_\")}`;\n\n    let data = this._filteredData.map((d, i) => ({\n      __d3plus__: true,\n      data: d,\n      group: stackGroup(d, i),\n      i,\n      hci: this._confidence && this._confidence[1] && this._confidence[1](d, i),\n      id: this._ids(d, i).slice(0, this._drawDepth + 1).join(\"_\"),\n      lci: this._confidence && this._confidence[0] && this._confidence[0](d, i),\n      shape: this._shape(d, i),\n      x: this._x(d, i),\n      x2: this._x2(d, i),\n      y: this._y(d, i),\n      y2: this._y2(d, i)\n    }));\n\n    this._formattedData = data;\n\n    if (this._size) {\n      const rExtent = extent(data, d => this._size(d.data));\n      this._sizeScaleD3 = () => this._sizeMin;\n      this._sizeScaleD3 = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n        .domain(rExtent)\n        .range([rExtent[0] === rExtent[1] ? this._sizeMax : min([this._sizeMax / 2, this._sizeMin]), this._sizeMax]);\n    }\n    else {\n      this._sizeScaleD3 = () => this._sizeMin;\n    }\n\n    const x2Exists = data.some(d => d.x2 !== undefined),\n          y2Exists = data.some(d => d.y2 !== undefined);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          opp = this._discrete ? this._discrete === \"x\" ? \"y\" : \"x\" : undefined,\n          opp2 = this._discrete ? this._discrete === \"x\" ? \"y2\" : \"x2\" : undefined,\n          opps = [opp, opp2].filter(d => d),\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const x2Time = this._x2Time = this._time && data[0].x2 === this._time(data[0].data, data[0].i),\n          xTime = this._xTime = this._time && data[0].x === this._time(data[0].data, data[0].i),\n          y2Time = this._y2Time = this._time && data[0].y2 === this._time(data[0].data, data[0].i),\n          yTime = this._yTime = this._time && data[0].y === this._time(data[0].data, data[0].i);\n\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      if (xTime) d.x = date(d.x);\n      if (x2Time) d.x2 = date(d.x2);\n      if (yTime) d.y = date(d.y);\n      if (y2Time) d.y2 = date(d.y2);\n      d.discrete = d.shape === \"Bar\" ? `${d[this._discrete]}_${d.group}` : `${d[this._discrete]}`;\n    }\n\n    /**\n     * @desc Returns all unique values for a given axis.\n     * @param {String} axis\n     * @returns {Array}\n     * @private\n     */\n    function getValues(axis) {\n      let axisData = data\n        .filter(d => d[axis])\n        .sort((a, b) => this[`_${axis}Sort`] ? this[`_${axis}Sort`](a.data, b.data) : a[axis] - b[axis])\n        .map(d => d[axis]);\n      if (this._discrete !== axis.charAt(0) && this._confidence) {\n        if (this._confidence[0]) axisData = axisData.concat(data.map(d => d.lci));\n        if (this._confidence[1]) axisData = axisData.concat(data.map(d => d.hci));\n      }\n      return unique(axisData, d => `${d}`);\n    }\n\n    const xData = getValues.bind(this)(\"x\");\n    const x2Data = getValues.bind(this)(\"x2\");\n    const yData = getValues.bind(this)(\"y\");\n    const y2Data = getValues.bind(this)(\"y2\");\n\n    const hasBars = data.some(d => d.shape === \"Bar\");\n\n    let discreteKeys, domains, stackData, stackKeys;\n    if (this._stacked) {\n\n      const groupValues = nest()\n        .key(d => d.group)\n        .entries(data)\n        .reduce((obj, d) => {\n          if (!obj[d.key]) obj[d.key] = 0;\n          obj[d.key] += sum(d.values, dd => dd[opp]);\n          return obj;\n        }, {});\n\n      data = data.sort((a, b) => {\n        if (this[`_${this._discrete}Sort`]) return this[`_${this._discrete}Sort`](a.data, b.data);\n        const a1 = a[this._discrete], b1 = b[this._discrete];\n        if (a1 - b1 !== 0) return a1 - b1;\n        if (a.group !== b.group) return groupValues[b.group] - groupValues[a.group];\n        return b[opp] - a[opp];\n      });\n\n      discreteKeys = Array.from(new Set(data.map(d => d.discrete)));\n      stackKeys = Array.from(new Set(data.map(d => d.id)));\n\n      stackData = nest()\n        .key(d => d.discrete)\n        .entries(data)\n        .map(d => d.values);\n\n      stackData.forEach(g => {\n        const ids = Array.from(new Set(g.map(d => d.id)));\n        if (ids.length < stackKeys.length) {\n          stackKeys.forEach(k => {\n            if (!ids.includes(k)) {\n              const d = data.filter(d => d.id === k)[0];\n              if (d.shape === \"Area\") {\n                const group = stackGroup(d.data, d.i);\n                const fillerPoint = {\n                  __d3plus__: true,\n                  data: d.data,\n                  discrete: d.shape === \"Bar\" ? `${g[0][this._discrete]}_${group}` : `${g[0][this._discrete]}`,\n                  group,\n                  id: k,\n                  shape: d.shape,\n                  [this._discrete]: g[0][this._discrete],\n                  [opp]: 0\n                };\n                data.push(fillerPoint);\n              }\n            }\n          });\n        }\n      });\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[this._discrete] - b[this._discrete]);\n      }\n\n      const order = this._stackOrder;\n\n      if (order instanceof Array) stackKeys.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n      else if (order === d3Shape.stackOrderNone) stackKeys.sort((a, b) => a.localeCompare(b));\n\n      stackData = d3Shape.stack()\n        .keys(stackKeys)\n        .offset(this._stackOffset)\n        .order(order instanceof Array ? d3Shape.stackOrderNone : order)\n        .value((group, key) => {\n          const d = group.filter(g => g.id === key);\n          return d.length ? d[0][opp] : 0;\n        })(stackData);\n\n      const discreteData = this._discrete === \"x\" ? xData : yData;\n\n      domains = {\n        [this._discrete]: !hasBars && this[`_${this._discrete}Time`] ? extent(discreteData) : discreteData,\n        [opp]: [min(stackData.map(g => min(g.map(p => p[0])))), max(stackData.map(g => max(g.map(p => p[1]))))]\n      };\n\n    }\n    else {\n\n      const discrete = this._discrete || \"x\";\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[discrete] - b[discrete]);\n      }\n\n      domains = {\n        x: (hasBars || !xTime) && this._discrete === \"x\" || this._xSort ? xData : extent(xData),\n        x2: (hasBars || !x2Time) && this._discrete === \"x\" || this._x2Sort ? x2Data : extent(x2Data),\n        y: (hasBars || !yTime) && this._discrete === \"y\" || this._ySort ? yData : extent(yData),\n        y2: (hasBars || !y2Time) && this._discrete === \"y\" || this._y2Sort ? y2Data : extent(y2Data)\n      };\n    }\n\n    /**\n     * Determins default scale type and domain for a given axis.\n     * @param {String} axis\n     * @private\n     */\n    function domainScaleSetup(axis) {\n\n      const domain = this[`_${axis}Domain`] ? this[`_${axis}Domain`].slice() : domains[axis],\n            domain2 = this[`_${axis}2Domain`] ? this[`_${axis}2Domain`].slice() : domains[`${axis}2`];\n\n      if (domain && domain[0] === void 0) domain[0] = domains[axis][0];\n      if (domain && domain[1] === void 0) domain[1] = domains[axis][1];\n\n      if (domain2 && domain2[0] === void 0) domain2[0] = domains[`${axis}2`][0];\n      if (domain2 && domain2[1] === void 0) domain2[1] = domains[`${axis}2`][1];\n\n      const scale = !hasBars && this[`_${axis}Time`] ? \"Time\" : this._discrete === axis || this[`_${axis}Sort`] ? \"Point\" : \"Linear\";\n\n      return [domain, scale, domain2, scale];\n\n    }\n\n    const [xAutoDomain, xScale, x2AutoDomain, x2Scale] = domainScaleSetup.bind(this)(\"x\");\n    const [yAutoDomain, yScale, y2AutoDomain, y2Scale] = domainScaleSetup.bind(this)(\"y\");\n\n    const autoScale = (axis, fallback) => {\n      const userScale = this[`_${axis}Config`].scale;\n      if (userScale === \"auto\") {\n        if (this._discrete === axis) return fallback;\n        const values = data.map(d => d[axis]);\n        return deviation(values) / mean(values) > 3 ? \"log\" : \"linear\";\n      }\n      return userScale || fallback;\n    };\n\n    const yConfigScale = this._yConfigScale = autoScale(\"y\", yScale).toLowerCase();\n    const y2ConfigScale = this._y2ConfigScale = autoScale(\"y2\", y2Scale).toLowerCase();\n    const xConfigScale = this._xConfigScale = autoScale(\"x\", xScale).toLowerCase();\n    const x2ConfigScale = this._x2ConfigScale = autoScale(\"x2\", x2Scale).toLowerCase();\n\n    domains = {x: xAutoDomain, x2: x2AutoDomain || xAutoDomain, y: yAutoDomain, y2: y2AutoDomain || yAutoDomain};\n    Object.keys(domains)\n      .forEach(axis => {\n        if (this[`_${axis}ConfigScale`] === \"log\" && domains[axis].includes(0)) {\n          if (min(domains[axis]) < 0) domains[axis][1] = max(data.map(d => d[axis]).filter(Boolean));\n          else domains[axis][0] = min(data.map(d => d[axis]).filter(Boolean));\n        }\n      });\n\n    opps.forEach(opp => {\n      if (this[`_${opp}Config`].domain) {\n        const d = this[`_${opp}Config`].domain;\n        if (this._discrete === \"x\") d.reverse();\n        domains[opp] = d;\n      }\n      else if (opp && this._baseline !== void 0) {\n        const b = this._baseline;\n        if (domains[opp] && domains[opp][0] > b) domains[opp][0] = b;\n        else if (domains[opp] && domains[opp][1] < b) domains[opp][1] = b;\n      }\n    });\n\n    let x = scales[`scale${xScale}`]().domain(domains.x).range(range(0, width + 1, width / (domains.x.length - 1))),\n        x2 = scales[`scale${x2Scale}`]().domain(domains.x2).range(range(0, width + 1, width / (domains.x2.length - 1))),\n        y = scales[`scale${yScale}`]().domain(domains.y.reverse()).range(range(0, height + 1, height / (domains.y.length - 1))),\n        y2 = scales[`scale${y2Scale}`]().domain(domains.y2.reverse()).range(range(0, height + 1, height / (domains.y2.length - 1)));\n\n    const shapeData = nest()\n      .key(d => d.shape)\n      .entries(data)\n      .sort((a, b) => this._shapeSort(a.key, b.key));\n\n    const oppScale = this._discrete === \"x\" ? yScale : xScale;\n    if (oppScale !== \"Point\") {\n      shapeData.forEach(d => {\n        if (this._buffer[d.key]) {\n          const res = this._buffer[d.key].bind(this)({data: d.values, x, y, yScale: yConfigScale, xScale: xConfigScale, config: this._shapeConfig[d.key]});\n          x = res[0];\n          y = res[1];\n          const res2 = this._buffer[d.key].bind(this)({data: d.values, x: x2, y: y2, yScale: y2ConfigScale, xScale: x2ConfigScale, x2: true, y2: true, config: this._shapeConfig[d.key]});\n          x2 = res2[0];\n          y2 = res2[1];\n        }\n      });\n    }\n\n    const xDomain = x.domain();\n    const x2Domain = x2.domain();\n    const yDomain = y.domain();\n    const y2Domain = y2.domain();\n\n    const defaultConfig = {\n      barConfig: {\"stroke-width\": 0},\n      gridSize: 0,\n      labels: [],\n      title: false,\n      tickSize: 0\n    };\n\n    const defaultX2Config = x2Exists ? {data: x2Data} : defaultConfig;\n    const defaultY2Config = y2Exists ? {data: y2Data} : defaultConfig;\n    const showX = this._discrete === \"x\" && this._width > this._discreteCutoff || this._width > this._xCutoff;\n    const showY = this._discrete === \"y\" && this._height > this._discreteCutoff || this._height > this._yCutoff;\n\n    const yC = {\n      data: yData,\n      locale: this._locale,\n      scalePadding: y.padding ? y.padding() : 0,\n      tickFormat: yTime ? d => formatDate(+d, yData.map(Number)) : RESET\n    };\n    if (!showX) {\n      yC.barConfig = {stroke: \"transparent\"};\n      yC.tickSize = 0;\n      yC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {width, y} = d.labelBounds;\n          const height = this._height / 2;\n          const x = i ? -height : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          verticalAlign: d => d.id === yTicks[0] ? \"top\" : \"bottom\"\n        },\n        labelRotation: false\n      };\n    }\n\n    const testGroup = elem(\"g.d3plus-plot-test\", {enter: {opacity: 0}, parent: this._select});\n\n    let x2Ticks = this._discrete === \"x\" ? domains.x2 : undefined,\n        xTicks = !showY ? extent(domains.x) : this._discrete === \"x\" ? domains.x : undefined,\n        y2Ticks = this._discrete === \"y\" ? domains.y2 : undefined,\n        yTicks = !showX ? extent(domains.y) : this._discrete === \"y\" ? domains.y : undefined;\n\n    /**\n     * Hides an axis' ticks and labels if they all exist as labels for the data to be displayed,\n     * primarily occuring in simple BarChart visualizations where the both the x-axis ticks and\n     * the Bar rectangles would be displaying the same text.\n     */\n\n    // generates an Array of String labels using the current label function for Bar shapes\n    const barConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Bar\");\n    const barLabelFunction = barConfig.label !== undefined\n      ? typeof barConfig.label === \"function\" ? barConfig.label : constant(barConfig.label)\n      : this._drawLabel;\n    const barLabels = this._filteredData.map((d, i) => barLabelFunction(d, i)).filter(d => typeof d === \"number\" || d).map(String);\n\n    // sets an axis' ticks to [] if the axis scale is \"Point\" (discrete) and every tick String\n    // is also in the barLabels Array\n    if (x2Scale === \"Point\" && x2Ticks instanceof Array && x2Ticks.every(t => barLabels.includes(`${t}`))) x2Ticks = [];\n    if (xScale === \"Point\" && xTicks instanceof Array && xTicks.every(t => barLabels.includes(`${t}`))) xTicks = [];\n    if (y2Scale === \"Point\" && y2Ticks instanceof Array && y2Ticks.every(t => barLabels.includes(`${t}`))) y2Ticks = [];\n    if (yScale === \"Point\" && yTicks instanceof Array && yTicks.every(t => barLabels.includes(`${t}`))) yTicks = [];\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    let yBounds = this._yTest.outerBounds();\n    let yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n\n    if (y2Exists) {\n      this._y2Test\n        .domain(y2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(y2Ticks)\n        .width(width)\n        .config(yC)\n        .config(defaultY2Config)\n        .config(this._y2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    let y2Bounds = this._y2Test.outerBounds();\n    let y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n    const xC = {\n      data: xData,\n      locale: this._locale,\n      scalePadding: x.padding ? x.padding() : 0,\n      tickFormat: xTime ? d => formatDate(+d, xData.map(Number)) : RESET\n    };\n    if (!showY) {\n      xC.barConfig = {stroke: \"transparent\"};\n      xC.tickSize = 0;\n      xC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {height, y} = d.labelBounds;\n          const width = this._width / 2;\n          const x = i ? -width : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          textAnchor: d => d.id === xTicks[0] ? \"start\" : \"end\"\n        },\n        labelRotation: false\n      };\n    }\n\n    let xRangeMax = undefined;\n\n    if (showX) {\n      this._xTest\n        .domain(xDomain)\n        .height(height)\n        .maxSize(height / 2)\n        .range([undefined, xRangeMax])\n        .select(testGroup.node())\n        .ticks(xTicks)\n        .width(width)\n        .config(xC)\n        .config(this._xConfig)\n        .scale(xConfigScale)\n        .render();\n    }\n\n    let largestLabel;\n    if (this._lineLabels) {\n      const lineData = nest()\n        .key(d => d.id)\n        .entries(data.filter(d => d.shape === \"Line\"));\n\n      if (lineData.length && lineData.length < this._dataCutoff) {\n\n        const userConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Line\");\n        testLineShape.config(userConfig);\n        const lineLabelConfig = testLineShape.labelConfig();\n        const fontSizeAccessor = lineLabelConfig.fontSize !== undefined ? lineLabelConfig.fontSize : testTextBox.fontSize();\n        const fontWeightAccessor = lineLabelConfig.fontWeight !== undefined ? lineLabelConfig.fontWeight : testTextBox.fontWeight();\n        const fontFamilyAccessor = lineLabelConfig.fontFamily !== undefined ? lineLabelConfig.fontFamily : testTextBox.fontFamily();\n        const paddingAccessor = lineLabelConfig.padding !== undefined ? lineLabelConfig.padding : testTextBox.padding();\n        const labelFunction = userConfig.label || this._drawLabel;\n\n        const xEstimate = d => {\n          if (xConfigScale === \"log\" && d === 0) d = xDomain[0] < 0 ? this._xTest._d3Scale.domain()[1] : this._xTest._d3Scale.domain()[0];\n          return this._xTest._getPosition.bind(this._xTest)(d);\n        };\n\n        const maxX = max(lineData.map(group => max(group.values.map(d => xEstimate(d.x)))));\n\n        const labelWidths = lineData.map(group => {\n\n          let d = group.values[group.values.length - 1];\n          let i;\n          while (d.__d3plus__ && d.data) {\n            d = d.data;\n            i = d.i;\n          }\n          const label = typeof labelFunction === \"function\" ? labelFunction(d, i) : labelFunction;\n\n          const fontSize = typeof fontSizeAccessor === \"function\" ? fontSizeAccessor(d, i) : fontSizeAccessor;\n          const fontWeight = typeof fontWeightAccessor === \"function\" ? fontWeightAccessor(d, i) : fontWeightAccessor;\n          let fontFamily = typeof fontFamilyAccessor === \"function\" ? fontFamilyAccessor(d, i) : fontFamilyAccessor;\n          if (fontFamily instanceof Array) fontFamily = fontFamily.map(f => `'${f}'`).join(\", \");\n          const labelPadding = typeof paddingAccessor === \"function\" ? paddingAccessor(d, i) : paddingAccessor;\n\n          const labelWidth = textWidth(label, {\n            \"font-size\": fontSize,\n            \"font-family\": fontFamily,\n            \"font-weight\": fontWeight\n          });\n\n          const myMaxX = max(group.values.map(d => xEstimate(d.x)));\n\n          return {\n            labelWidth: labelWidth + labelPadding * 2,\n            spaceNeeded: myMaxX - maxX + labelWidth + labelPadding * 2\n          };\n\n        });\n        largestLabel = max(labelWidths.map(d => d.labelWidth));\n        const spaceNeeded = max(labelWidths.map(d => d.spaceNeeded));\n        const labelSpace = min([spaceNeeded, width / 4]);\n        xRangeMax = width - labelSpace - this._margin.right;\n      }\n    }\n\n    if (showX && xRangeMax) {\n      this._xTest\n        .domain(xDomain)\n        .height(height)\n        .maxSize(height / 2)\n        .range([undefined, xRangeMax])\n        .select(testGroup.node())\n        .ticks(xTicks)\n        .width(width)\n        .config(xC)\n        .config(this._xConfig)\n        .scale(xConfigScale)\n        .render();\n    }\n\n    if (x2Exists) {\n      this._x2Test\n        .domain(x2Domain)\n        .height(height)\n        .range([undefined, xRangeMax])\n        .select(testGroup.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .tickSize(0)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    const xTestRange = this._xTest._getRange();\n    const x2TestRange = this._x2Test._getRange();\n\n    const x2Bounds = this._x2Test.outerBounds();\n    const x2Height = x2Exists ? x2Bounds.height + this._x2Test.padding() : 0;\n\n    let xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (showX) {\n      this._xTest\n        .range([xOffsetLeft, undefined])\n        .render();\n    }\n\n    const topOffset = showY ? this._yTest.shapeConfig().labelConfig.fontSize() / 2 : 0;\n\n    let xOffsetRight = max([y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xBounds = this._xTest.outerBounds();\n    const xHeight = xBounds.height + (showY ? this._xTest.padding() : 0);\n\n    this._padding.left += xOffsetLeft;\n    this._padding.right += xOffsetRight;\n    this._padding.bottom += xHeight;\n    this._padding.top += x2Height + topOffset;\n\n    super._draw(callback);\n\n    const horizontalMargin = this._margin.left + this._margin.right;\n    const verticalMargin = this._margin.top + this._margin.bottom;\n    let yRange = [x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range(yRange)\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    yBounds = this._yTest.outerBounds();\n    yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n    xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (y2Exists) {\n      this._y2Test\n        .config(yC)\n        .domain(y2Domain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(testGroup.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    y2Bounds = this._y2Test.outerBounds();\n    y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n    xOffsetRight = max([0, y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xRange = [xOffsetLeft, width - (xOffsetRight + horizontalMargin)];\n\n    const rectGroup = elem(\"g.d3plus-plot-background\", {parent, transition});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top + x2Height + topOffset})`;\n    const x2Transform = `translate(${this._margin.left}, ${this._margin.top + topOffset})`;\n\n    const xGroup = showX && elem(\"g.d3plus-plot-x-axis\", {parent, transition, enter: {transform}, update: {transform}});\n    const x2Group = x2Exists && elem(\"g.d3plus-plot-x2-axis\", {parent, transition, enter: {transform: x2Transform}, update: {transform: x2Transform}});\n\n    const xTrans = xOffsetLeft > yWidth ? xOffsetLeft - yWidth : 0;\n    const yTransform = `translate(${this._margin.left + xTrans}, ${this._margin.top + topOffset})`;\n    const yGroup = showY && elem(\"g.d3plus-plot-y-axis\", {parent, transition, enter: {transform: yTransform}, update: {transform: yTransform}});\n\n    const y2Transform = `translate(-${this._margin.right}, ${this._margin.top + topOffset})`;\n    const y2Group = y2Exists && elem(\"g.d3plus-plot-y2-axis\", {parent, transition, enter: {transform: y2Transform}, update: {transform: y2Transform}});\n\n    this._xAxis\n      .domain(xDomain)\n      .height(height - (x2Height + topOffset + verticalMargin))\n      .maxSize(height / 2)\n      .range(xRange)\n      .select(showX ? xGroup.node() : undefined)\n      .ticks(xTicks)\n      .width(width)\n      .config(xC)\n      .config(this._xConfig)\n      .scale(xConfigScale)\n      .render();\n\n    if (x2Exists) {\n      this._x2Axis\n        .domain(x2Domain)\n        .height(height - (xHeight + topOffset + verticalMargin))\n        .range(xRange)\n        .select(x2Group.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    this._xFunc = x = (d, x) => {\n      if (x === \"x2\") {\n        if (x2ConfigScale === \"log\" && d === 0) d = x2Domain[0] < 0 ? this._x2Axis._d3Scale.domain()[1] : this._x2Axis._d3Scale.domain()[0];\n        return this._x2Axis._getPosition.bind(this._x2Axis)(d);\n      }\n      else {\n        if (xConfigScale === \"log\" && d === 0) d = xDomain[0] < 0 ? this._xAxis._d3Scale.domain()[1] : this._xAxis._d3Scale.domain()[0];\n        return this._xAxis._getPosition.bind(this._xAxis)(d);\n      }\n    };\n\n    yRange = [this._xAxis.outerBounds().y + x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    this._yAxis\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range(yRange)\n      .select(showY ? yGroup.node() : undefined)\n      .ticks(yTicks)\n      .width(xRange[xRange.length - 1])\n      .config(yC)\n      .config(this._yConfig)\n      .scale(yConfigScale)\n      .render();\n\n    if (y2Exists) {\n      this._y2Axis\n        .config(yC)\n        .domain(y2Exists ? y2Domain : yDomain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(y2Group.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    this._yFunc = y = (d, y) => {\n      if (y === \"y2\") {\n        if (y2ConfigScale === \"log\" && d === 0) d = y2Domain[1] < 0 ? this._y2Axis._d3ScaleNegative.domain()[0] : this._y2Axis._d3Scale.domain()[1];\n        return this._y2Axis._getPosition.bind(this._y2Axis)(d) - x2Height;\n      }\n      else {\n        if (yConfigScale === \"log\" && d === 0) d = yDomain[1] < 0 ? this._yAxis._d3ScaleNegative.domain()[0] : this._yAxis._d3Scale.domain()[1];\n        return this._yAxis._getPosition.bind(this._yAxis)(d) - x2Height;\n      }\n    };\n\n    new shapes.Rect()\n      .data([{}])\n      .select(rectGroup.node())\n      .x(xRange[0] + (xRange[1] - xRange[0]) / 2)\n      .width(xRange[1] - xRange[0])\n      .y(this._margin.top + topOffset + yRange[0] + (yRange[1] - yRange[0]) / 2)\n      .height(yRange[1] - yRange[0])\n      .config(this._backgroundConfig)\n      .render();\n\n    const annotationGroup = elem(\"g.d3plus-plot-annotations\", {parent, transition, enter: {transform}, update: {transform}}).node();\n    this._annotations.forEach(annotation => {\n      new shapes[annotation.shape]()\n        .config(annotation)\n        .config({\n          x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          x0: this._discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(domains.x[0]),\n          x1: this._discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n          y0: this._discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(domains.y[1]) - yOffset,\n          y1: this._discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n        })\n        .select(annotationGroup)\n        .render();\n    });\n\n    let yOffset = this._xAxis.barConfig()[\"stroke-width\"];\n    if (yOffset) yOffset /= 2;\n\n    const discrete = this._discrete || \"x\";\n\n    const shapeConfig = {\n      discrete: this._discrete,\n      duration: this._duration,\n      label: d => this._drawLabel(d.data, d.i),\n      select: elem(\"g.d3plus-plot-shapes\", {parent, transition, enter: {transform}, update: {transform}}).node(),\n      x: d => d.x2 !== undefined ? x(d.x2, \"x2\") : x(d.x),\n      x0: discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(typeof this._baseline === \"number\" ? this._baseline : domains.x[0]),\n      x1: discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      y: d => d.y2 !== undefined ? y(d.y2, \"y2\") : y(d.y),\n      y0: discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(typeof this._baseline === \"number\" ? this._baseline : domains.y[1]) - yOffset,\n      y1: discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n    };\n\n    if (this._stacked) {\n      const scale = opp === \"x\" ? x : y;\n      shapeConfig[`${opp}`] = shapeConfig[`${opp}0`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][0]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n      shapeConfig[`${opp}1`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][1]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n    }\n\n    const events = Object.keys(this._on);\n    shapeData.forEach(d => {\n\n      const s = new shapes[d.key]().config(shapeConfig).data(d.values);\n\n      if (d.key === \"Bar\") {\n\n        let space;\n        const scale = this._discrete === \"x\" ? x : y;\n        const scaleType = this._discrete === \"x\" ? xScale : yScale;\n        const vals = this._discrete === \"x\" ? xDomain : yDomain;\n        const range = this._discrete === \"x\" ? xRange : yRange;\n        if (scaleType !== \"Point\" && vals.length === 2) {\n          space = (scale(d.values[this._discrete === \"x\" ? 0 : d.values.length - 1][this._discrete]) - scale(vals[0])) * 2;\n        }\n        else if (vals.length > 1) space = scale(vals[1]) - scale(vals[0]);\n        else space = range[range.length - 1] - range[0];\n        if (this._groupPadding < space) space -= this._groupPadding;\n\n        let barSize = space || 1;\n\n        const groups = nest()\n          .key(d => d[this._discrete])\n          .key(d => d.group)\n          .entries(d.values);\n\n        const ids = merge(groups.map(d => d.values.map(v => v.key)));\n        const uniqueIds = Array.from(new Set(ids));\n\n        if (max(groups.map(d => d.values.length)) === 1) {\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i));\n        }\n        else {\n\n          barSize = (barSize - this._barPadding * uniqueIds.length - 1) / uniqueIds.length;\n\n          const offset = space / 2 - barSize / 2;\n\n          const xMod = scales.scaleLinear()\n            .domain([0, uniqueIds.length - 1])\n            .range([-offset, offset]);\n\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i) + xMod(uniqueIds.indexOf(d.group)));\n\n        }\n\n        s.width(barSize);\n        s.height(barSize);\n\n      }\n      else if (d.key === \"Line\") {\n\n        s.duration(width * 1.5);\n\n        if (this._confidence) {\n          const areaConfig = Object.assign({}, shapeConfig);\n          const discrete = this._discrete || \"x\";\n          const key = discrete === \"x\" ? \"y\" : \"x\";\n          const scaleFunction = discrete === \"x\" ? y : x;\n          areaConfig[`${key}0`] = d => scaleFunction(this._confidence[0] ? d.lci : d[key]);\n          areaConfig[`${key}1`] = d => scaleFunction(this._confidence[1] ? d.hci : d[key]);\n\n          const area = new shapes.Area().config(areaConfig).data(d.values);\n          const confidenceConfig = Object.assign(this._shapeConfig, this._confidenceConfig);\n\n          area\n            .config(assign(configPrep.bind(this)(confidenceConfig, \"shape\", \"Line\"), configPrep.bind(this)(confidenceConfig, \"shape\", \"Area\")))\n            .render();\n\n          this._shapes.push(area);\n        }\n\n        s.config({\n          discrete: shapeConfig.discrete || \"x\",\n          label: this._lineLabels ? this._drawLabel : false,\n          labelBounds: this._lineLabels ? (d, i, s) => {\n            const [firstX, firstY] = s.points[0];\n            const [lastX, lastY] = s.points[s.points.length - 1];\n            const height = this._height / 4;\n            return {\n              x: lastX - firstX,\n              y: lastY - firstY - height / 2,\n              width: largestLabel,\n              height\n            };\n          } : false\n        });\n\n      }\n\n      const classEvents = events.filter(e => e.includes(`.${d.key}`)),\n            globalEvents = events.filter(e => !e.includes(\".\")),\n            shapeEvents = events.filter(e => e.includes(\".shape\"));\n      for (let e = 0; e < globalEvents.length; e++) s.on(globalEvents[e], (d, i, x, event) => this._on[globalEvents[e]](d.data, d.i, x, event));\n      for (let e = 0; e < shapeEvents.length; e++) s.on(shapeEvents[e], (d, i, x, event) => this._on[shapeEvents[e]](d.data, d.i, x, event));\n      for (let e = 0; e < classEvents.length; e++) s.on(classEvents[e], (d, i, x, event) => this._on[classEvents[e]](d.data, d.i, x, event));\n\n      const userConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", d.key);\n      if (this._shapeConfig.duration === undefined) delete userConfig.duration;\n      s.config(userConfig).render();\n\n      this._shapes.push(s);\n\n      if (d.key === \"Line\" && this._lineMarkers) {\n        const markers = new shapes.Circle()\n          .data(d.values)\n          .config(shapeConfig)\n          .config(this._lineMarkerConfig)\n          .id(d => `${d.id}_${d.discrete}`);\n\n        for (let e = 0; e < globalEvents.length; e++) markers.on(globalEvents[e], (d, i, x, event) => this._on[globalEvents[e]](d.data, d.i, x, event));\n        for (let e = 0; e < shapeEvents.length; e++) markers.on(shapeEvents[e], (d, i, x, event) => this._on[shapeEvents[e]](d.data, d.i, x, event));\n        for (let e = 0; e < classEvents.length; e++) markers.on(classEvents[e], (d, i, x, event) => this._on[classEvents[e]](d.data, d.i, x, event));\n\n        markers.render();\n        this._shapes.push(markers);\n      }\n\n    });\n\n    const dataShapes = shapeData.map(d => d.key);\n    if (dataShapes.includes(\"Line\")) {\n      if (this._confidence) dataShapes.push(\"Area\");\n      if (this._labelMarkers) dataShapes.push(\"Circle\");\n    }\n    const exitShapes = this._previousShapes.filter(d => !dataShapes.includes(d));\n\n    exitShapes.forEach(shape => {\n      new shapes[shape]()\n        .config(shapeConfig)\n        .data([])\n        .render();\n    });\n\n    this._previousShapes = dataShapes;\n\n    return this;\n\n  }\n\n  /**\n      @memberof Plot\n      @desc Allows drawing custom shapes to be used as annotations in the provided x/y plot. This method accepts custom config objects for the [Shape](http://d3plus.org/docs/#Shape) class, either a single config object or an array of config objects. Each config object requires an additional parameter, the \"shape\", which denotes which [Shape](http://d3plus.org/docs/#Shape) sub-class to use ([Rect](http://d3plus.org/docs/#Rect), [Line](http://d3plus.org/docs/#Line), etc). Annotations will be drawn underneath the data to be displayed.\n      @param {Array|Object} *annotations* = []\n      @chainable\n  */\n  annotations(_) {\n    return arguments.length ? (this._annotations = _ instanceof Array ? _ : [_], this) : this._annotations;\n  }\n\n  /**\n       @memberof Plot\n       @desc A d3plus-shape configuration Object used for styling the background rectangle of the inner x/y plot (behind all of the shapes and gridlines).\n       @param {Object} [*value*]\n       @chainable\n   */\n  backgroundConfig(_) {\n    return arguments.length ? (this._backgroundConfig = assign(this._backgroundConfig, _), this) : this._backgroundConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between each bar in a group of bars.\n      @param {Number} *value* = 0\n      @chainable\n  */\n  barPadding(_) {\n    return arguments.length ? (this._barPadding = _, this) : this._barPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the baseline for the x/y plot. If *value* is not specified, returns the current baseline.\n      @param {Number} *value*\n      @chainable\n  */\n  baseline(_) {\n    return arguments.length ? (this._baseline = _, this) : this._baseline;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the confidence to the specified array of lower and upper bounds.\n       @param {String[]|Function[]} *value*\n       @chainable\n       @example <caption>Can be called with accessor functions or static keys:</caption>\n       var data = {id: \"alpha\", value: 10, lci: 9, hci: 11};\n       ...\n       // Accessor functions\n       .confidence([function(d) { return d.lci }, function(d) { return d.hci }])\n\n       // Or static keys\n       .confidence([\"lci\", \"hci\"])\n   */\n  confidence(_) {\n    if (arguments.length && _ instanceof Array) {\n      this._confidence = [];\n      const lower = _[0];\n      this._confidence[0] = typeof lower === \"function\" || !lower ? lower : accessor(lower);\n      const upper = _[1];\n      this._confidence[1] = typeof upper === \"function\" || !upper ? upper : accessor(upper);\n\n      return this;\n    }\n    else return this._confidence;\n  }\n\n  /**\n       @memberof Plot\n       @desc If *value* is specified, sets the config method for each shape rendered as a confidence interval and returns the current class instance.\n       @param {Object} [*value*]\n       @chainable\n   */\n  confidenceConfig(_) {\n    return arguments.length ? (this._confidenceConfig = assign(this._confidenceConfig, _), this) : this._confidenceConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the discrete axis to the specified string. If *value* is not specified, returns the current discrete axis.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width or height of the chart is less than or equal to this pixel value, the discrete axis will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  discreteCutoff(_) {\n    return arguments.length ? (this._discreteCutoff = _, this) : this._discreteCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between groups of bars.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  groupPadding(_) {\n    return arguments.length ? (this._groupPadding = _, this) : this._groupPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Draws labels on the right side of any Line shapes that are drawn on the plot.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  lineLabels(_) {\n    return arguments.length ? (this._lineLabels = _, this) : this._lineLabels;\n  }\n\n  /**\n      @memberof Plot\n      @desc Shape config for the Circle shapes drawn by the lineMarkers method.\n      @param {Object} *value*\n      @chainable\n  */\n  lineMarkerConfig(_) {\n    return arguments.length ? (this._lineMarkerConfig = assign(this._lineMarkerConfig, _), this) : this._lineMarkerConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Draws circle markers on each vertex of a Line.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  lineMarkers(_) {\n    return arguments.length ? (this._lineMarkers = _, this) : this._lineMarkers;\n  }\n\n  /**\n      @memberof Plot\n      @desc A JavaScript [sort comparator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) that receives each shape Class (ie. \"Circle\", \"Line\", etc) as it's comparator arguments. Shapes are drawn in groups based on their type, so you are defining the layering order for all shapes of said type.\n      @param {Function} *value*\n      @chainable\n  */\n  shapeSort(_) {\n    return arguments.length ? (this._shapeSort = _, this) : this._shapeSort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size of bubbles to the given Number, data key, or function.\n      @param {Function|Number|String} *value* = 10\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale maximum to the specified number.\n      @param {Number} *value* = 20\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale minimum to the specified number.\n      @param {Number} *value* = 5\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale to the specified string.\n      @param {String} *value* = \"sqrt\"\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Plot\n      @desc If *value* is specified, toggles shape stacking. If *value* is not specified, returns the current stack value.\n      @param {Boolean} *value* = false\n      @chainable\n  */\n  stacked(_) {\n    return arguments.length ? (this._stacked = _, this) : this._stacked;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack offset. If *value* is not specified, returns the current stack offset function.\n      @param {Function|String} *value* = \"descending\"\n      @chainable\n  */\n  stackOffset(_) {\n    return arguments.length ? (this._stackOffset = typeof _ === \"function\" ? _ : d3Shape[`stackOffset${_.charAt(0).toUpperCase() + _.slice(1)}`], this) : this._stackOffset;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack order. If *value* is not specified, returns the current stack order function.\n      @param {Function|String|Array} *value* = \"none\"\n      @chainable\n  */\n  stackOrder(_) {\n    if (arguments.length) {\n      if (typeof _ === \"string\") this._stackOrder = _ === \"ascending\" ? stackOrderAscending : _ === \"descending\" ? stackOrderDescending : d3Shape[`stackOrder${_.charAt(0).toUpperCase() + _.slice(1)}`];\n      else this._stackOrder = _;\n      return this;\n    }\n    else return this._stackOrder;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x accessor to the specified function or number. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        this._xKey = _;\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 accessor to the specified function or number. If *value* is not specified, returns the current x2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  x2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x2 = _;\n      else {\n        this._x2 = accessor(_);\n        this._x2Key = _;\n      }\n      return this;\n    }\n    else return this._x2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  xConfig(_) {\n    return arguments.length ? (this._xConfig = assign(this._xConfig, _), this) : this._xConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width of the chart is less than or equal to this pixel value, and the x-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  xCutoff(_) {\n    return arguments.length ? (this._xCutoff = _, this) : this._xCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  x2Config(_) {\n    return arguments.length ? (this._x2Config = assign(this._x2Config, _), this) : this._x2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x domain to the specified array. If *value* is not specified, returns the current x domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  xDomain(_) {\n    return arguments.length ? (this._xDomain = _, this) : this._xDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 domain to the specified array. If *value* is not specified, returns the current x2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  x2Domain(_) {\n    return arguments.length ? (this._x2Domain = _, this) : this._x2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete x axes.\n      @param {Function} *value*\n      @chainable\n  */\n  xSort(_) {\n    return arguments.length ? (this._xSort = _, this) : this._xSort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete x2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  x2Sort(_) {\n    return arguments.length ? (this._x2Sort = _, this) : this._x2Sort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y accessor to the specified function or number. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        this._yKey = _;\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 accessor to the specified function or number. If *value* is not specified, returns the current y2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  y2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y2 = _;\n      else {\n        this._y2 = accessor(_);\n        this._y2Key = _;\n      }\n      return this;\n    }\n    else return this._y2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n\n*Note:* If a \"domain\" array is passed to the y-axis config, it will be reversed.\n      @param {Object} *value*\n      @chainable\n  */\n  yConfig(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._yConfig = assign(this._yConfig, _);\n      return this;\n    }\n    return this._yConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the height of the chart is less than or equal to this pixel value, and the y-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  yCutoff(_) {\n    return arguments.length ? (this._yCutoff = _, this) : this._yCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  y2Config(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._y2Config = assign(this._y2Config, _);\n      return this;\n    }\n    return this._y2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y domain to the specified array. If *value* is not specified, returns the current y domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  yDomain(_) {\n    return arguments.length ? (this._yDomain = _, this) : this._yDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 domain to the specified array. If *value* is not specified, returns the current y2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  y2Domain(_) {\n    return arguments.length ? (this._y2Domain = _, this) : this._y2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete y axes.\n      @param {Function} *value*\n      @chainable\n  */\n  ySort(_) {\n    return arguments.length ? (this._ySort = _, this) : this._ySort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete y2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  y2Sort(_) {\n    return arguments.length ? (this._y2Sort = _, this) : this._y2Sort;\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class AreaPlot\n    @extends Plot\n    @desc Creates an area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Area\")\n*/\nexport default class AreaPlot extends Plot {\n\n  /**\n      @memberof AreaPlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Area\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BarChart\n    @extends Plot\n    @desc Creates a bar chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Bar\")\n*/\nexport default class BarChart extends Plot {\n\n  /**\n      @memberof BarChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    const defaultLegend = this._legend;\n    this._legend = (config, arr) => {\n      const legendIds = arr.map(this._groupBy[this._legendDepth].bind(this)).sort().join();\n      const barIds = this._filteredData.map(this._groupBy[this._legendDepth].bind(this)).sort().join();\n      if (legendIds === barIds) return false;\n      return defaultLegend.bind(this)(config, arr);\n    };\n    this._shape = constant(\"Bar\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {assign, constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BoxWhisker\n    @extends Plot\n    @desc Creates a simple box and whisker based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Box\")\n*/\nexport default class BoxWhisker extends Plot {\n\n  /**\n      @memberof BoxWhisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Box\");\n    this.x(\"x\");\n\n    this._tooltipConfig = assign(this._tooltipConfig, {\n      title: (d, i) => {\n        if (!d) return \"\";\n        while (d.__d3plus__ && d.data) {\n          d = d.data;\n          i = d.i;\n        }\n        if (this._label) return this._label(d, i);\n        const l = this._ids(d, i).slice(0, this._drawDepth);\n        return l[l.length - 1];\n      }\n    });\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BumpChart\n    @extends Plot\n    @desc Creates a bump chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n  .x(\"x\")\n  .y2(d => this._y(d))\n  .yConfig({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const startData = data.filter(d => d.x === xDomain[0]);\n      const d = startData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .y2Config({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const endData = data.filter(d => d.x === xDomain[xDomain.length - 1]);\n      const d = endData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .ySort((a, b) => b.y - a.y)\n  .y2Sort((a, b) => b.y - a.y)\n*/\nexport default class BumpChart extends Plot {\n\n  /**\n      @memberof BumpChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n    this.y2(d => this._y(d));\n\n    this.yConfig({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMin = data[0].x instanceof Date ? data[0].x.getTime() : data[0].x;\n        const startData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMin);\n        const d = startData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.y2Config({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMax = data[data.length - 1].x instanceof Date ? data[data.length - 1].x.getTime() : data[data.length - 1].x;\n        const endData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMax);\n        const d = endData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.ySort((a, b) => this._y(b) - this._y(a));\n    this.y2Sort((a, b) => this._y(b) - this._y(a));\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class LinePlot\n    @extends Plot\n    @desc Creates a line plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n*/\nexport default class LinePlot extends Plot {\n\n  /**\n      @memberof LinePlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {min, max, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {pointer} from \"d3-selection\";\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path, Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class Radar\n    @extends Viz\n    @desc Creates a radar visualization based on an array of data.\n*/\nexport default class Radar extends Viz {\n\n  /**\n      @memberof Radar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Viz.\n      @private\n  */\n  constructor() {\n    super();\n\n    this._axisConfig = {\n      shapeConfig: {\n        fill: constant(\"none\"),\n        labelConfig: {\n          fontColor: \"#999\",\n          padding: 0,\n          textAnchor: (d, i, x) => x.textAnchor,\n          verticalAlign: \"middle\"\n        },\n        stroke: \"#eee\",\n        strokeWidth: constant(1)\n      }\n    };\n    this._discrete = \"metric\";\n    this._levels = 6;\n    this._metric = accessor(\"metric\");\n    this._outerPadding = 100;\n    this._shape = constant(\"Path\");\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const radius = min([height, width]) / 2 - this._outerPadding,\n          transform = `translate(${width / 2}, ${height / 2})`;\n\n    const nestedAxisData = nest()\n        .key(this._metric)\n        .entries(this._filteredData),\n          nestedGroupData = nest()\n        .key(this._id)\n        .key(this._metric)\n        .entries(this._filteredData);\n\n    const maxValue = max(nestedGroupData.map(h => h.values.map(d => sum(d.values, (x, i) => this._value(x, i)))).flat());\n\n    const circularAxis = Array.from(Array(this._levels).keys()).map(d => ({\n      id: d,\n      r: radius * ((d + 1) / this._levels)\n    }));\n\n    const circleConfig = configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Circle\");\n    delete circleConfig.label;\n\n    new Circle()\n      .data(circularAxis)\n      .select(\n        elem(\"g.d3plus-Radar-radial-circles\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(circleConfig)\n      .render();\n\n    const totalAxis = nestedAxisData.length;\n    const polarAxis = nestedAxisData\n      .map((d, i) => {\n        const width = this._outerPadding;\n        const fontSize =\n          this._shapeConfig.labelConfig.fontSize &&\n            this._shapeConfig.labelConfig.fontSize(d, i) ||\n          11;\n\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 10,\n              quadrant = parseInt(360 - 360 / totalAxis * i / 90, 10) % 4 + 1,\n              radians = tau / totalAxis * i;\n\n        let angle = 360 / totalAxis * i;\n\n        let textAnchor = \"start\";\n        let x = padding;\n\n        if (quadrant === 2 || quadrant === 3) {\n          x = -width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        const labelBounds = {\n          x,\n          y: -height / 2,\n          width,\n          height\n        };\n\n        return {\n          __d3plus__: true,\n          data: merge(d.values, this._aggs),\n          i,\n          id: d.key,\n          angle,\n          textAnchor,\n          labelBounds,\n          rotateAnchor: [-x, height / 2],\n          x: radius * Math.cos(radians),\n          y: radius * Math.sin(radians)\n        };\n      })\n      .sort((a, b) => a.key - b.key);\n\n    new Rect()\n      .data(polarAxis)\n      .rotate(d => d.angle || 0)\n      .width(0)\n      .height(0)\n      .x(d => d.x)\n      .y(d => d.y)\n      .label(d => d.id)\n      .labelBounds(d => d.labelBounds)\n      .labelConfig(this._axisConfig.shapeConfig.labelConfig)\n      .select(\n        elem(\"g.d3plus-Radar-text\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n    new Path()\n      .data(polarAxis)\n      .d(d => `M${0},${0} ${-d.x},${-d.y}`)\n      .select(\n        elem(\"g.d3plus-Radar-axis\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Path\"))\n      .render();\n\n    const groupData = nestedGroupData.map(h => {\n\n      const q = h.values.map((d, i) => {\n        const value = sum(d.values, (x, i) => this._value(x, i));\n        const r = value / maxValue * radius,\n              radians = tau / totalAxis * i;\n        return {\n          x: r * Math.cos(radians),\n          y: r * Math.sin(radians)\n        };\n      });\n\n      const d = `M ${q[0].x} ${q[0].y} ${q\n        .map(l => `L ${l.x} ${l.y}`)\n        .join(\" \")} L ${q[0].x} ${q[0].y}`;\n\n      return {\n        arr: h.values.map(d => merge(d.values, this._aggs)),\n        id: h.key,\n        points: q,\n        d,\n        __d3plus__: true,\n        data: merge(h.values.map(d => merge(d.values, this._aggs)), this._aggs)\n      };\n\n    });\n\n    const pathConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\");\n    const events = Object.keys(pathConfig.on);\n    pathConfig.on = {};\n    for (let e = 0; e < events.length; e++) {\n      const event = events[e];\n      pathConfig.on[event] = (d, i, s, e) => {\n        const x = d.points.map(p => p.x + width / 2);\n        const y = d.points.map(p => p.y + height / 2);\n        const cursor = pointer(e, this._select.node());\n        const xDist = x.map(p => Math.abs(p - cursor[0]));\n        const yDist = y.map(p => Math.abs(p - cursor[1]));\n        const dists = xDist.map((d, i) => d + yDist[i]);\n        this._on[event].bind(this)(d.arr[dists.indexOf(min(dists))], i, s, e);\n      };\n    }\n\n    this._shapes.push(\n      new Path()\n        .data(groupData)\n        .d(d => d.d)\n        .select(\n          elem(\"g.d3plus-Radar-items\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(pathConfig)\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Radar\n      @desc Sets the config method used for the radial spokes, circles, and labels.\n      @param {Object} *value*\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof Radar\n      @desc Defines the value used as axis. If *value* is specified, sets the accessor to the specified metric function. If *value* is not specified, returns the current metric accessor.\n      @param {Function|String} *value*\n      @chainable\n  */\n  metric(_) {\n    return arguments.length ? (this._metric = typeof _ === \"function\" ? _ : accessor(_), this) : this._metric;\n  }\n\n  /**\n      @memberof Radar\n      @desc Determines how much pixel spaces to give the outer labels.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  outerPadding(_) {\n    return arguments.length ? (this._outerPadding = _, this) : this._outerPadding;\n  }\n\n  /**\n      @memberof Radar\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n\n}\n","import {default as AreaPlot} from \"./AreaPlot\";\n\n/**\n    @class StackedArea\n    @extends Area\n    @desc Creates a stacked area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.AreaPlot()\n  .stacked(true)\n*/\nexport default class StackedArea extends AreaPlot {\n\n  /**\n      @memberof StackedArea\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._stacked = true;\n\n  }\n\n}\n"],"names":["scale","data","discrete","padding","closest","map","d","reduce","acc","curr","i","arr","prev","domain","slice","reverse","Date","x","y","x2","y2","buffer","xKey","yKey","oppScale","_discrete","oppDomain","isDiscreteX","negVals","posVals","_stacked","groupedData","nest","key","group","entries","values","sum","filter","bMax","max","invert","bMin","min","discreteBuffer","floor10","v","Math","pow","floor","log10","abs","ceil10","ceil","axis","value","size","range","index","isNaN","mod","parseFloat","toPrecision","replace","logMod","log","needsBuffer","tempAxis","copy","diverging","r","percentScale","scaleLog","leftPercentage","zero","outside","tempRange","pixelValue","yScale","xScale","config","xD","yD","xR","yR","forEach","s","numericBuffer","vals","b","w","width","h","height","testLineShape","shapes.Line","testTextBox","TextBox","defaultSize","_sizeScaleD3","_size","stackOrderAscending","series","sums","stackSum","keys","split","d3Shape.stackOrderNone","sort","a","localeCompare","stackOrderDescending","n","length","stackOffsetDiverging","order","dy","yn","yp","m","j","other","charAt","nonDiscrete","_d3Scale","negative","_getPosition","space","pos","Plot","_annotations","_backgroundConfig","duration","fill","_barPadding","_buffer","Bar","BarBuffer","Box","BoxBuffer","Circle","CircleBuffer","Line","LineBuffer","Rect","RectBuffer","_confidenceConfig","c","_shapeConfig","stroke","fillOpacity","constant","_discreteCutoff","_groupPadding","_lineMarkerConfig","colorAssign","_id","_lineMarkers","_previousShapes","_shape","assign","Area","label","_drawLabel","labelBounds","aes","shapes.largestRect","points","angle","cx","cy","labelConfig","fontMin","fontResize","ariaLabel","ariaLabelStr","nested","_x","undefined","_y","_x2","_y2","bind","fontMax","fontColor","colorDefaults","dark","colorContrast","fontStroke","fontStrokeWidth","textAnchor","verticalAlign","curve","toUpperCase","colorLegible","strokeWidth","_shapeOrder","_shapeSort","indexOf","_sizeMax","_sizeMin","_sizeScale","_stackOffset","_stackOrder","_timelineConfig","brushing","accessor","_xAxis","AxisBottom","align","_xTest","gridSize","_xConfig","gridConfig","id","_xCutoff","_x2Axis","AxisTop","_x2Test","_x2Config","_yAxis","AxisLeft","_yTest","_yConfig","_yCutoff","_y2Axis","AxisRight","_y2Test","_y2Config","k","str","_aggs","Array","from","Set","title","callback","_filteredData","stackGroup","_groupBy","_ids","join","__d3plus__","hci","_confidence","_drawDepth","lci","shape","_formattedData","rExtent","extent","scales","x2Exists","some","y2Exists","_height","_margin","top","bottom","opp","opp2","opps","parent","_select","transition","_transition","_width","left","right","x2Time","_x2Time","_time","xTime","_xTime","y2Time","_y2Time","yTime","_yTime","date","getValues","axisData","concat","unique","xData","x2Data","yData","y2Data","hasBars","discreteKeys","domains","stackData","stackKeys","groupValues","obj","dd","a1","b1","g","ids","includes","fillerPoint","push","d3Shape.stack","offset","discreteData","p","_xSort","_x2Sort","_ySort","_y2Sort","domainScaleSetup","domain2","xAutoDomain","x2AutoDomain","x2Scale","yAutoDomain","y2AutoDomain","y2Scale","autoScale","fallback","userScale","deviation","mean","yConfigScale","_yConfigScale","toLowerCase","y2ConfigScale","_y2ConfigScale","xConfigScale","_xConfigScale","x2ConfigScale","_x2ConfigScale","Object","Boolean","_baseline","shapeData","res","res2","xDomain","x2Domain","yDomain","y2Domain","defaultConfig","barConfig","labels","tickSize","defaultX2Config","defaultY2Config","showX","showY","yC","locale","_locale","scalePadding","tickFormat","formatDate","Number","RESET","shapeConfig","rotate","yTicks","labelRotation","testGroup","elem","enter","opacity","x2Ticks","xTicks","y2Ticks","configPrep","barLabelFunction","barLabels","String","every","t","maxSize","select","node","ticks","render","yBounds","outerBounds","yWidth","y2Bounds","y2Width","xC","xRangeMax","largestLabel","_lineLabels","lineData","_dataCutoff","userConfig","lineLabelConfig","fontSizeAccessor","fontSize","fontWeightAccessor","fontWeight","fontFamilyAccessor","fontFamily","paddingAccessor","labelFunction","xEstimate","maxX","labelWidths","f","labelPadding","labelWidth","textWidth","myMaxX","spaceNeeded","labelSpace","xTestRange","_getRange","x2TestRange","x2Bounds","x2Height","xOffsetLeft","topOffset","xOffsetRight","xBounds","xHeight","_padding","horizontalMargin","verticalMargin","yRange","xRange","rectGroup","transform","x2Transform","xGroup","update","x2Group","xTrans","yTransform","yGroup","y2Transform","y2Group","_xFunc","_yFunc","_d3ScaleNegative","shapes.Rect","annotationGroup","annotation","shapes","x0","x1","y0","yOffset","y1","_duration","dataIndex","discreteIndex","events","_on","scaleType","barSize","groups","merge","uniqueIds","xMod","scales.scaleLinear","areaConfig","scaleFunction","area","shapes.Area","confidenceConfig","_shapes","firstX","firstY","lastX","lastY","classEvents","e","globalEvents","shapeEvents","on","event","markers","shapes.Circle","dataShapes","_labelMarkers","exitShapes","_","arguments","lower","upper","d3Shape","_xKey","_x2Key","_xDomain","_x2Domain","_yKey","_y2Key","_yDomain","_y2Domain","Viz","AreaPlot","BarChart","defaultLegend","_legend","legendIds","_legendDepth","barIds","BoxWhisker","_tooltipConfig","_label","l","BumpChart","yConfig","val","xMin","getTime","startData","find","y2Config","xMax","endData","ySort","y2Sort","LinePlot","tau","PI","Radar","_axisConfig","_levels","_metric","_outerPadding","_value","radius","nestedAxisData","nestedGroupData","maxValue","flat","circularAxis","circleConfig","totalAxis","polarAxis","lineHeight","quadrant","parseInt","radians","rotateAnchor","cos","sin","Path","groupData","q","pathConfig","cursor","pointer","xDist","yDist","dists","StackedArea"],"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"}