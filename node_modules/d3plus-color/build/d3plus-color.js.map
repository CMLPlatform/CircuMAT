{"version":3,"file":"d3plus-color.js","sources":["../src/add.js","../src/defaults.js","../src/assign.js","../src/contrast.js","../src/legible.js","../src/lighter.js","../src/subtract.js"],"sourcesContent":["import {hsl} from \"d3-color\";\n\n/**\n    @function colorAdd\n    @desc Adds two colors together.\n    @param {String} c1 The first color, a valid CSS color string.\n    @param {String} c2 The second color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = Math.abs(c2.h * o2 - c1.h * o1);\n  if (d > 180) d -= 360;\n  let h = (Math.min(c1.h, c2.h) + d / 2) % 360;\n  const l = c1.l + (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s + (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 + (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n","import {scaleOrdinal} from \"d3-scale\";\n\n/**\n    @namespace {Object} colorDefaults\n    @desc A set of default color values used when assigning colors based on data.\n      *\n      * | Name | Default | Description |\n      * |---|---|---|\n      * | dark | \"#555555\" | Used in the [contrast](#contrast) function when the color given is very light. |\n      * | light | \"#f7f7f7\" | Used in the [contrast](#contrast) function when the color given is very dark. |\n      * | missing | \"#cccccc\" | Used in the [assign](#assign) function when the value passed is `null` or `undefined`. |\n      * | off | \"#C44536\" | Used in the [assign](#assign) function when the value passed is `false`. |\n      * | on | \"#6A994E\" | Used in the [assign](#assign) function when the value passed is `true`. |\n      * | scale | \"#4281A4\", \"#F6AE2D\", \"#C44536\", \"#2A9D8F\", \"#6A994E\", \"#CEB54A\", \"#5E548E\", \"#C08497\", \"#99582A\", \"#8C8C99\", \"#1D3557\", \"#D08C60\", \"#6D2E46\", \"#8BB19C\", \"#52796F\", \"#5E60CE\", \"#985277\", \"#5C374C\" | An ordinal scale used in the [assign](#assign) function for non-valid color strings and numbers. |\n*/\nconst defaults = {\n  dark: \"#555555\",\n  light: \"#f7f7f7\",\n  missing: \"#cccccc\",\n  off: \"#C44536\",\n  on: \"#6A994E\",\n  scale: scaleOrdinal().range([\n    \"#4281A4\",\n    \"#F6AE2D\",\n    \"#C44536\",\n    \"#2A9D8F\",\n    \"#6A994E\",\n    \"#CEB54A\",\n    \"#5E548E\",\n    \"#C08497\",\n    \"#99582A\",\n    \"#8C8C99\",\n    \"#1D3557\",\n    \"#D08C60\",\n    \"#6D2E46\",\n    \"#8BB19C\",\n    \"#52796F\",\n    \"#5E60CE\",\n    \"#985277\",\n    \"#5C374C\"\n  ])\n};\n\n/**\n    Returns a color based on a key, whether it is present in a user supplied object or in the default object.\n    @returns {String}\n    @private\n*/\nexport function getColor(k, u = {}) {\n  return k in u ? u[k] : k in defaults ? defaults[k] : defaults.missing;\n}\n\nexport default defaults;\n","import {color} from \"d3-color\";\nimport {getColor} from \"./defaults\";\n\n/**\n    @function colorAssign\n    @desc Assigns a color to a value using a predefined set of defaults.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n\n  // If the value is null or undefined, set to grey.\n  if ([null, void 0].indexOf(c) >= 0) return getColor(\"missing\", u);\n  // Else if the value is true, set to green.\n  else if (c === true) return getColor(\"on\", u);\n  // Else if the value is false, set to red.\n  else if (c === false) return getColor(\"off\", u);\n\n  const p = color(c);\n  // If the value is not a valid color string, use the color scale.\n  if (!p) return getColor(\"scale\", u)(c);\n\n  return c.toString();\n\n}\n","import {getColor} from \"./defaults\";\nimport {rgb} from \"d3-color\";\n\n/**\n    @function colorContrast\n    @desc A set of default color values used when assigning colors based on data.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n  c = rgb(c);\n  const yiq = (c.r * 299 + c.g * 587 + c.b * 114) / 1000;\n  return yiq >= 128 ? getColor(\"dark\", u) : getColor(\"light\", u);\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLegible\n    @desc Darkens a color so that it will appear legible on a white background.\n    @param {String} c A valid CSS color string.\n    @returns {String}\n*/\nexport default function(c) {\n  c = hsl(c);\n  if (c.l > 0.45) {\n    if (c.s > 0.8) c.s = 0.8;\n    c.l = 0.45;\n  }\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLighter\n    @desc Similar to d3.color.brighter, except that this also reduces saturation so that colors don't appear neon.\n    @param {String} c A valid CSS color string.\n    @param {String} [i = 0.5] A value from 0 to 1 dictating the strength of the function.\n    @returns {String}\n*/\nexport default function(c, i = 0.5) {\n  c = hsl(c);\n  i *= 1 - c.l;\n  c.l += i;\n  c.s -= i;\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorSubtract\n    @desc Subtracts one color from another.\n    @param {String} c1 The base color, a valid CSS color string.\n    @param {String} c2 The color to remove from the base color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = c2.h * o2 - c1.h * o1;\n  if (Math.abs(d) > 180) d -= 360;\n  let h = (c1.h - d) % 360;\n  const l = c1.l - (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s - (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 - (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n"],"names":["c1","c2","o1","o2","hsl","d","Math","abs","h","min","l","s","toString","defaults","dark","light","missing","off","on","scale","scaleOrdinal","range","getColor","k","u","c","indexOf","p","color","rgb","yiq","r","g","b","i"],"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"}