{"version":3,"file":"d3plus-hierarchy.js","sources":["../src/Pie.js","../src/Donut.js","../src/Pack.js","../src/nest.js","../src/Tree.js","../src/Treemap.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    const defaultLegend = this._legend;\n    this._legend = (config, arr) => {\n      if (arr.length === this._filteredData.length) return false;\n      return defaultLegend.bind(this)(config, arr);\n    };\n    this._legendSort = (a, b) => this._value(b) - this._value(a);\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._pieData ? `${++this._pieData[i].index}. ${this._drawLabel(d, i)}, ${this._value(d, i)}.` : \"\",\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._legendSort = (a, b) => this._value(b) - this._value(a);\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => this._value(b) - this._value(a);\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)\n      (this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .label(this._drawLabel)\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n}\n","import {min} from \"d3-array\";\nimport {default as Pie} from \"./Pie\";\n\n/**\n    @class Donut\n    @extends Pie\n    @desc Extends the Pie visualization to create a donut chart.\n*/\nexport default class Donut extends Pie {\n\n  /**\n      @memberof Donut\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._innerRadius = () => min([\n      this._width - this._margin.left - this._margin.right,\n      this._height - this._margin.top - this._margin.bottom\n    ]) / 4;\n    this._padPixel = 2;\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {hierarchy, pack} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Circle} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst recursionCircles = (d, arr = []) => {\n  if (d.values) {\n    d.values.forEach(h => {\n      arr.push(h);\n      recursionCircles(h, arr);\n    });\n  }\n  else {\n    arr.push(d);\n  }\n  return arr;\n};\n\n/**\n    @class Pack\n    @extends Viz\n    @desc Uses the [d3 pack layout](https://github.com/d3/d3-hierarchy#pack) to creates Circle Packing chart based on an array of data.\n*/\nexport default class Pack extends Viz {\n\n  /**\n      @memberof Pack\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._layoutPadding = 1;\n\n    const defaultLegend = this._legend;\n    this._legend = (config, arr) => {\n      if (arr.length === this._filteredData.length) return false;\n      return defaultLegend.bind(this)(config, arr);\n    };\n\n    this._on.mouseenter = () => {};\n\n    const defaultMouseMoveLegend = this._on[\"mousemove.legend\"];\n    this._on[\"mousemove.legend\"] = (d, i, x, event) => {\n      defaultMouseMoveLegend(d, i, x, event);\n\n      const ids = this._ids(d, i);\n      const hoverData = recursionCircles(d);\n\n      this.hover(h => {\n        const hover = Object.keys(h).filter(key => key !== \"value\").every(key => d[key] && d[key].includes(h[key]));\n\n        if (hover) hoverData.push(h);\n        else if (ids.includes(h.key)) hoverData.push(...recursionCircles(h, [h]));\n\n        return hoverData.includes(h);\n      });\n\n    };\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      if (d.__d3plusTooltip__) defaultMouseMoveShape(d, i, x, event);\n      this.hover(h => recursionCircles(d, [d]).includes(h));\n    };\n    this._pack = pack();\n    this._packOpacity = constant(0.25);\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Circle: {\n        label: d => d.parent && !d.children ? d.id : false,\n        labelConfig: {\n          fontResize: true\n        },\n        opacity: d => d.__d3plusOpacity__\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const diameter = Math.min(height, width);\n    const transform = `translate(${(width - diameter) / 2}, ${(height - diameter) / 2})`;\n\n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const packData = this._pack\n      .padding(this._layoutPadding)\n      .size([diameter, diameter])\n      (hierarchy({key: nestedData.key, values: nestedData}, d => d.values).sum(this._sum).sort(this._sort))\n      .descendants();\n\n    packData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n      d.id = d.parent ? d.parent.data.key : null;\n      d.data.__d3plusOpacity__ = d.height ? this._packOpacity(d.data, i) : 1;\n      d.data.__d3plusTooltip__ = !d.height ? true : false;\n    });\n\n    this._shapes.push(\n      new Circle()\n        .data(packData)\n        .select(\n          elem(\"g.d3plus-Pack\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n\n    if (this._legend) this._legendClass.hover(_);\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  layoutPadding(_) {\n    return arguments.length ? (this._layoutPadding = _, this) : this._layoutPadding;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  packOpacity(_) {\n    return arguments.length ? (this._packOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._packOpacity;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *comparator* is specified, sets the sort order for the pack using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : accessor(_), this) : this._sum;\n  }\n}\n","import {nest} from \"d3-collection\";\n\n/**\n    @function nest\n    @summary Extends the base behavior of d3.nest to allow for multiple depth levels.\n    @param {Array} *data* The data array to be nested.\n    @param {Array} *keys* An array of key accessors that signify each nest level.\n    @private\n*/\nexport default function(data, keys) {\n\n  if (!(keys instanceof Array)) keys = [keys];\n\n  const dataNest = nest();\n  for (let i = 0; i < keys.length; i++) dataNest.key(keys[i]);\n  const nestedData = dataNest.entries(data);\n\n  return bubble(nestedData);\n\n}\n\n/**\n    Bubbles up values that do not nest to the furthest key.\n    @param {Array} *values* The \"values\" of a nest object.\n    @private\n*/\nfunction bubble(values) {\n\n  return values.map(d => {\n\n    if (d.key && d.values) {\n      if (d.values[0].key === \"undefined\") return d.values[0].values[0];\n      else d.values = bubble(d.values);\n    }\n\n    return d;\n\n  });\n\n}\n","import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._treeData ? `${this._treeData[i].depth}. ${this._drawLabel(d, i)}.` : \"\",\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])\n      (hierarchy({\n        key: \"root\",\n        values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n      }, d => d.key && d.values ? d.values : null).sort(this._sort))\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n          : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n","import {sum} from \"d3-array\";\r\nimport {nest} from \"d3-collection\";\r\nimport {hierarchy, treemap} from \"d3-hierarchy\";\r\nimport {treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify} from \"d3-hierarchy\";\r\nconst tileMethods = {treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify};\r\n\r\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\r\nimport {formatAbbreviate} from \"d3plus-format\";\r\nimport {Rect} from \"d3plus-shape\";\r\nimport {Viz} from \"d3plus-viz\";\r\n\r\n/**\r\n    @class Treemap\r\n    @extends Viz\r\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\r\n*/\r\nexport default class Treemap extends Viz {\r\n\r\n  /**\r\n    @memberof Treemap\r\n    @desc Invoked when creating a new class instance, and sets any default parameters.\r\n    @private\r\n  */\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this._layoutPadding = 1;\r\n\r\n    const defaultLegend = this._legend;\r\n    this._legend = (config, arr) => {\r\n      if (arr.length === this._filteredData.length) return false;\r\n      return defaultLegend.bind(this)(config, arr);\r\n    };\r\n    this._legendSort = (a, b) => this._sum(b) - this._sum(a);\r\n    this._legendTooltip = assign({}, this._legendTooltip, {\r\n      tbody: []\r\n    });\r\n    this._shapeConfig = assign({}, this._shapeConfig, {\r\n      ariaLabel: (d, i) => {\r\n        const rank = this._rankData ? `${this._rankData.indexOf(d) + 1}. ` : \"\";\r\n        return `${rank}${this._drawLabel(d, i)}, ${this._sum(d, i)}.`;\r\n      },\r\n      labelConfig: {\r\n        fontMax: 40,\r\n        fontMin: 8,\r\n        fontResize: true,\r\n        padding: 5\r\n      }\r\n    });\r\n    this._sort = (a, b) => {\r\n      const aggA = isAggregated(a);\r\n      const aggB = isAggregated(b);\r\n      return aggA && !aggB ? 1 : !aggA && aggB ? -1 : b.value - a.value;\r\n    };\r\n    this._sum = accessor(\"value\");\r\n    this._thresholdKey = this._sum;\r\n    this._tile = treemapSquarify;\r\n    this._tooltipConfig = assign({}, this._tooltipConfig, {\r\n      tbody: [\r\n        [() => this._translate(\"Share\"), (d, i, x) => `${formatAbbreviate(x.share * 100, this._locale)}%`]\r\n      ]\r\n    });\r\n    this._treemap = treemap().round(true);\r\n\r\n    const isAggregated = leaf => leaf.children && leaf.children.length === 1 && leaf.children[0].data._isAggregation;\r\n\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc Extends the draw behavior of the abstract Viz class.\r\n      @private\r\n  */\r\n  _draw(callback) {\r\n\r\n    super._draw(callback);\r\n\r\n    let nestedData = nest();\r\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\r\n    nestedData = nestedData.entries(this._filteredData);\r\n\r\n    const tmapData = this._treemap\r\n      .padding(this._layoutPadding)\r\n      .size([\r\n        this._width - this._margin.left - this._margin.right,\r\n        this._height - this._margin.top - this._margin.bottom\r\n      ])\r\n      .tile(this._tile)\r\n      (hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\r\n\r\n    const shapeData = [], that = this;\r\n\r\n    /**\r\n        @memberof Treemap\r\n        @desc Flattens and merges treemap data.\r\n        @private\r\n    */\r\n    function extractLayout(children) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        const node = children[i];\r\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\r\n        else {\r\n          const index = node.data.values.length === 1 ? that._filteredData.indexOf(node.data.values[0]) : undefined;\r\n          node.__d3plus__ = true;\r\n          node.id = node.data.key;\r\n          node.i = index > -1 ? index : undefined;\r\n          node.data = merge(node.data.values, that._aggs);\r\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\r\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\r\n          shapeData.push(node);\r\n        }\r\n      }\r\n    }\r\n    if (tmapData.children) extractLayout(tmapData.children);\r\n\r\n    this._rankData = shapeData.sort(this._sort).map(d => d.data);\r\n    const total = tmapData.value;\r\n    shapeData.forEach(d => {\r\n      d.share = this._sum(d.data, d.i) / total;\r\n    });\r\n\r\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\r\n    const rectConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\");\r\n    const fontMax = rectConfig.labelConfig.fontMax;\r\n    const fontMin = rectConfig.labelConfig.fontMin;\r\n    const padding = rectConfig.labelConfig.padding;\r\n\r\n    this._shapes.push(new Rect()\r\n      .data(shapeData)\r\n      .label(d => [\r\n        this._drawLabel(d.data, d.i),\r\n        `${formatAbbreviate(d.share * 100, this._locale)}%`\r\n      ])\r\n      .select(elem(\"g.d3plus-Treemap\", {\r\n        parent: this._select,\r\n        enter: {transform},\r\n        update: {transform}\r\n      }).node())\r\n      .config({\r\n        height: d => d.y1 - d.y0,\r\n        labelBounds: (d, i, s) => {\r\n          const h = s.height;\r\n          let sh = Math.min(fontMax, (h - padding * 2) * 0.5);\r\n          if (sh < fontMin) sh = 0;\r\n          return [\r\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\r\n            {width: s.width, height: sh + padding * 2, x: -s.width / 2, y: h / 2 - sh - padding * 2}\r\n          ];\r\n        },\r\n        labelConfig: {\r\n          textAnchor: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"middle\" : \"start\";\r\n          },\r\n          verticalAlign: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"bottom\" : \"top\";\r\n          }\r\n        },\r\n        width: d => d.x1 - d.x0\r\n      })\r\n      .config(rectConfig)\r\n      .render());\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Applies the threshold algorithm for Treemaps.\r\n   * @param {Array} data The data to process.\r\n   * @private\r\n   */\r\n  _thresholdFunction(data) {\r\n    const aggs = this._aggs;\r\n    const drawDepth = this._drawDepth;\r\n    const groupBy = this._groupBy;\r\n    const threshold = this._threshold;\r\n    const thresholdKey = this._thresholdKey;\r\n\r\n    const totalSum = sum(data, thresholdKey);\r\n\r\n    if (threshold && thresholdKey) {\r\n      return thresholdByDepth(data, 0);\r\n    }\r\n\r\n    /**\r\n     * @memberof Treemap\r\n     * @desc Explores the data tree recursively and merges elements under the indicated threshold.\r\n     * @param {object[]} branchData The current subset of the dataset to work on.\r\n     * @param {number} depth The depth of the current branch.\r\n     * @private\r\n     */\r\n    function thresholdByDepth(branchData, depth) {\r\n      if (depth < drawDepth) {\r\n        return nest()\r\n          .key(groupBy[depth])\r\n          .entries(branchData)\r\n          .reduce((bulk, leaf) => {\r\n            const subBranchData = thresholdByDepth(leaf.values, depth + 1);\r\n            return bulk.concat(subBranchData);\r\n          }, []);\r\n      }\r\n\r\n      if (depth === drawDepth) {\r\n        const thresholdPercent = Math.min(1, Math.max(0, threshold(branchData)));\r\n\r\n        if (!isFinite(thresholdPercent) || isNaN(thresholdPercent)) return null;\r\n\r\n        const removedItems = [];\r\n        const branchDataCopy = branchData.slice();\r\n        const thresholdValue = thresholdPercent * totalSum;\r\n\r\n        let n = branchDataCopy.length;\r\n        while (n--) {\r\n          const datum = branchDataCopy[n];\r\n          if (thresholdKey(datum) < thresholdValue) {\r\n            const index = branchDataCopy.indexOf(datum);\r\n            branchDataCopy.splice(index, 1);\r\n            removedItems.push(datum);\r\n          }\r\n        }\r\n\r\n        if (removedItems.length > 0) {\r\n          const mergedItem = merge(removedItems, aggs);\r\n          mergedItem._isAggregation = true;\r\n          mergedItem._threshold = thresholdPercent;\r\n          branchDataCopy.push(mergedItem);\r\n        }\r\n\r\n        return branchDataCopy;\r\n      }\r\n\r\n      throw new Error(\"Depth is higher than the amount of grouping levels.\");\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\r\n      @param {Function|Number} [*value*]\r\n  */\r\n  layoutPadding(_) {\r\n    return arguments.length ? (this._layoutPadding = typeof _ === \"function\" ? _ : constant(_), this) : this._layoutPadding;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\r\n      @param {Array} [*comparator*]\r\n      @example\r\nfunction comparator(a, b) {\r\n  return b.value - a.value;\r\n}\r\n  */\r\n  sort(_) {\r\n    return arguments.length ? (this._sort = _, this) : this._sort;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\r\n      @param {Function|Number} [*value*]\r\n      @example\r\nfunction sum(d) {\r\n  return d.sum;\r\n}\r\n  */\r\n  sum(_) {\r\n    if (arguments.length) {\r\n      this._sum = typeof _ === \"function\" ? _ : accessor(_);\r\n      this._thresholdKey = this._sum;\r\n      return this;\r\n    }\r\n    else return this._sum;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc Sets the tiling method used when calcuating the size and position of the rectangles.\r\n\r\nCan either be a string referring to a d3-hierarchy [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling), or a custom function in the same format.\r\n      @param {String|Function} [*value* = \"squarify\"]\r\n  */\r\n  tile(_) {\r\n    return arguments.length\r\n      ? (this._tile = typeof _ === \"string\"\r\n        ? tileMethods[`treemap${_.charAt(0).toUpperCase()}${_.slice(1)}`] || treemapSquarify\r\n        : _, this)\r\n      : this._tile;\r\n  }\r\n\r\n}\r\n"],"names":["Pie","defaultLegend","_legend","config","arr","length","_filteredData","bind","_legendSort","a","b","_value","_shapeConfig","assign","ariaLabel","d","i","_pieData","index","_drawLabel","Path","labelConfig","fontResize","_innerRadius","_padPixel","_pie","pie","_sort","accessor","callback","height","_height","_margin","top","bottom","width","_width","left","right","outerRadius","min","pieData","padAngle","_padAngle","sort","value","forEach","__d3plus__","arcData","arc","innerRadius","transform","_shapes","push","data","select","elem","parent","_select","enter","update","node","id","_ids","join","x","y","label","configPrep","render","_","arguments","Viz","Donut","recursionCircles","values","h","Pack","_layoutPadding","_on","mouseenter","defaultMouseMoveLegend","event","ids","hoverData","hover","Object","keys","filter","key","every","includes","defaultMouseMoveShape","__d3plusTooltip__","_pack","pack","_packOpacity","constant","_shape","Circle","children","opacity","__d3plusOpacity__","_sum","diameter","Math","nestedData","nest","_drawDepth","_groupBy","entries","packData","padding","size","hierarchy","sum","descendants","_hover","s","_legendClass","Array","dataNest","bubble","map","Tree","_orient","_separation","_treeData","depth","fontColor","fill","stroke","strokeWidth","r","_tree","tree","that","treeData","separation","slice","flattenBranchData","branch","merge","l","_aggs","rBufferRoot","max","rBufferEnd","yExtent","extent","_labelHeight","_labelWidths","reduce","num","v","next","prev","yScale","scaleLinear","domain","range","val","elemObject","px","py","_label","textAnchor","verticalAlign","hitArea","w","labelBounds","tileMethods","treemapBinary","treemapDice","treemapSlice","treemapSliceDice","treemapSquarify","treemapResquarify","Treemap","_legendTooltip","tbody","rank","_rankData","indexOf","fontMax","fontMin","aggA","isAggregated","aggB","_thresholdKey","_tile","_tooltipConfig","_translate","formatAbbreviate","share","_locale","_treemap","treemap","round","leaf","_isAggregation","tmapData","tile","shapeData","extractLayout","undefined","x0","x1","y0","y1","total","rectConfig","Rect","sh","line","__d3plusParent__","aggs","drawDepth","groupBy","threshold","_threshold","thresholdKey","totalSum","thresholdByDepth","branchData","bulk","subBranchData","concat","thresholdPercent","isFinite","isNaN","removedItems","branchDataCopy","thresholdValue","n","datum","splice","mergedItem","Error","charAt","toUpperCase"],"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"}