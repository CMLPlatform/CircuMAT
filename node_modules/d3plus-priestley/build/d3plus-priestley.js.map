{"version":3,"file":"d3plus-priestley.js","sources":["../src/Priestley.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {min, max, range} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {scaleBand} from \"d3-scale\";\n\nimport {Axis, date} from \"d3plus-axis\";\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Priestley\n    @extends external:Viz\n    @desc Creates a priestley timeline based on an array of data.\n*/\nexport default class Priestley extends Viz {\n\n  /**\n      @memberof Priestley\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._axis = new Axis().align(\"end\").orient(\"bottom\");\n    this._axisConfig = {scale: \"time\"};\n    this._axisTest = new Axis().align(\"end\").gridSize(0).orient(\"bottom\");\n    this.end(\"end\");\n    this._paddingInner = 0.05;\n    this._paddingOuter = 0.05;\n    this._shapeConfig = assign({}, this._shapeConfig, {\n      ariaLabel: (d, i) => `${this._drawLabel(d, i)}, ${this._start(d, i)} - ${this._end(d, i)}.`\n    });\n    this.start(\"start\");\n\n  }\n\n  /**\n      @memberof Priestley\n      @desc Extends the render behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    if (!this._filteredData) return this;\n\n    const data = this._filteredData.map((data, i) => ({\n      __d3plus__: true,\n      data,\n      end: this._axisConfig.scale === \"time\" ? date(this._end(data, i)) : this._end(data, i),\n      i,\n      id: this._id(data, i),\n      start: this._axisConfig.scale === \"time\" ? date(this._start(data, i)) : this._start(data, i)\n    })).filter(d => d.end - d.start > 0).sort((a, b) => a.start - b.start);\n\n    let nestedData;\n    if (this._groupBy.length > 1 && this._drawDepth > 0) {\n      const dataNest = nest();\n      for (let i = 0; i < this._drawDepth; i++) dataNest.key(d => this._groupBy[i](d.data, d.i));\n      nestedData = dataNest.entries(data);\n    }\n    else nestedData = [{values: data}];\n\n    let maxLane = 0;\n    nestedData.forEach(g => {\n      let track = [];\n      g.values.forEach(d => {\n        track = track.map(t => t <= d.start ? false : t);\n        const i = track.indexOf(false);\n        if (i < 0) {\n          d.lane = maxLane + track.length;\n          track.push(d.end);\n        }\n        else {\n          track[i] = d.end;\n          d.lane = maxLane + i;\n        }\n      });\n      maxLane += track.length;\n    });\n\n    const axisConfig = {\n      domain: [min(data, d => d.start) || 0, max(data, d => d.end) || 0],\n      height: this._height - this._margin.top - this._margin.bottom,\n      width: this._width - this._margin.left - this._margin.right\n    };\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._axisTest\n      .config(axisConfig)\n      .config(this._axisConfig)\n      .select(elem(\"g.d3plus-priestley-axis-test\", {parent: this._select, enter: {opacity: 0}}).node())\n      .render();\n\n    this._axis\n      .config(axisConfig)\n      .config(this._axisConfig)\n      .select(elem(\"g.d3plus-priestley-axis\", {parent: this._select, enter: {transform}, update: {transform}}).node())\n      .render();\n\n    const axisPad = this._axisTest._padding;\n\n    const xScale = this._axis._d3Scale;\n\n    const yScale = scaleBand()\n      .domain(range(0, maxLane, 1))\n      .paddingInner(this._paddingInner)\n      .paddingOuter(this._paddingOuter)\n      .rangeRound([this._height - this._margin.bottom - this._axisTest.outerBounds().height - axisPad, this._margin.top + axisPad]);\n\n    const bandWidth = yScale.bandwidth();\n\n    this._shapes.push(new Rect()\n      .data(data)\n      .duration(this._duration)\n      .height(bandWidth)\n      .label((d, i) => this._drawLabel(d.data, i))\n      .select(elem(\"g.d3plus-priestley-shapes\", {parent: this._select}).node())\n      .width(d => {\n        const w = Math.abs(xScale(d.end) - xScale(d.start));\n        return w > 2 ? w - 2 : w;\n      })\n      .x(d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n      .y(d => yScale(d.lane) + bandWidth / 2)\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the config method for the axis and returns the current class instance. If *value* is not specified, returns the current axis configuration.\n      @param {Object} [*value*]\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the end accessor to the specified function or key and returns the current class instance. If *value* is not specified, returns the current end accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  end(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._end = _;\n      else {\n        this._end = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = max;\n      }\n      return this;\n    }\n    else return this._end;\n  }\n\n  /**\n      @memberof Priestley\n      @desc Sets the [paddingInner](https://github.com/d3/d3-scale#band_paddingInner) value of the underlining [Band Scale](https://github.com/d3/d3-scale#band-scales) used to determine the height of each bar. Values should be a ratio between 0 and 1 representing the space in between each rectangle.\n      @param {Number} [*value* = 0.05]\n      @chainable\n  */\n  paddingInner(_) {\n    return arguments.length ? (this._paddingInner = _, this) : this._paddingInner;\n  }\n\n  /**\n      @memberof Priestley\n      @desc Sets the [paddingOuter](https://github.com/d3/d3-scale#band_paddingOuter) value of the underlining [Band Scale](https://github.com/d3/d3-scale#band-scales) used to determine the height of each bar. Values should be a ratio between 0 and 1 representing the space around the outer rectangles.\n      @param {Number} [*value* = 0.05]\n      @chainable\n  */\n  paddingOuter(_) {\n    return arguments.length ? (this._paddingOuter = _, this) : this._paddingOuter;\n  }\n\n  /**\n      @memberof Priestley\n      @desc If *value* is specified, sets the start accessor to the specified function or key and returns the current class instance. If *value* is not specified, returns the current start accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  start(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._start = _;\n      else {\n        this._start = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = min;\n      }\n      return this;\n    }\n    else return this._start;\n  }\n\n}\n"],"names":["Priestley","_axis","Axis","align","orient","_axisConfig","scale","_axisTest","gridSize","end","_paddingInner","_paddingOuter","_shapeConfig","assign","ariaLabel","d","i","_drawLabel","_start","_end","start","callback","_filteredData","data","map","__d3plus__","date","id","_id","filter","sort","a","b","nestedData","_groupBy","length","_drawDepth","dataNest","nest","key","entries","values","maxLane","forEach","g","track","t","indexOf","lane","push","axisConfig","domain","min","max","height","_height","_margin","top","bottom","width","_width","left","right","transform","config","select","elem","parent","_select","enter","opacity","node","render","update","axisPad","_padding","xScale","_d3Scale","yScale","scaleBand","range","paddingInner","paddingOuter","rangeRound","outerBounds","bandWidth","bandwidth","_shapes","Rect","duration","_duration","label","w","Math","abs","x","y","configPrep","bind","_","arguments","accessor","_aggs","Viz"],"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"}