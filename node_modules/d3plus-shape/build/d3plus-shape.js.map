{"version":3,"file":"d3plus-shape.js","sources":["../src/Image.js","../src/geom/pointDistanceSquared.js","../src/geom/pointDistance.js","../src/Shape/Shape.js","../src/geom/lineIntersection.js","../src/geom/segmentBoxContains.js","../src/geom/segmentsIntersect.js","../src/geom/polygonInside.js","../src/geom/polygonRayCast.js","../src/geom/pointRotate.js","../src/geom/polygonRotate.js","../src/geom/simplify.js","../src/geom/largestRect.js","../src/Shape/Area.js","../src/Shape/Bar.js","../src/Shape/Circle.js","../src/Shape/Rect.js","../src/Shape/Line.js","../src/Shape/Whisker.js","../src/Shape/Box.js","../src/geom/shapeEdgePoint.js","../src/geom/path2polygon.js","../src/Shape/Path.js"],"sourcesContent":["import {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, constant} from \"d3plus-common\";\n\n/**\n    @class Image\n    @desc Creates SVG images based on an array of data.\n    @example <caption>a sample row of data</caption>\nvar data = {\"url\": \"file.png\", \"width\": \"100\", \"height\": \"50\"};\n@example <caption>passed to the generator</caption>\nnew Image().data([data]).render();\n@example <caption>creates the following</caption>\n<image class=\"d3plus-Image\" opacity=\"1\" href=\"file.png\" width=\"100\" height=\"50\" x=\"0\" y=\"0\"></image>\n@example <caption>this is shorthand for the following</caption>\nimage().data([data])();\n@example <caption>which also allows a post-draw callback function</caption>\nimage().data([data])(function() { alert(\"draw complete!\"); })\n*/\nexport default class Image {\n\n  /**\n      @memberof Image\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    this._duration = 600;\n    this._height = accessor(\"height\");\n    this._id = accessor(\"id\");\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"auto\");\n    this._select;\n    this._url = accessor(\"url\");\n    this._width = accessor(\"width\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n  }\n\n  /**\n      @memberof Image\n      @desc Renders the current Image to the page. If a *callback* is specified, it will be called once the images are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").style(\"width\", `${window.innerWidth}px`).style(\"height\", `${window.innerHeight}px`).style(\"display\", \"block\").node());\n\n    const images = this._select.selectAll(\".d3plus-Image\").data(this._data, this._id);\n\n    const enter = images.enter().append(\"image\")\n      .attr(\"class\", \"d3plus-Image\")\n      .attr(\"opacity\", 0)\n      .attr(\"width\", 0)\n      .attr(\"height\", 0)\n      .attr(\"x\", (d, i) => this._x(d, i) + this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => this._y(d, i) + this._height(d, i) / 2);\n\n    const t = transition().duration(this._duration),\n          that = this,\n          update = enter.merge(images);\n\n    update\n      .attr(\"xlink:href\", this._url)\n      .style(\"pointer-events\", this._pointerEvents)\n      .transition(t)\n      .attr(\"opacity\", this._opacity)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .each(function(d, i) {\n        const image = select(this), link = that._url(d, i);\n        const fullAddress = link.indexOf(\"http://\") === 0 || link.indexOf(\"https://\") === 0;\n        if (!fullAddress || link.indexOf(window.location.hostname) === 0) {\n          const img = new Image();\n          img.src = link;\n          img.crossOrigin = \"Anonymous\";\n          img.onload = function() {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.width;\n            canvas.height = this.height;\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(this, 0, 0);\n            image.attr(\"xlink:href\", canvas.toDataURL(\"image/png\"));\n          };\n        }\n      });\n\n    images.exit().transition(t)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .attr(\"opacity\", 0).remove();\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Image\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. An <image> tag will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Image\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Image\n      @desc Sets the opacity of the image.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the pointer-events accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"auto\"]\n      @chainable\n  */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Image\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the URL accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.url;\n}\n  */\n  url(_) {\n    return arguments.length ? (this._url = _, this) : this._url;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x || 0;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y || 0;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function pointDistanceSquared\n    @desc Returns the squared euclidean distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => {\n\n  const dx = p2[0] - p1[0],\n        dy = p2[1] - p1[1];\n\n  return dx * dx + dy * dy;\n\n};\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function pointDistance\n    @desc Calculates the pixel distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => Math.sqrt(pointDistanceSquared(p1, p2));\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {min} from \"d3-array\";\nimport {color} from \"d3-color\";\nimport {pointer, select, selectAll} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, assign, attrize, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorContrast} from \"d3plus-color\";\nimport * as paths from \"d3-shape\";\nimport {strip, TextBox} from \"d3plus-text\";\n\nimport Image from \"../Image\";\nimport pointDistance from \"../geom/pointDistance\";\n\n/**\n    @class Shape\n    @extends external:BaseClass\n    @desc An abstracted class for generating shapes.\n*/\nexport default class Shape extends BaseClass {\n\n  /**\n      @memberof Shape\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor(tagName = \"g\") {\n\n    super();\n\n    this._activeOpacity = 0.25;\n    this._activeStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(1);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 3;\n      }\n    };\n    this._ariaLabel = constant(\"\");\n    this._backgroundImage = constant(false);\n    this._backgroundImageClass = new Image();\n    this._data = [];\n    this._duration = 600;\n    this._fill = constant(\"black\");\n    this._fillOpacity = constant(1);\n\n    this._hoverOpacity = 0.5;\n    this._hoverStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(0.5);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 2;\n      }\n    };\n    this._id = (d, i) => d.id !== void 0 ? d.id : i;\n    this._label = constant(false);\n    this._labelClass = new TextBox();\n    this._labelConfig = {\n      fontColor: (d, i) => colorContrast(this._fill(d, i)),\n      fontSize: 12,\n      padding: 5\n    };\n    this._name = \"Shape\";\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"visiblePainted\");\n    this._role = constant(\"presentation\");\n    this._rotate = constant(0);\n    this._rx = constant(0);\n    this._ry = constant(0);\n    this._scale = constant(1);\n    this._shapeRendering = constant(\"geometricPrecision\");\n    this._stroke = (d, i) => color(this._fill(d, i)).darker(1);\n    this._strokeDasharray = constant(\"0\");\n    this._strokeLinecap = constant(\"butt\");\n    this._strokeOpacity = constant(1);\n    this._strokeWidth = constant(0);\n    this._tagName = tagName;\n    this._textAnchor = constant(\"start\");\n    this._vectorEffect = constant(\"non-scaling-stroke\");\n    this._verticalAlign = constant(\"top\");\n\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes() {\n    return {};\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds event listeners to each shape group or hit area.\n      @param {D3Selection} *update* The update cycle of the data binding.\n      @private\n  */\n  _applyEvents(handler) {\n\n    const events = Object.keys(this._on);\n    for (let e = 0; e < events.length; e++) {\n      handler.on(events[e], (event, d, i) => {\n        if (!this._on[events[e]]) return;\n        if (d.i !== void 0) i = d.i;\n        if (d.nested && d.values) {\n          const calcPoint = (d, i) => {\n            if (this._discrete === \"x\") return [this._x(d, i), cursor[1]];\n            else if (this._discrete === \"y\") return [cursor[0], this._y(d, i)];\n            else return [this._x(d, i), this._y(d, i)];\n          };\n          const cursor = pointer(event, this._select.node()),\n                values = d.values.map(d => pointDistance(cursor, calcPoint(d, i)));\n          i = values.indexOf(min(values));\n          d = d.values[i];\n        }\n        this._on[events[e]].bind(this)(d, i, undefined, event);\n      });\n    }\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the updated styling to the given shape elements.\n      @param {HTMLElement} *elem*\n      @param {Object} *style*\n      @private\n  */\n  _updateStyle(elem, style) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    const styleObject = {};\n    for (const key in style) {\n      if ({}.hasOwnProperty.call(style, key)) {\n        styleObject[key] = styleLogic.bind(style[key]);\n      }\n    }\n\n    elem.transition().duration(0).call(attrize, styleObject);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the default styling to the shape elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyStyle(elem) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    elem\n      .attr(\"fill\", styleLogic.bind(this._fill))\n      .attr(\"fill-opacity\", styleLogic.bind(this._fillOpacity))\n      .attr(\"rx\", styleLogic.bind(this._rx))\n      .attr(\"ry\", styleLogic.bind(this._ry))\n      .attr(\"stroke\", styleLogic.bind(this._stroke))\n      .attr(\"stroke-dasharray\", styleLogic.bind(this._strokeDasharray))\n      .attr(\"stroke-linecap\", styleLogic.bind(this._strokeLinecap))\n      .attr(\"stroke-opacity\", styleLogic.bind(this._strokeOpacity))\n      .attr(\"stroke-width\", styleLogic.bind(this._strokeWidth))\n      .attr(\"vector-effect\", styleLogic.bind(this._vectorEffect));\n  }\n\n  /**\n      @memberof Shape\n      @desc Calculates the transform for the group elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyTransform(elem) {\n\n    elem\n      .attr(\"transform\", (d, i) => `\n        translate(${d.__d3plusShape__\n    ? d.translate ? d.translate\n    : `${this._x(d.data, d.i)},${this._y(d.data, d.i)}`\n    : `${this._x(d, i)},${this._y(d, i)}`})\n        scale(${d.__d3plusShape__ ? d.scale || this._scale(d.data, d.i)\n  : this._scale(d, i)})\n        rotate(${d.__d3plusShape__ ? d.rotate ? d.rotate\n  : this._rotate(d.data || d, d.i)\n  : this._rotate(d.data || d, d.i)})`);\n  }\n\n  /**\n      @memberof Shape\n      @desc Checks for nested data and uses the appropriate variables for accessor functions.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _nestWrapper(method) {\n    return (d, i) => method(d.__d3plusShape__ ? d.data : d, d.__d3plusShape__ ? d.i : i);\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show active status.\n      @private\n  */\n  _renderActive() {\n\n    const that = this;\n\n    this._group.selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._active || typeof that._active !== \"function\" || !that._active(d, i) ? parent : that._activeGroup.node();\n        if (group !== this.parentNode) {\n          group.appendChild(this);\n          if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n            if (parent === group) select(this).call(that._applyStyle.bind(that));\n            else select(this).call(that._updateStyle.bind(that, select(this), that._activeStyle));\n          }\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show hover status.\n      @private\n  */\n  _renderHover() {\n\n    const that = this;\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text, g.d3plus-${this._name}-hover`)\n      .selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._hover || typeof that._hover !== \"function\" || !that._hover(d, i) ? parent : that._hoverGroup.node();\n        if (group !== this.parentNode) group.appendChild(this);\n        if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n          if (parent === group) select(this).call(that._applyStyle.bind(that));\n          else select(this).call(that._updateStyle.bind(that, select(this), that._hoverStyle));\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds background image to each shape group.\n      @private\n  */\n  _renderImage() {\n\n    const imageData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        const aes = this._aes(datum, i);\n\n        if (aes.r || aes.width && aes.height) {\n\n          let d = datum;\n          if (datum.nested && datum.key && datum.values) {\n            d = datum.values[0];\n            i = this._data.indexOf(d);\n          }\n\n          const height = aes.r ? aes.r * 2 : aes.height,\n                url = this._backgroundImage(d, i),\n                width = aes.r ? aes.r * 2 : aes.width;\n\n          if (url) {\n\n            let x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                  : this._x(d.data, d.i) : this._x(d, i),\n                y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                : this._y(d.data, d.i) : this._y(d, i);\n\n            if (aes.x) x += aes.x;\n            if (aes.y) y += aes.y;\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            imageData.push({\n              __d3plus__: true,\n              data: d,\n              height,\n              i,\n              id: this._id(d, i),\n              url,\n              width,\n              x: x + -width / 2,\n              y: y + -height / 2\n            });\n\n          }\n\n        }\n\n      });\n\n    this._backgroundImageClass\n      .data(imageData)\n      .duration(this._duration)\n      .opacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .select(elem(`g.d3plus-${this._name}-image`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds labels to each shape group.\n      @private\n  */\n  _renderLabels() {\n\n    const labelData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        let d = datum;\n        if (datum.nested && datum.key && datum.values) {\n          d = datum.values[0];\n          i = this._data.indexOf(d);\n        }\n\n        let labels = this._label(d, i);\n\n        if (this._labelBounds && labels !== false && labels !== undefined && labels !== null) {\n\n          const bounds = this._labelBounds.bind(this)(d, i, this._aes(datum, i));\n\n          if (bounds) {\n\n            if (labels.constructor !== Array) labels = [labels];\n\n            const x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                    : this._x(d.data, d.i) : this._x(d, i),\n                  y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                  : this._y(d.data, d.i) : this._y(d, i);\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            for (let l = 0; l < labels.length; l++) {\n\n              const b = bounds.constructor === Array ? bounds[l] : Object.assign({}, bounds);\n              const rotate = this._rotate(d, i);\n              let r = d.labelConfig && d.labelConfig.rotate ? d.labelConfig.rotate : bounds.angle !== undefined ? bounds.angle : 0;\n              r += rotate;\n              const rotateAnchor = rotate !== 0 ? [b.x * -1 || 0, b.y * -1 || 0] : [b.width / 2, b.height / 2];\n\n              labelData.push({\n                __d3plus__: true,\n                data: d,\n                height: b.height,\n                l,\n                id: `${this._id(d, i)}_${l}`,\n                r,\n                rotateAnchor,\n                text: labels[l],\n                width: b.width,\n                x: x + b.x,\n                y: y + b.y\n              });\n\n            }\n\n          }\n\n        }\n\n      });\n\n    this._labelClass\n      .data(labelData)\n      .duration(this._duration)\n      .fontOpacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .rotate(d => d.__d3plus__ ? d.r : d.data.r)\n      .rotateAnchor(d => d.__d3plus__ ? d.rotateAnchor : d.data.rotateAnchor)\n      .select(elem(`g.d3plus-${this._name}-text`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .config(configPrep.bind(this)(this._labelConfig))\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Renders the current Shape to the page. If a *callback* is specified, it will be called once the shapes are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    this._transition = transition().duration(this._duration);\n\n    let data = this._data, key = this._id;\n    if (this._dataFilter) {\n      data = this._dataFilter(data);\n      if (data.key) key = data.key;\n    }\n\n    if (this._sort) {\n      data = data.sort((a, b) => {\n        while (a.__d3plusShape__ || a.__d3plus__) a = a.data;\n        while (b.__d3plusShape__ || b.__d3plus__) b = b.data;\n        return this._sort(a, b);\n      });\n    }\n\n    selectAll(`g.d3plus-${this._name}-hover > *, g.d3plus-${this._name}-active > *`).each(function(d) {\n      if (d && d.parentNode) d.parentNode.appendChild(this);\n      else this.parentNode.removeChild(this);\n    });\n\n    // Makes the update state of the group selection accessible.\n    this._group = elem(`g.d3plus-${this._name}-group`, {parent: this._select});\n    const update = this._update = elem(`g.d3plus-${this._name}-shape`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}})\n      .selectAll(`.d3plus-${this._name}`)\n      .data(data, key);\n\n    // Orders and transforms the updating Shapes.\n    update.order();\n    if (this._duration) {\n      update.transition(this._transition)\n        .call(this._applyTransform.bind(this));\n    }\n    else {\n      update.call(this._applyTransform.bind(this));\n    }\n\n    // Makes the enter state of the group selection accessible.\n    const enter = this._enter = update.enter().append(this._tagName)\n      .attr(\"class\", (d, i) => `d3plus-Shape d3plus-${this._name} d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .call(this._applyTransform.bind(this))\n      .attr(\"aria-label\", this._ariaLabel)\n      .attr(\"role\", this._role)\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    const enterUpdate = enter.merge(update);\n\n    let enterUpdateRender = enterUpdate.attr(\"shape-rendering\", this._nestWrapper(this._shapeRendering));\n\n    if (this._duration) {\n      enterUpdateRender = enterUpdateRender\n        .attr(\"pointer-events\", \"none\")\n        .transition(this._transition).transition().delay(100)\n        .attr(\"pointer-events\", this._pointerEvents);\n    }\n\n    enterUpdateRender\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    // Makes the exit state of the group selection accessible.\n    const exit = this._exit = update.exit();\n    if (this._duration) exit.transition().delay(this._duration).remove();\n    else exit.remove();\n\n    this._renderImage();\n    this._renderLabels();\n\n    this._hoverGroup = elem(`g.d3plus-${this._name}-hover`, {parent: this._group});\n    this._activeGroup = elem(`g.d3plus-${this._name}-active`, {parent: this._group});\n\n    const hitAreas = this._group.selectAll(\".d3plus-HitArea\")\n      .data(this._hitArea && Object.keys(this._on).length ? data : [], key);\n\n    hitAreas.order()\n      .call(this._applyTransform.bind(this));\n\n    const isLine = this._name === \"Line\";\n\n    if (isLine) {\n      const curve = this._curve.bind(this)(this.config());\n      isLine && this._path\n        .curve(paths[`curve${curve.charAt(0).toUpperCase()}${curve.slice(1)}`])\n        .defined(this._defined)\n        .x(this._x)\n        .y(this._y);\n    }\n\n    const hitEnter = hitAreas.enter().append(isLine ? \"path\" : \"rect\")\n      .attr(\"class\", (d, i) => `d3plus-HitArea d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .attr(\"fill\", \"black\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"pointer-events\", \"painted\")\n      .attr(\"opacity\", 0)\n      .call(this._applyTransform.bind(this));\n\n    const that = this;\n\n    const hitUpdates = hitAreas.merge(hitEnter)\n      .each(function(d) {\n        const i = that._data.indexOf(d);\n        const h = that._hitArea(d, i, that._aes(d, i));\n        return h && !(that._name === \"Line\" && parseFloat(that._strokeWidth(d, i)) > 10) ? select(this).call(attrize, h) : select(this).remove();\n      });\n\n    hitAreas.exit().remove();\n\n    this._applyEvents(this._hitArea ? hitUpdates : enterUpdate);\n\n    setTimeout(() => {\n      if (this._active) this._renderActive();\n      else if (this._hover) this._renderHover();\n      if (callback) callback();\n    }, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n\n    if (!arguments.length || _ === undefined) return this._active;\n    this._active = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderActive();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc When shapes are active, this is the opacity of any shape that is not active.\n      @param {Number} *value* = 0.25\n      @chainable\n  */\n  activeOpacity(_) {\n    return arguments.length ? (this._activeOpacity = _, this) : this._activeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to active shapes.\n      @param {Object} *value*\n      @chainable\n  */\n  activeStyle(_) {\n    return arguments.length ? (this._activeStyle = assign({}, this._activeStyle, _), this) : this._activeStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the aria-label attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  ariaLabel(_) {\n    return _ !== undefined\n      ? (this._ariaLabel = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._ariaLabel;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the background-image accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = false]\n      @chainable\n  */\n  backgroundImage(_) {\n    return arguments.length\n      ? (this._backgroundImage = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._backgroundImage;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length\n      ? (this._data = _, this)\n      : this._data;\n  }\n\n  /**\n      @memberof Shape\n      @desc Determines if either the X or Y position is discrete along a Line, which helps in determining the nearest data point on a line for a hit area event.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length\n      ? (this._duration = _, this)\n      : this._duration;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the fill accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  fill(_) {\n    return arguments.length\n      ? (this._fill = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fill;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"fill-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  fillOpacity(_) {\n    return arguments.length\n      ? (this._fillOpacity = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fillOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n\n    if (!arguments.length || _ === void 0) return this._hover;\n    this._hover = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderHover();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to hovered shapes.\n      @param {Object} *value*\n      @chainable\n   */\n  hoverStyle(_) {\n    return arguments.length ? (this._hoverStyle = assign({}, this._hoverStyle, _), this) : this._hoverStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the hover opacity to the specified function and returns the current class instance.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  hoverOpacity(_) {\n    return arguments.length ? (this._hoverOpacity = _, this) : this._hoverOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the mouse hit area to the specified function and returns the current class instance. If *bounds* is not specified, returns the current mouse hit area accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  hitArea(_) {\n    return arguments.length ? (this._hitArea = typeof _ === \"function\" ? _ : constant(_), this) : this._hitArea;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the label bounds to the specified function and returns the current class instance. If *bounds* is not specified, returns the current inner bounds accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`. If an array is returned from the function, each value will be used in conjunction with each label.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  labelBounds(_) {\n    return arguments.length ? (this._labelBounds = typeof _ === \"function\" ? _ : constant(_), this) : this._labelBounds;\n  }\n\n  /**\n      @memberof Shape\n      @desc A pass-through to the config method of the TextBox class used to create a shape's labels.\n      @param {Object} [*value*]\n      @chainable\n  */\n  labelConfig(_) {\n    return arguments.length ? (this._labelConfig = assign(this._labelConfig, _), this) : this._labelConfig;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the pointerEvents accessor to the specified function or string and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n   */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the role attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  role(_) {\n    return _ !== undefined\n      ? (this._role = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._role;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the rotate accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n   */\n  rotate(_) {\n    return arguments.length ? (this._rotate = typeof _ === \"function\" ? _ : constant(_), this) : this._rotate;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  rx(_) {\n    return arguments.length ? (this._rx = typeof _ === \"function\" ? _ : constant(_), this) : this._rx;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  ry(_) {\n    return arguments.length ? (this._ry = typeof _ === \"function\" ? _ : constant(_), this) : this._ry;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the scale accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = typeof _ === \"function\" ? _ : constant(_), this) : this._scale;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the shape-rendering accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"geometricPrecision\"]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  shapeRendering(_) {\n    return arguments.length ? (this._shapeRendering = typeof _ === \"function\" ? _ : constant(_), this) : this._shapeRendering;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the sort comparator to the specified function and returns the current class instance.\n      @param {false|Function} [*value* = []]\n      @chainable\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  stroke(_) {\n    return arguments.length ? (this._stroke = typeof _ === \"function\" ? _ : constant(_), this) : this._stroke;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-dasharray\" attribute for the shapes.\n      @param {Function|String} [*value* = \"1\"]\n      @chainable\n  */\n  strokeDasharray(_) {\n    return arguments.length ? (this._strokeDasharray = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeDasharray;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-linecap\" attribute for the shapes. Accepted values are `\"butt\"`, `\"round\"`, and `\"square\"`.\n      @param {Function|String} [*value* = \"butt\"]\n      @chainable\n  */\n  strokeLinecap(_) {\n    return arguments.length ? (this._strokeLinecap = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeLinecap;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  strokeOpacity(_) {\n    return arguments.length ? (this._strokeOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke-width accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  strokeWidth(_) {\n    return arguments.length ? (this._strokeWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeWidth;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the text-anchor accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  textAnchor(_) {\n    return arguments.length ? (this._textAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._textAnchor;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vector-effect accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"non-scaling-stroke\"]\n      @chainable\n  */\n  vectorEffect(_) {\n    return arguments.length ? (this._vectorEffect = typeof _ === \"function\" ? _ : constant(_), this) : this._vectorEffect;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vertical alignment accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = typeof _ === \"function\" ? _ : constant(_), this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function lineIntersection\n    @desc Finds the intersection point (if there is one) of the lines p1q1 and p2q2.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  // allow for some margins due to numerical errors\n  const eps = 1e-9;\n\n  // find the intersection point between the two infinite lines\n  const dx1 = p1[0] - q1[0],\n        dx2 = p2[0] - q2[0],\n        dy1 = p1[1] - q1[1],\n        dy2 = p2[1] - q2[1];\n\n  const denom = dx1 * dy2 - dy1 * dx2;\n\n  if (Math.abs(denom) < eps) return null;\n\n  const cross1 = p1[0] * q1[1] - p1[1] * q1[0],\n        cross2 = p2[0] * q2[1] - p2[1] * q2[0];\n\n  const px = (cross1 * dx2 - cross2 * dx1) / denom,\n        py = (cross1 * dy2 - cross2 * dy1) / denom;\n\n  return [px, py];\n\n}\n","/**\n    @function segmentBoxContains\n    @desc Checks whether a point is inside the bounding box of a line segment.\n    @param {Array} s1 The first point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} s2 The second point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} p The point to be checked, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(s1, s2, p) {\n\n  const eps = 1e-9, [px, py] = p;\n\n  return !(px < Math.min(s1[0], s2[0]) - eps || px > Math.max(s1[0], s2[0]) + eps ||\n           py < Math.min(s1[1], s2[1]) - eps || py > Math.max(s1[1], s2[1]) + eps);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\n\n/**\n    @function segmentsIntersect\n    @desc Checks whether the line segments p1q1 && p2q2 intersect.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  const p = lineIntersection(p1, q1, p2, q2);\n  if (!p) return false;\n  return segmentBoxContains(p1, q1, p) && segmentBoxContains(p2, q2, p);\n\n}\n","import {polygonContains} from \"d3-polygon\";\n\nimport segmentsIntersect from \"./segmentsIntersect\";\n\n/**\n    @function polygonInside\n    @desc Checks if one polygon is inside another polygon.\n    @param {Array} polyA An Array of `[x, y]` points to be used as the inner polygon, checking if it is inside polyA.\n    @param {Array} polyB An Array of `[x, y]` points to be used as the containing polygon.\n    @returns {Boolean}\n*/\nexport default function(polyA, polyB) {\n\n  let iA = -1;\n  const nA = polyA.length;\n  const nB = polyB.length;\n  let bA = polyA[nA - 1];\n\n  while (++iA < nA) {\n\n    const aA = bA;\n    bA = polyA[iA];\n\n    let iB = -1;\n    let bB = polyB[nB - 1];\n    while (++iB < nB) {\n      const aB = bB;\n      bB = polyB[iB];\n      if (segmentsIntersect(aA, bA, aB, bB)) return false;\n    }\n  }\n\n  return polygonContains(polyB, polyA[0]);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function polygonRayCast\n    @desc Gives the two closest intersection points between a ray cast from a point inside a polygon. The two points should lie on opposite sides of the origin.\n    @param {Array} poly The polygon to test against, which should be an `[x, y]` formatted Array.\n    @param {Array} origin The origin point of the ray to be cast, which should be an `[x, y]` formatted Array.\n    @param {Number} [alpha = 0] The angle in radians of the ray.\n    @returns {Array} An array containing two values, the closest point on the left and the closest point on the right. If either point cannot be found, that value will be `null`.\n*/\nexport default function(poly, origin, alpha = 0) {\n\n  const eps = 1e-9;\n  origin = [origin[0] + eps * Math.cos(alpha), origin[1] + eps * Math.sin(alpha)];\n  const [x0, y0] = origin;\n  const shiftedOrigin = [x0 + Math.cos(alpha), y0 + Math.sin(alpha)];\n\n  let idx = 0;\n  if (Math.abs(shiftedOrigin[0] - x0) < eps) idx = 1;\n  let i = -1;\n  const n = poly.length;\n  let b = poly[n - 1];\n  let minSqDistLeft = Number.MAX_VALUE;\n  let minSqDistRight = Number.MAX_VALUE;\n  let closestPointLeft = null;\n  let closestPointRight = null;\n  while (++i < n) {\n    const a = b;\n    b = poly[i];\n    const p = lineIntersection(origin, shiftedOrigin, a, b);\n    if (p && segmentBoxContains(a, b, p)) {\n      const sqDist = pointDistanceSquared(origin, p);\n      if (p[idx] < origin[idx]) {\n        if (sqDist < minSqDistLeft) {\n          minSqDistLeft = sqDist;\n          closestPointLeft = p;\n        }\n      }\n      else if (p[idx] > origin[idx]) {\n        if (sqDist < minSqDistRight) {\n          minSqDistRight = sqDist;\n          closestPointRight = p;\n        }\n      }\n    }\n  }\n\n  return [closestPointLeft, closestPointRight];\n\n}\n","/**\n    @function pointRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} p The point to be rotated, which should always be an `[x, y]` formatted Array.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p, alpha, origin = [0, 0]) {\n\n  const cosAlpha = Math.cos(alpha),\n        sinAlpha = Math.sin(alpha),\n        xshifted = p[0] - origin[0],\n        yshifted = p[1] - origin[1];\n\n  return [\n    cosAlpha * xshifted - sinAlpha * yshifted + origin[0],\n    sinAlpha * xshifted + cosAlpha * yshifted + origin[1]\n  ];\n\n}\n","import pointRotate from \"./pointRotate\";\n\n/**\n    @function polygonRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} poly The polygon to be rotated, which should be an Array of `[x, y]` values.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default (poly, alpha, origin = [0, 0]) => poly.map(p => pointRotate(p, alpha, origin));\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @desc square distance from a point to a segment\n    @param {Array} point\n    @param {Array} segmentAnchor1\n    @param {Array} segmentAnchor2\n    @private\n*/\nfunction getSqSegDist(p, p1, p2) {\n\n  let x = p1[0],\n      y = p1[1];\n\n  let dx = p2[0] - x,\n      dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n\n    const t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n\n    }\n    else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n\n}\n\n/**\n    @desc basic distance-based simplification\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyRadialDist(poly, sqTolerance) {\n\n  let point,\n      prevPoint = poly[0];\n\n  const newPoints = [prevPoint];\n\n  for (let i = 1, len = poly.length; i < len; i++) {\n    point = poly[i];\n\n    if (pointDistanceSquared(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\n/**\n    @param {Array} polygon\n    @param {Number} first\n    @param {Number} last\n    @param {Number} sqTolerance\n    @param {Array} simplified\n    @private\n*/\nfunction simplifyDPStep(poly, first, last, sqTolerance, simplified) {\n\n  let index, maxSqDist = sqTolerance;\n\n  for (let i = first + 1; i < last; i++) {\n    const sqDist = getSqSegDist(poly[i], poly[first], poly[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(poly, first, index, sqTolerance, simplified);\n    simplified.push(poly[index]);\n    if (last - index > 1) simplifyDPStep(poly, index, last, sqTolerance, simplified);\n  }\n}\n\n/**\n    @desc simplification using Ramer-Douglas-Peucker algorithm\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyDouglasPeucker(poly, sqTolerance) {\n  const last = poly.length - 1;\n\n  const simplified = [poly[0]];\n  simplifyDPStep(poly, 0, last, sqTolerance, simplified);\n  simplified.push(poly[last]);\n\n  return simplified;\n}\n\n/**\n    @function largestRect\n    @desc Simplifies the points of a polygon using both the Ramer-Douglas-Peucker algorithm and basic distance-based simplification. Adapted to an ES6 module from the excellent [Simplify.js](http://mourner.github.io/simplify-js/).\n    @author Vladimir Agafonkin\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Number} [tolerance = 1] Affects the amount of simplification (in the same metric as the point coordinates).\n    @param {Boolean} [highestQuality = false] Excludes distance-based preprocessing step which leads to highest quality simplification but runs ~10-20 times slower.\n\n*/\nexport default (poly, tolerance = 1, highestQuality = false) => {\n\n  if (poly.length <= 2) return poly;\n\n  const sqTolerance = tolerance * tolerance;\n\n  poly = highestQuality ? poly : simplifyRadialDist(poly, sqTolerance);\n  poly = simplifyDouglasPeucker(poly, sqTolerance);\n\n  return poly;\n\n};\n","import {extent, merge, range} from \"d3-array\";\nimport {polygonArea, polygonCentroid, polygonContains} from \"d3-polygon\";\n\nimport polygonInside from \"./polygonInside\";\nimport polygonRayCast from \"./polygonRayCast\";\nimport polygonRotate from \"./polygonRotate\";\nimport simplify from \"./simplify\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n// Algorithm constants\nconst aspectRatioStep = 0.5; // step size for the aspect ratio\nconst angleStep = 5; // step size for angles (in degrees); has linear impact on running time\n\nconst polyCache = {};\n\n/**\n    @typedef {Object} LargestRect\n    @desc The returned Object of the largestRect function.\n    @property {Number} width The width of the rectangle\n    @property {Number} height The height of the rectangle\n    @property {Number} cx The x coordinate of the rectangle's center\n    @property {Number} cy The y coordinate of the rectangle's center\n    @property {Number} angle The rotation angle of the rectangle in degrees. The anchor of rotation is the center point.\n    @property {Number} area The area of the largest rectangle.\n    @property {Array} points An array of x/y coordinates for each point in the rectangle, useful for rendering paths.\n*/\n\n/**\n    @function largestRect\n    @author Daniel Smilkov [dsmilkov@gmail.com]\n    @desc An angle of zero means that the longer side of the polygon (the width) will be aligned with the x axis. An angle of 90 and/or -90 means that the longer side of the polygon (the width) will be aligned with the y axis. The value can be a number between -90 and 90 specifying the angle of rotation of the polygon, a string which is parsed to a number, or an array of numbers specifying the possible rotations of the polygon.\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Object} [options] An Object that allows for overriding various parameters of the algorithm.\n    @param {Number|String|Array} [options.angle = d3.range(-90, 95, 5)] The allowed rotations of the final rectangle.\n    @param {Number|String|Array} [options.aspectRatio] The ratio between the width and height of the rectangle. The value can be a number, a string which is parsed to a number, or an array of numbers specifying the possible aspect ratios of the final rectangle.\n    @param {Number} [options.maxAspectRatio = 15] The maximum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.minAspectRatio = 1] The minimum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.nTries = 20] The number of randomly drawn points inside the polygon which the algorithm explores as possible center points of the maximal rectangle.\n    @param {Number} [options.minHeight = 0] The minimum height of the rectangle.\n    @param {Number} [options.minWidth = 0] The minimum width of the rectangle.\n    @param {Number} [options.tolerance = 0.02] The simplification tolerance factor, between 0 and 1. A larger tolerance corresponds to more extensive simplification.\n    @param {Array} [options.origin] The center point of the rectangle. If specified, the rectangle will be fixed at that point, otherwise the algorithm optimizes across all possible points. The given value can be either a two dimensional array specifying the x and y coordinate of the origin or an array of two dimensional points specifying multiple possible center points of the rectangle.\n    @param {Boolean} [options.cache] Whether or not to cache the result, which would be used in subsequent calculations to preserve consistency and speed up calculation time.\n    @return {LargestRect}\n*/\nexport default function(poly, options = {}) {\n\n  if (poly.length < 3) {\n    if (options.verbose) console.error(\"polygon has to have at least 3 points\", poly);\n    return null;\n  }\n\n  // For visualization debugging purposes\n  const events = [];\n\n  // User's input normalization\n  options = Object.assign({\n    angle: range(-90, 90 + angleStep, angleStep),\n    cache: true,\n    maxAspectRatio: 15,\n    minAspectRatio: 1,\n    minHeight: 0,\n    minWidth: 0,\n    nTries: 20,\n    tolerance: 0.02,\n    verbose: false\n  }, options);\n\n  const angles = options.angle instanceof Array ? options.angle\n    : typeof options.angle === \"number\" ? [options.angle]\n    : typeof options.angle === \"string\" && !isNaN(options.angle) ? [Number(options.angle)]\n    : [];\n\n  const aspectRatios = options.aspectRatio instanceof Array ? options.aspectRatio\n    : typeof options.aspectRatio === \"number\" ? [options.aspectRatio]\n    : typeof options.aspectRatio === \"string\" && !isNaN(options.aspectRatio) ? [Number(options.aspectRatio)]\n    : [];\n\n  const origins = options.origin && options.origin instanceof Array\n    ? options.origin[0] instanceof Array ? options.origin\n    : [options.origin] : [];\n\n  let cacheString;\n  if (options.cache) {\n    cacheString = merge(poly).join(\",\");\n    cacheString += `-${options.minAspectRatio}`;\n    cacheString += `-${options.maxAspectRatio}`;\n    cacheString += `-${options.minHeight}`;\n    cacheString += `-${options.minWidth}`;\n    cacheString += `-${angles.join(\",\")}`;\n    cacheString += `-${origins.join(\",\")}`;\n    if (polyCache[cacheString]) return polyCache[cacheString];\n  }\n\n  const area = Math.abs(polygonArea(poly)); // take absolute value of the signed area\n  if (area === 0) {\n    if (options.verbose) console.error(\"polygon has 0 area\", poly);\n    return null;\n  }\n  // get the width of the bounding box of the original polygon to determine tolerance\n  let [minx, maxx] = extent(poly, d => d[0]);\n  let [miny, maxy] = extent(poly, d => d[1]);\n\n  // simplify polygon\n  const tolerance = Math.min(maxx - minx, maxy - miny) * options.tolerance;\n\n  if (tolerance > 0) poly = simplify(poly, tolerance);\n  if (options.events) events.push({type: \"simplify\", poly});\n\n  // get the width of the bounding box of the simplified polygon\n  [minx, maxx] = extent(poly, d => d[0]);\n  [miny, maxy] = extent(poly, d => d[1]);\n  const [boxWidth, boxHeight] = [maxx - minx, maxy - miny];\n\n  // discretize the binary search for optimal width to a resolution of this times the polygon width\n  const widthStep = Math.min(boxWidth, boxHeight) / 50;\n\n  // populate possible center points with random points inside the polygon\n  if (!origins.length) {\n    // get the centroid of the polygon\n    const centroid = polygonCentroid(poly);\n    if (!isFinite(centroid[0])) {\n      if (options.verbose) console.error(\"cannot find centroid\", poly);\n      return null;\n    }\n    if (polygonContains(poly, centroid)) origins.push(centroid);\n\n    let nTries = options.nTries;\n    // get few more points inside the polygon\n    while (nTries) {\n      const rndX = Math.random() * boxWidth + minx;\n      const rndY = Math.random() * boxHeight + miny;\n      const rndPoint = [rndX, rndY];\n      if (polygonContains(poly, rndPoint)) {\n        origins.push(rndPoint);\n      }\n      nTries--;\n    }\n  }\n  if (options.events) events.push({type: \"origins\", points: origins});\n  let maxArea = 0;\n  let maxRect = null;\n\n  for (let ai = 0; ai < angles.length; ai++) {\n    const angle = angles[ai];\n    const angleRad = -angle * Math.PI / 180;\n    if (options.events) events.push({type: \"angle\", angle});\n    for (let i = 0; i < origins.length; i++) {\n      const origOrigin = origins[i];\n      // generate improved origins\n      const [p1W, p2W] = polygonRayCast(poly, origOrigin, angleRad);\n      const [p1H, p2H] = polygonRayCast(poly, origOrigin, angleRad + Math.PI / 2);\n      const modifOrigins = [];\n      if (p1W && p2W) modifOrigins.push([(p1W[0] + p2W[0]) / 2, (p1W[1] + p2W[1]) / 2]); // average along with width axis\n      if (p1H && p2H) modifOrigins.push([(p1H[0] + p2H[0]) / 2, (p1H[1] + p2H[1]) / 2]); // average along with height axis\n\n      if (options.events) events.push({type: \"modifOrigin\", idx: i, p1W, p2W, p1H, p2H, modifOrigins});\n\n      for (let i = 0; i < modifOrigins.length; i++) {\n\n        const origin = modifOrigins[i];\n\n        if (options.events) events.push({type: \"origin\", cx: origin[0], cy: origin[1]});\n\n        const [p1W, p2W] = polygonRayCast(poly, origin, angleRad);\n        if (p1W === null || p2W === null) continue;\n        const minSqDistW = Math.min(pointDistanceSquared(origin, p1W), pointDistanceSquared(origin, p2W));\n        const maxWidth = 2 * Math.sqrt(minSqDistW);\n\n        const [p1H, p2H] = polygonRayCast(poly, origin, angleRad + Math.PI / 2);\n        if (p1H === null || p2H === null) continue;\n        const minSqDistH = Math.min(pointDistanceSquared(origin, p1H), pointDistanceSquared(origin, p2H));\n        const maxHeight = 2 * Math.sqrt(minSqDistH);\n\n        if (maxWidth * maxHeight < maxArea) continue;\n\n        let aRatios = aspectRatios;\n        if (!aRatios.length) {\n          const minAspectRatio = Math.max(options.minAspectRatio, options.minWidth / maxHeight, maxArea / (maxHeight * maxHeight));\n          const maxAspectRatio = Math.min(options.maxAspectRatio, maxWidth / options.minHeight, maxWidth * maxWidth / maxArea);\n          aRatios = range(minAspectRatio, maxAspectRatio + aspectRatioStep, aspectRatioStep);\n        }\n\n        for (let a = 0; a < aRatios.length; a++) {\n\n          const aRatio = aRatios[a];\n\n          // do a binary search to find the max width that works\n          let left = Math.max(options.minWidth, Math.sqrt(maxArea * aRatio));\n          let right = Math.min(maxWidth, maxHeight * aRatio);\n          if (right * maxHeight < maxArea) continue;\n\n          if (options.events && right - left >= widthStep) events.push({type: \"aRatio\", aRatio});\n\n          while (right - left >= widthStep) {\n            const width = (left + right) / 2;\n            const height = width / aRatio;\n            const [cx, cy] = origin;\n            let rectPoly = [\n              [cx - width / 2, cy - height / 2],\n              [cx + width / 2, cy - height / 2],\n              [cx + width / 2, cy + height / 2],\n              [cx - width / 2, cy + height / 2]\n            ];\n            rectPoly = polygonRotate(rectPoly, angleRad, origin);\n            const insidePoly = polygonInside(rectPoly, poly);\n            if (insidePoly) {\n              // we know that the area is already greater than the maxArea found so far\n              maxArea = width * height;\n              rectPoly.push(rectPoly[0]);\n              maxRect = {area: maxArea, cx, cy, width, height, angle: -angle, points: rectPoly};\n              left = width; // increase the width in the binary search\n            }\n            else {\n              right = width; // decrease the width in the binary search\n            }\n            if (options.events) events.push({type: \"rectangle\", areaFraction: width * height / area, cx, cy, width, height, angle, insidePoly});\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  if (options.cache) {\n    polyCache[cacheString] = maxRect;\n  }\n\n  return options.events ? Object.assign(maxRect || {}, {events}) : maxRect;\n\n}\n","import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {accessor, constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\n\n/**\n    @class Area\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Area extends Shape {\n\n  /**\n      @memberof Area\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = constant(\"linear\");\n    this._defined = () => true;\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points);\n      if (!r) return null;\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2 - this._x(d, i), y: r.cy - r.height / 2 - this._y(d, i)};\n    };\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Area\";\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Area\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d) {\n    const values = d.values.slice().sort((a, b) => this._y1 ? this._x(a) - this._x(b) : this._y(a) - this._y(b));\n    const points1 = values.map((v, z) => [this._x0(v, z), this._y0(v, z)]);\n    const points2 = values.reverse().map((v, z) => this._y1 ? [this._x(v, z), this._y1(v, z)] : [this._x1(v, z), this._y(v, z)]);\n    let points = points1.concat(points2);\n    if (points1[0][1] > points2[0][1]) points = points.reverse();\n    points.push(points[0]);\n    return {points};\n  }\n\n  /**\n      @memberof Area\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const areas = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values.map(this._x)\n        .concat(d.values.map(this._x0))\n        .concat(this._x1 ? d.values.map(this._x1) : [])\n      );\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values.map(this._y)\n        .concat(d.values.map(this._y0))\n        .concat(this._y1 ? d.values.map(this._y1) : [])\n      );\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    areas.key = d => d.key;\n    return areas;\n\n  }\n\n  /**\n      @memberof Area\n      @desc Draws the area polygons.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const userCurve = this._curve.bind(this)(this.config());\n    const curve = paths[`curve${userCurve.charAt(0).toUpperCase()}${userCurve.slice(1)}`];\n\n    const path = this._path = paths.area()\n      .defined(this._defined)\n      .curve(curve)\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    const exitPath = paths.area()\n      .defined(d => d)\n      .curve(curve)\n      .x(this._x).y(this._y)\n      .x0((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .x1((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .y0((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i))\n      .y1((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i));\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => exitPath(d.values))\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), path(d.values));\n        });\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    this._exit.select(\"path\").transition(this._transition)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), exitPath(d.values));\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {Function|String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = typeof _ === \"function\" ? _ : constant(_), this) : this._curve;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (!arguments.length) return this._x;\n    this._x = typeof _ === \"function\" ? _ : constant(_);\n    this._x0 = this._x;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (!arguments.length) return this._y;\n    this._y = typeof _ === \"function\" ? _ : constant(_);\n    this._y0 = this._y;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Bar\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Bar extends Shape {\n\n  /**\n      @memberof Bar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super(\"rect\");\n\n    this._name = \"Bar\";\n    this._height = constant(10);\n    this._labelBounds = (d, i, s) => ({\n      width: s.width,\n      height: s.height,\n      x: this._x1 !== null ? this._getX(d, i) : -s.width / 2,\n      y: this._x1 === null ? this._getY(d, i) : -s.height / 2\n    });\n    this._width = constant(10);\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Draws the bars.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n      .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n      .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n      .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n        .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n        .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n        .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {height: this._getHeight(d, i), width: this._getWidth(d, i)};\n  }\n\n  /**\n      @memberof Bar\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._getWidth(d, i))\n      .attr(\"height\", (d, i) => this._getHeight(d, i))\n      .attr(\"x\", (d, i) => this._x1 !== null ? this._getX(d, i) : -this._getWidth(d, i) / 2)\n      .attr(\"y\", (d, i) => this._x1 === null ? this._getY(d, i) : -this._getHeight(d, i) / 2);\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the height of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getHeight(d, i) {\n    if (this._x1 !== null) return this._height(d, i);\n    return Math.abs(this._y1(d, i) - this._y(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the width of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getWidth(d, i) {\n    if (this._x1 === null) return this._width(d, i);\n    return Math.abs(this._x1(d, i) - this._x(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the x of the <rect> by assessing the x and width properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getX(d, i) {\n    const w = this._x1 === null ? this._x(d, i) : this._x1(d, i) - this._x(d, i);\n    if (w < 0) return w;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the y of the <rect> by assessing the y and height properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getY(d, i) {\n    const h = this._x1 !== null ? this._y(d, i) : this._y1(d, i) - this._y(d, i);\n    if (h < 0) return h;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, assign, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Circle\n    @extends Shape\n    @desc Creates SVG circles based on an array of data.\n*/\nexport default class Circle extends Shape {\n\n  /**\n      @memberof Circle\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"circle\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.r * 1.5, height: s.r * 1.5, x: -s.r * 0.75, y: -s.r * 0.75});\n    this._labelConfig = assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Circle\";\n    this._r = accessor(\"r\");\n  }\n\n  /**\n      @memberof Circle\n      @desc Provides the default positioning to the <rect> elements.\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"r\", (d, i) => this._r(d, i))\n      .attr(\"x\", (d, i) => -this._r(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._r(d, i) / 2);\n  }\n\n  /**\n      @memberof Circle\n      @desc Draws the circles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0)\n        .transition(this._transition)\n          .call(this._applyPosition.bind(this));\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0);\n    }\n    else {\n      enter.call(this._applyPosition.bind(this));\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Circle\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {r: this._r(d, i)};\n  }\n\n  /**\n      @memberof Circle\n      @desc If *value* is specified, sets the radius accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.r;\n}\n  */\n  r(_) {\n    return arguments.length ? (this._r = typeof _ === \"function\" ? _ : constant(_), this) : this._r;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Rect\n    @extends Shape\n    @desc Creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-shape/getting-started/) for help getting started using the rectangle generator.\n*/\nexport default class Rect extends Shape {\n\n  /**\n      @memberof Rect\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"rect\");\n    this._height = accessor(\"height\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2});\n    this._name = \"Rect\";\n    this._width = accessor(\"width\");\n  }\n\n  /**\n      @memberof Rect\n      @desc Draws the rectangles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", 0).attr(\"height\", 0)\n      .attr(\"x\", 0).attr(\"y\", 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", 0).attr(\"height\", 0)\n        .attr(\"x\", 0).attr(\"y\", 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Rect\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {width: this._width(d, i), height: this._height(d, i)};\n  }\n\n  /**\n      @memberof Rect\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => -this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._height(d, i) / 2);\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n}\n","import {extent, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Line\n    @extends Shape\n    @desc Creates SVG lines based on an array of data.\n*/\nexport default class Line extends Shape {\n\n  /**\n      @memberof Line\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = constant(\"linear\");\n    this._defined = d => d;\n    this._fill = constant(\"none\");\n    this._hitArea = constant({\n      \"d\": d => this._path(d.values),\n      \"fill\": \"none\",\n      \"stroke-width\": 10,\n      \"transform\": null\n    });\n    this._name = \"Line\";\n    this._path = paths.line();\n    this._stroke = constant(\"black\");\n    this._strokeWidth = constant(1);\n\n  }\n\n  /**\n      @memberof Line\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const lines = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values, this._x);\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values, this._y);\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    lines.key = d => d.key;\n    return lines;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Draws the lines.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const that = this;\n\n    /**\n        @desc Calculates the stroke-dasharray used for animations\n        @param {Object} *d* data point\n        @private\n    */\n    function calculateStrokeDashArray(d) {\n\n      d.initialLength = this.getTotalLength();\n\n      let strokeArray = that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0]))\n        .split(\" \").map(Number);\n\n      if (strokeArray.length === 1 && strokeArray[0] === 0) strokeArray = [d.initialLength];\n      else if (strokeArray.length === 1) strokeArray.push(strokeArray[0]);\n      else if (strokeArray.length % 2) strokeArray = strokeArray.concat(strokeArray);\n\n      const newStrokeArray = [];\n      let strokeLength = 0;\n      while (strokeLength < d.initialLength) {\n        for (let i = 0; i < strokeArray.length; i++) {\n          const num = strokeArray[i];\n          strokeLength += num;\n          newStrokeArray.push(num);\n          if (strokeLength >= d.initialLength) break;\n        }\n      }\n\n      if (newStrokeArray.length > 1 && newStrokeArray.length % 2) newStrokeArray.pop();\n      newStrokeArray[newStrokeArray.length - 1] += d.initialLength - sum(newStrokeArray);\n      if (newStrokeArray.length % 2 === 0) newStrokeArray.push(0);\n      d.initialStrokeArray = newStrokeArray.join(\" \");\n\n    }\n\n    const userCurve = this._curve.bind(this)(this.config());\n    const curve = paths[`curve${userCurve.charAt(0).toUpperCase()}${userCurve.slice(1)}`];\n\n    this._path\n      .curve(curve)\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    const enter = this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => this._path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update.select(\"path\")\n      .attr(\"stroke-dasharray\", d => that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0])));\n\n    if (this._duration) {\n      enter\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .attr(\"stroke-dashoffset\", d => d.initialLength)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", 0);\n      update = update.transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), that._path(d.values));\n        });\n      this._exit.selectAll(\"path\")\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", d => -d.initialLength);\n\n    }\n    else {\n      update = update\n        .attr(\"d\", d => that._path(d.values));\n    }\n\n    update\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .call(this._applyStyle.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: d.values.map(p => [this._x(p, i), this._y(p, i)])};\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {Function|String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = typeof _ === \"function\" ? _ : constant(_), this) : this._curve;\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n}\n","import {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {nest} from \"d3-collection\";\n\nimport Circle from \"./Circle\";\nimport Line from \"./Line\";\nimport Rect from \"./Rect\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Whisker\n    @extends BaseClass\n    @desc Creates SVG whisker based on an array of data.\n*/\nexport default class Whisker extends BaseClass {\n\n  /**\n      @memberof Whisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._endpoint = accessor(\"endpoint\", \"Rect\");\n    this._endpointConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      }\n    };\n    this._length = accessor(\"length\", 25);\n    this._lineConfig = {};\n    this._orient = accessor(\"orient\", \"top\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Draws the whisker.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const lineData = [];\n    this._data.forEach((d, i) => {\n\n      const orient = this._orient(d, i);\n      const x = this._x(d, i);\n      const y = this._y(d, i);\n\n      let endpointX = x;\n      if (orient === \"left\") endpointX -= this._length(d, i);\n      else if (orient === \"right\") endpointX += this._length(d, i);\n\n      let endpointY = y;\n      if (orient === \"top\") endpointY -= this._length(d, i);\n      else if (orient === \"bottom\") endpointY += this._length(d, i);\n\n      lineData.push({__d3plus__: true, data: d, i, id: i, x, y});\n      lineData.push({__d3plus__: true, data: d, i, id: i, x: endpointX, y: endpointY});\n    });\n\n    // Draw whisker line.\n    this._line = new Line()\n      .data(lineData)\n      .select(elem(\"g.d3plus-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._lineConfig, \"shape\"))\n      .render(callback);\n\n    const whiskerData = this._data.map((d, i) => {\n\n      const dataObj = {};\n      dataObj.__d3plus__ = true;\n      dataObj.data = d;\n      dataObj.i = i;\n      dataObj.endpoint = this._endpoint(d, i);\n      dataObj.length = this._length(d, i);\n      dataObj.orient = this._orient(d, i);\n\n      let endpointX = this._x(d, i);\n      if (dataObj.orient === \"left\") endpointX -= dataObj.length;\n      else if (dataObj.orient === \"right\") endpointX += dataObj.length;\n\n      let endpointY = this._y(d, i);\n      if (dataObj.orient === \"top\") endpointY -= dataObj.length;\n      else if (dataObj.orient === \"bottom\") endpointY += dataObj.length;\n\n      dataObj.x = endpointX;\n      dataObj.y = endpointY;\n\n      return dataObj;\n\n    });\n\n    // Draw whisker endpoint.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.endpoint)\n      .entries(whiskerData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Whisker-Endpoint-${shapeName}`, {parent: this._select}).node())\n          .config({\n            height: d => d.orient === \"top\" || d.orient === \"bottom\" ? 5 : 20,\n            width: d => d.orient === \"top\" || d.orient === \"bottom\" ? 20 : 5\n          })\n          .config(configPrep.bind(this)(this._endpointConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._line) this._line.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the endpoint accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  endpoint(_) {\n    return arguments.length ? (this._endpoint = typeof _ === \"function\" ? _ : constant(_), this) : this._endpoint;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for each endpoint and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  endpointConfig(_) {\n    return arguments.length ? (this._endpointConfig = assign(this._endpointConfig, _), this) : this._endpointConfig;\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._line) this._line.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the length accessor for whisker and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  length(_) {\n    return arguments.length ? (this._length = typeof _ === \"function\" ? _ : constant(_), this) : this._length;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for line shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  lineConfig(_) {\n    return arguments.length ? (this._lineConfig = assign(this._lineConfig, _), this) : this._lineConfig;\n  }\n  \n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"top\"] Accepts \"top\", \"right\", \"bottom\" or \"left\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n    @memberof Whisker\n    @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n    @param {Function|Number} [*value*]\n    @chainable\n    @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","import {max, min, quantile} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, merge, elem} from \"d3plus-common\";\n\nimport Circle from \"./Circle\";\nimport Rect from \"./Rect\";\nimport Whisker from \"./Whisker\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Box\n    @extends BaseClass\n    @desc Creates SVG box based on an array of data.\n*/\nexport default class Box extends BaseClass {\n\n  /**\n      @memberof Box\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._medianConfig = {\n      fill: constant(\"black\")\n    };\n    this._orient = accessor(\"orient\", \"vertical\");\n    this._outlier = accessor(\"outlier\", \"Circle\");\n    this._outlierConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      },\n      Rect: {\n        height: (d, i) => this._orient(d, i) === \"vertical\" ? 5 : 20,\n        width: (d, i) => this._orient(d, i) === \"vertical\" ? 20 : 5\n      }\n    };\n    this._rectConfig = {\n      fill: constant(\"white\"),\n      stroke: constant(\"black\"),\n      strokeWidth: constant(1)\n    };\n    this._rectWidth = constant(50);\n    this._whiskerConfig = {};\n    this._whiskerMode = [\"tukey\", \"tukey\"];\n    this._x = accessor(\"x\", 250);\n    this._y = accessor(\"y\", 250);\n\n  }\n\n  /**\n      @memberof Box\n      @desc Draws the Box.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render() {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const outlierData = [];\n\n    const filteredData = nest()\n      .key((d, i) => this._orient(d, i) === \"vertical\" ? this._x(d, i) : this._y(d, i))\n      .entries(this._data)\n      .map(d => {\n        d.data = merge(d.values);\n        d.i = this._data.indexOf(d.values[0]);\n        d.orient = this._orient(d.data, d.i);\n        const values = d.values.map(d.orient === \"vertical\" ? this._y : this._x);\n        values.sort((a, b) => a - b);\n\n        d.first = quantile(values, 0.25);\n        d.median = quantile(values, 0.50);\n        d.third = quantile(values, 0.75);\n\n        const mode = this._whiskerMode;\n\n        if (mode[0] === \"tukey\") {\n          d.lowerLimit = d.first - (d.third - d.first) * 1.5;\n          if (d.lowerLimit < min(values)) d.lowerLimit = min(values);\n        }\n        else if (mode[0] === \"extent\") d.lowerLimit = min(values);\n        else if (typeof mode[0] === \"number\") d.lowerLimit = quantile(values, mode[0]);\n\n        if (mode[1] === \"tukey\") {\n          d.upperLimit = d.third + (d.third - d.first) * 1.5;\n          if (d.upperLimit > max(values)) d.upperLimit = max(values);\n        }\n        else if (mode[1] === \"extent\") d.upperLimit = max(values);\n        else if (typeof mode[1] === \"number\") d.upperLimit = quantile(values, mode[1]);\n\n        const rectLength = d.third - d.first;\n\n        // Compute values for vertical orientation.\n        if (d.orient === \"vertical\") {\n          d.height = rectLength;\n          d.width = this._rectWidth(d.data, d.i);\n          d.x = this._x(d.data, d.i);\n          d.y = d.first + rectLength / 2;\n        }\n        else if (d.orient === \"horizontal\") {\n        // Compute values for horizontal orientation.\n          d.height = this._rectWidth(d.data, d.i);\n          d.width = rectLength;\n          d.x = d.first + rectLength / 2;\n          d.y = this._y(d.data, d.i);\n        }\n\n        // Compute data for outliers.\n        d.values.forEach((eachValue, index) => {\n          const value = d.orient === \"vertical\" ? this._y(eachValue, index) : this._x(eachValue, index);\n\n          if (value < d.lowerLimit || value > d.upperLimit) {\n            const dataObj = {};\n            dataObj.__d3plus__ = true;\n            dataObj.data = eachValue;\n            dataObj.i = index;\n            dataObj.outlier = this._outlier(eachValue, index);\n\n            if (d.orient === \"vertical\") {\n              dataObj.x = d.x;\n              dataObj.y = value;\n              outlierData.push(dataObj);\n            }\n            else if (d.orient === \"horizontal\") {\n              dataObj.y = d.y;\n              dataObj.x = value;\n              outlierData.push(dataObj);\n            }\n          }\n\n        });\n\n        d.__d3plus__ = true;\n\n        return d;\n      });\n\n    // Draw box.\n    this._box = new Rect()\n      .data(filteredData)\n      .x(d => d.x)\n      .y(d => d.y)\n      .select(elem(\"g.d3plus-Box\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._rectConfig, \"shape\"))\n      .render();\n\n    // Draw median.\n    this._median = new Rect()\n      .data(filteredData)\n      .x(d => d.orient === \"vertical\" ? d.x : d.median)\n      .y(d => d.orient === \"vertical\" ? d.median : d.y)\n      .height(d => d.orient === \"vertical\" ? 1 : d.height)\n      .width(d => d.orient === \"vertical\" ? d.width : 1)\n      .select(elem(\"g.d3plus-Box-Median\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._medianConfig, \"shape\"))\n      .render();\n\n    // Draw 2 lines using Whisker class.\n    // Construct coordinates for whisker startpoints and push it to the whiskerData.\n    const whiskerData = [];\n    filteredData.forEach((d, i) => {\n      const x = d.x;\n      const y = d.y;\n      const topLength = d.first - d.lowerLimit;\n      const bottomLength = d.upperLimit - d.third;\n\n      if (d.orient === \"vertical\") {\n        const topY = y - d.height / 2;\n        const bottomY = y + d.height / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x, y: topY, length: topLength, orient: \"top\"},\n          {__d3plus__: true, data: d, i, x, y: bottomY, length: bottomLength, orient: \"bottom\"}\n        );\n      }\n      else if (d.orient === \"horizontal\") {\n        const topX = x + d.width / 2;\n        const bottomX = x - d.width / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x: topX, y, length: bottomLength, orient: \"right\"},\n          {__d3plus__: true, data: d, i, x: bottomX, y, length: topLength, orient: \"left\"}\n        );\n      }\n\n    });\n\n    // Draw whiskers.\n    this._whisker = new Whisker()\n      .data(whiskerData)\n      .select(elem(\"g.d3plus-Box-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._whiskerConfig, \"shape\"))\n      .render();\n\n    // Draw outliers.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.outlier)\n      .entries(outlierData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Box-Outlier-${shapeName}`, {parent: this._select}).node())\n          .config(configPrep.bind(this)(this._outlierConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._box) this._box.active(_);\n    if (this._median) this._median.active(_);\n    if (this._whisker) this._whisker.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._box) this._box.hover(_);\n    if (this._median) this._median.hover(_);\n    if (this._whisker) this._whisker.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for median and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  medianConfig(_) {\n    return arguments.length ? (this._medianConfig = assign(this._medianConfig, _), this) : this._medianConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"vertical\"] Accepts \"vertical\" or \"horizontal\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the outlier accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  outlier(_) {\n    return arguments.length ? (this._outlier = typeof _ === \"function\" ? _ : constant(_), this) : this._outlier;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for each outlier point and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  outlierConfig(_) {\n    return arguments.length ? (this._outlierConfig = assign(this._outlierConfig, _), this) : this._outlierConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for rect shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  rectConfig(_) {\n    return arguments.length ? (this._rectConfig = assign(this._rectConfig, _), this) : this._rectConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  rectWidth(_) {\n    return arguments.length ? (this._rectWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._rectWidth;\n  }\n\n  /**\n      @memberof Box\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for whisker and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  whiskerConfig(_) {\n    return arguments.length ? (this._whiskerConfig = assign(this._whiskerConfig, _), this) : this._whiskerConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc Determines the value used for each whisker. Can be passed a single value to apply for both whiskers, or an Array of 2 values for the lower and upper whiskers (in that order). Accepted values are `\"tukey\"`, `\"extent\"`, or a Number representing a quantile.\n      @param {String|Number|String[]|Number[]} [*value* = \"tukey\"]\n      @chainable\n  */\n  whiskerMode(_) {\n    return arguments.length ? (this._whiskerMode = _ instanceof Array ? _ : [_, _], this) : this._whiskerMode;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : accessor(_), this) : this._x;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : accessor(_), this) : this._y;\n  }\n\n}\n","const pi = Math.PI;\n\n/**\n    @function shapeEdgePoint\n    @desc Calculates the x/y position of a point at the edge of a shape, from the center of the shape, given a specified pixel distance and radian angle.\n    @param {Number} angle The angle, in radians, of the offset point.\n    @param {Number} distance The pixel distance away from the origin.\n    @returns {String} [shape = \"circle\"] The type of shape, which can be either \"circle\" or \"square\".\n*/\nexport default (angle, distance, shape = \"circle\") => {\n\n  if (angle < 0) angle = pi * 2 + angle;\n\n  if (shape === \"square\") {\n\n    const diagonal = 45 * (pi / 180);\n    let x = 0, y = 0;\n\n    if (angle < pi / 2) {\n      const tan = Math.tan(angle);\n      x += angle < diagonal ? distance : distance / tan;\n      y += angle < diagonal ? tan * distance : distance;\n    }\n    else if (angle <= pi) {\n      const tan = Math.tan(pi - angle);\n      x -= angle < pi - diagonal ? distance / tan : distance;\n      y += angle < pi - diagonal ? distance : tan * distance;\n    }\n    else if (angle < diagonal + pi) {\n      x -= distance;\n      y -= Math.tan(angle - pi) * distance;\n    }\n    else if (angle < 3 * pi / 2) {\n      x -= distance / Math.tan(angle - pi);\n      y -= distance;\n    }\n    else if (angle < 2 * pi - diagonal) {\n      x += distance / Math.tan(2 * pi - angle);\n      y -= distance;\n    }\n    else {\n      x += distance;\n      y -= Math.tan(2 * pi - angle) * distance;\n    }\n\n    return [x, y];\n\n  }\n  else if (shape === \"circle\") {\n    return [distance * Math.cos(angle), distance * Math.sin(angle)];\n  }\n  else return null;\n\n};\n","import pointDistance from \"./pointDistance\";\nimport shapeEdgePoint from \"./shapeEdgePoint\";\n\nconst pi = Math.PI;\n\n/**\n    @function path2polygon\n    @desc Transforms a path string into an Array of points.\n    @param {String} path An SVG string path, commonly the \"d\" property of a <path> element.\n    @param {Number} [segmentLength = 20] The lenght of line segments when converting curves line segments. Higher values lower computation time, but will result in curves that are more rigid.\n    @returns {Array}\n*/\nexport default (path, segmentLength = 20) => {\n\n  const poly = [],\n        regex = /([MLA])([^MLAZ]+)/ig;\n\n  let match = regex.exec(path);\n  while (match !== null) {\n\n    if ([\"M\", \"L\"].includes(match[1])) poly.push(match[2].split(\",\").map(Number));\n    else if (match[1] === \"A\") {\n\n      const points = match[2].split(\",\").map(Number);\n\n      const last = points.slice(points.length - 2, points.length),\n            prev = poly[poly.length - 1],\n            radius = points[0],\n            width = pointDistance(prev, last);\n\n      let angle = Math.acos((radius * radius + radius * radius - width * width) / (2 * radius * radius));\n      if (points[2]) angle = pi * 2 - angle;\n\n      const step = angle / (angle / (pi * 2) * (radius * pi * 2) / segmentLength);\n      const start = Math.atan2(-prev[1], -prev[0]) - pi;\n      let i = step;\n      while (i < angle) {\n        poly.push(shapeEdgePoint(points[4] ? start + i : start - i, radius));\n        i += step;\n      }\n      poly.push(last);\n\n    }\n    match = regex.exec(path);\n\n  }\n\n  return poly;\n\n};\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\nimport path2polygon from \"../geom/path2polygon\";\n\n/**\n    @class Path\n    @extends Shape\n    @desc Creates SVG Paths based on an array of data.\n*/\nexport default class Path extends Shape {\n\n  /**\n      @memberof Path\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"path\");\n    this._d = accessor(\"path\");\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points, {angle: this._labelConfig.rotate ? this._labelConfig.rotate(d, i) : 0});\n      return r ? {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2, y: r.cy - r.height / 2} : false;\n    };\n    this._name = \"Path\";\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n  }\n\n  /**\n      @memberof Path\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: path2polygon(this._d(d, i))};\n  }\n\n  /**\n      @memberof Path\n      @desc Draws the paths.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .attr(\"d\", this._d)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"opacity\", 0)\n        .transition(this._transition)\n          .attr(\"opacity\", 1);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"opacity\", 0);\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .attr(\"d\", this._d);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Path\n      @desc If *value* is specified, sets the \"d\" attribute accessor to the specified function or number and returns the current class instance.\n      @param {Function|String} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.path;\n}\n  */\n  d(_) {\n    return arguments.length ? (this._d = typeof _ === \"function\" ? _ : constant(_), this) : this._d;\n  }\n\n}\n"],"names":["Image","_duration","_height","accessor","_id","_opacity","constant","_pointerEvents","_select","_url","_width","_x","_y","callback","select","append","style","window","innerWidth","innerHeight","node","images","selectAll","data","_data","enter","attr","d","i","t","transition","duration","that","update","merge","each","image","link","fullAddress","indexOf","location","hostname","img","src","crossOrigin","onload","canvas","document","createElement","width","height","context","getContext","drawImage","toDataURL","exit","remove","setTimeout","_","arguments","length","p1","p2","dx","dy","Math","sqrt","pointDistanceSquared","Shape","tagName","_activeOpacity","_activeStyle","c","_fill","includes","_stroke","color","darker","s","_strokeWidth","_ariaLabel","_backgroundImage","_backgroundImageClass","_fillOpacity","_hoverOpacity","_hoverStyle","id","_label","_labelClass","TextBox","_labelConfig","fontColor","colorContrast","fontSize","padding","_name","_role","_rotate","_rx","_ry","_scale","_shapeRendering","_strokeDasharray","_strokeLinecap","_strokeOpacity","_tagName","_textAnchor","_vectorEffect","_verticalAlign","handler","events","Object","keys","_on","e","on","event","nested","values","calcPoint","_discrete","cursor","pointer","map","pointDistance","min","bind","undefined","elem","size","styleLogic","key","styleObject","hasOwnProperty","call","attrize","__d3plusShape__","translate","scale","rotate","method","_group","parentNode","parent","classed","__d3plus__","group","_active","_activeGroup","appendChild","className","baseVal","_applyStyle","_updateStyle","_hover","_hoverGroup","imageData","_update","_enter","forEach","datum","aes","_aes","r","url","x","y","push","opacity","_nestWrapper","pointerEvents","render","labelData","labels","_labelBounds","bounds","constructor","Array","l","b","assign","labelConfig","angle","rotateAnchor","text","fontOpacity","config","configPrep","_transition","_dataFilter","_sort","sort","a","removeChild","order","_applyTransform","strip","enterUpdate","enterUpdateRender","delay","_exit","_renderImage","_renderLabels","hitAreas","_hitArea","isLine","curve","_curve","_path","paths","charAt","toUpperCase","slice","defined","_defined","hitEnter","hitUpdates","h","parseFloat","_applyEvents","_renderActive","_renderHover","BaseClass","q1","q2","eps","dx1","dx2","dy1","dy2","denom","abs","cross1","cross2","px","py","s1","s2","p","max","lineIntersection","segmentBoxContains","polyA","polyB","iA","nA","nB","bA","aA","iB","bB","aB","segmentsIntersect","polygonContains","poly","origin","alpha","cos","sin","x0","y0","shiftedOrigin","idx","n","minSqDistLeft","Number","MAX_VALUE","minSqDistRight","closestPointLeft","closestPointRight","sqDist","cosAlpha","sinAlpha","xshifted","yshifted","pointRotate","getSqSegDist","simplifyRadialDist","sqTolerance","point","prevPoint","newPoints","len","simplifyDPStep","first","last","simplified","index","maxSqDist","simplifyDouglasPeucker","tolerance","highestQuality","aspectRatioStep","angleStep","polyCache","options","verbose","console","error","range","cache","maxAspectRatio","minAspectRatio","minHeight","minWidth","nTries","angles","isNaN","aspectRatios","aspectRatio","origins","cacheString","join","area","polygonArea","extent","minx","maxx","miny","maxy","simplify","type","boxWidth","boxHeight","widthStep","centroid","polygonCentroid","isFinite","rndX","random","rndY","rndPoint","points","maxArea","maxRect","ai","angleRad","PI","origOrigin","polygonRayCast","p1W","p2W","p1H","p2H","modifOrigins","cx","cy","minSqDistW","maxWidth","minSqDistH","maxHeight","aRatios","aRatio","left","right","rectPoly","polygonRotate","insidePoly","polygonInside","areaFraction","Area","largestRect","textAnchor","verticalAlign","_x0","_x1","_y0","_y1","points1","v","z","points2","reverse","concat","areas","nest","entries","xR","yR","userCurve","path","paths.area","x1","y1","exitPath","attrTween","interpolatePath","Bar","_getX","_getY","_getWidth","_getHeight","_applyPosition","w","Circle","_r","Rect","Line","paths.line","lines","calculateStrokeDashArray","initialLength","getTotalLength","strokeArray","split","newStrokeArray","strokeLength","num","pop","sum","initialStrokeArray","shapes","Whisker","_endpoint","_endpointConfig","_length","_lineConfig","_orient","lineData","orient","endpointX","endpointY","_line","whiskerData","dataObj","endpoint","_whiskerEndpoint","shapeData","shapeName","active","endPoint","hover","Box","_medianConfig","fill","_outlier","_outlierConfig","_rectConfig","stroke","strokeWidth","_rectWidth","_whiskerConfig","_whiskerMode","outlierData","filteredData","quantile","median","third","mode","lowerLimit","upperLimit","rectLength","eachValue","value","outlier","_box","_median","topLength","bottomLength","topY","bottomY","topX","bottomX","_whisker","pi","distance","shape","diagonal","tan","segmentLength","regex","match","exec","prev","radius","acos","step","start","atan2","shapeEdgePoint","Path","_d","path2polygon"],"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"}