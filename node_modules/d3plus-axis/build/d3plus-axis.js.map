{"version":3,"file":"d3plus-axis.js","sources":["../src/date.js","../src/locale.js","../src/Axis.js","../src/AxisBottom.js","../src/AxisLeft.js","../src/AxisRight.js","../src/AxisTop.js"],"sourcesContent":["/**\n    @function date\n    @summary Parses numbers and strings to valid Javascript Date objects.\n    @description Returns a javascript Date object for a given a Number (representing either a 4-digit year or milliseconds since epoch) or a String that is in [valid dateString format](http://dygraphs.com/date-formats.html). Besides the 4-digit year parsing, this function is useful when needing to parse negative (BC) years, which the vanilla Date object cannot parse.\n    @param {Number|String} *date*\n*/\nexport default function(d) {\n\n  // returns if already Date object\n  if (d.constructor === Date) return d;\n  // detects if milliseconds\n  else if (d.constructor === Number && `${d}`.length > 5 && d % 1 === 0) return new Date(d);\n\n  let s = `${d}`;\n  const dayFormat = new RegExp(/^\\d{1,2}[./-]\\d{1,2}[./-](-*\\d{1,4})$/g).exec(s),\n        strFormat = new RegExp(/^[A-z]{1,3} [A-z]{1,3} \\d{1,2} (-*\\d{1,4}) \\d{1,2}:\\d{1,2}:\\d{1,2} [A-z]{1,3}-*\\d{1,4} \\([A-z]{1,3}\\)/g).exec(s);\n\n  // tests for XX/XX/XXXX format\n  if (dayFormat) {\n    const year = dayFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substr(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n  // tests for full Date object string format\n  else if (strFormat) {\n    const year = strFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substr(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n  // detects if only passing a year value\n  else if (!s.includes(\"/\") && !s.includes(\" \") && (!s.includes(\"-\") || !s.indexOf(\"-\"))) {\n    const date = new Date(`${s}/01/01`);\n    date.setFullYear(d);\n    return date;\n  }\n  // parses string to Date object\n  else return new Date(s);\n\n}\n","export default {\n  \"de-DE\": {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sonntag\",\n      \"Montag\",\n      \"Dienstag\",\n      \"Mittwoch\",\n      \"Donnerstag\",\n      \"Freitag\",\n      \"Samstag\"\n    ],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\n      \"Januar\",\n      \"Februar\",\n      \"März\",\n      \"April\",\n      \"Mai\",\n      \"Juni\",\n      \"Juli\",\n      \"August\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"Dezember\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mrz\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Okt\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  },\n  \"en-GB\": {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"en-US\": {\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"es-ES\": {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"es-MX\": {\n    dateTime: \"%x, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"fr-FR\": {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\n      \"janvier\",\n      \"février\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"août\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"décembre\"\n    ],\n    shortMonths: [\n      \"janv.\",\n      \"févr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"août\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"déc.\"\n    ]\n  },\n  \"it-IT\": {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domenica\",\n      \"Lunedì\",\n      \"Martedì\",\n      \"Mercoledì\",\n      \"Giovedì\",\n      \"Venerdì\",\n      \"Sabato\"\n    ],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\n      \"Gennaio\",\n      \"Febbraio\",\n      \"Marzo\",\n      \"Aprile\",\n      \"Maggio\",\n      \"Giugno\",\n      \"Luglio\",\n      \"Agosto\",\n      \"Settembre\",\n      \"Ottobre\",\n      \"Novembre\",\n      \"Dicembre\"\n    ],\n    shortMonths: [\n      \"Gen\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mag\",\n      \"Giu\",\n      \"Lug\",\n      \"Ago\",\n      \"Set\",\n      \"Ott\",\n      \"Nov\",\n      \"Dic\"\n    ]\n  },\n  \"pt-BR\": {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domingo\",\n      \"Segunda\",\n      \"Terça\",\n      \"Quarta\",\n      \"Quinta\",\n      \"Sexta\",\n      \"Sábado\"\n    ],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\n      \"Janeiro\",\n      \"Fevereiro\",\n      \"Março\",\n      \"Abril\",\n      \"Maio\",\n      \"Junho\",\n      \"Julho\",\n      \"Agosto\",\n      \"Setembro\",\n      \"Outubro\",\n      \"Novembro\",\n      \"Dezembro\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Fev\",\n      \"Mar\",\n      \"Abr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Ago\",\n      \"Set\",\n      \"Out\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  }\n};\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {extent, max, min, range as d3Range, ticks as d3Ticks} from \"d3-array\";\nimport {timeFormatDefaultLocale} from \"d3-time-format\";\nimport * as scales from \"d3-scale\";\nimport {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {assign, attrize, BaseClass, closest, constant, elem} from \"d3plus-common\";\nimport {colorDefaults} from \"d3plus-color\";\nimport {formatAbbreviate, formatDate, formatLocale} from \"d3plus-format\";\nimport * as shapes from \"d3plus-shape\";\nimport {rtl as detectRTL, TextBox, textWrap} from \"d3plus-text\";\n\nimport {default as date} from \"./date\";\nimport {default as locale} from \"./locale\";\n\n\n/**\n * Calculates ticks from a given scale (negative and/or positive)\n * @param {scale} scale A d3-scale object\n * @private\n */\nfunction calculateTicks(scale, useData = false) {\n\n  const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n  const negativeRange = scale.range();\n  const size = Math.abs(negativeRange[1] - negativeRange[0]);\n  let step = Math.floor(size / tickScale(size));\n\n  if (this._scale === \"time\" && this._data && this._data.length) {\n    const dataExtent = extent(this._data);\n    const distance = this._data.reduce((n, d, i, arr) => {\n      if (i) {\n        const dist = Math.abs(d - arr[i - 1]);\n        if (dist < n) n = dist;\n      }\n      return n;\n    }, Infinity);\n    const newStep = Math.round((dataExtent[1] - dataExtent[0]) / distance);\n    step = useData ? min([step * 2, newStep]) : min([step, newStep]);\n  }\n  return scale.ticks(step);\n}\n\n/**\n    @class Axis\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data.\n*/\nexport default class Axis extends BaseClass {\n\n  /**\n      @memberof Axis\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._align = \"middle\";\n    this._barConfig = {\n      \"stroke\": \"#999\",\n      \"stroke-width\": 1\n    };\n    this._domain = [0, 10];\n    this._duration = 600;\n    this._gridConfig = {\n      \"stroke\": \"#eee\",\n      \"stroke-width\": 1\n    };\n    this._gridLog = false;\n    this._height = 400;\n    this._labelOffset = false;\n    this._labelRotation = false;\n    this.orient(\"bottom\");\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._paddingInner = 0.1;\n    this._paddingOuter = 0.1;\n    this._scale = \"linear\";\n    this._scalePadding = 0.5;\n    this._shape = \"Line\";\n    this._shapeConfig = {\n      fill: \"#999\",\n      height: d => d.tick ? 8 : 0,\n      label: d => d.text,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: \"#999\",\n        fontFamily: new TextBox().fontFamily(),\n        fontResize: false,\n        fontSize: constant(14),\n        padding: 0,\n        textAnchor: () => {\n          const rtl = detectRTL();\n          return this._orient === \"left\" ? rtl ? \"start\" : \"end\"\n            : this._orient === \"right\" ? rtl ? \"end\" : \"start\"\n            : this._labelRotation ? this._orient === \"bottom\" ? \"end\" : \"start\" : \"middle\";\n        },\n        verticalAlign: () => this._orient === \"bottom\" ? \"top\" : this._orient === \"top\" ? \"bottom\" : \"middle\"\n      },\n      r: d => d.tick ? 4 : 0,\n      stroke: \"#999\",\n      strokeWidth: 1,\n      width: d => d.tick ? 8 : 0\n    };\n    this._tickSize = 8;\n    this._tickSuffix = \"normal\";\n    this._tickUnit = 0;\n    this._timeLocale = undefined;\n    this._titleClass = new TextBox();\n    this._titleConfig = {\n      fontColor: colorDefaults.dark,\n      fontSize: 12,\n      textAnchor: \"middle\"\n    };\n    this._width = 400;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the axis bar.\n      @param {D3Selection} *bar*\n      @private\n  */\n  _barPosition(bar) {\n\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset;\n\n    const x1mod = this._scale === \"band\" ? this._d3Scale.step() - this._d3Scale.bandwidth()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const x2mod = this._scale === \"band\" ? this._d3Scale.step()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const sortedDomain = (this._d3Scale ? this._d3Scale.domain() : []).concat(this._d3ScaleNegative ? this._d3ScaleNegative.domain() : []);\n\n    bar\n      .call(attrize, this._barConfig)\n      .attr(`${x}1`, this._getPosition(sortedDomain[0]) - x1mod)\n      .attr(`${x}2`, this._getPosition(sortedDomain[sortedDomain.length - 1]) + x2mod)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, position);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's domain, taking into account negative and positive log scales.\n      @private\n  */\n  _getDomain() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.domain();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.domain());\n\n    const domain = [\"band\", \"ordinal\", \"point\"].includes(this._scale) ? ticks : extent(ticks);\n    return ticks[0] > ticks[1] ? domain.reverse() : domain;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns a value's scale position, taking into account negative and positive log scales.\n      @param {Number|String} *d*\n      @private\n  */\n  _getPosition(d) {\n    return d < 0 && this._d3ScaleNegative ? this._d3ScaleNegative(d) : this._d3Scale(d);\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's range, taking into account negative and positive log scales.\n      @private\n  */\n  _getRange() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.range();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.range());\n    return ticks[0] > ticks[1] ? extent(ticks).reverse() : extent(ticks);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's labels, taking into account negative and positive log scales.\n      @private\n  */\n  _getLabels() {\n    let labels = [];\n    if (this._d3ScaleNegative) labels = labels.concat(calculateTicks.bind(this)(this._d3ScaleNegative, false));\n    if (this._d3Scale) labels = labels.concat(calculateTicks.bind(this)(this._d3Scale, false));\n    return labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's ticks, taking into account negative and positive log scales.\n      @private\n  */\n  _getTicks() {\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = ticks.concat(calculateTicks.bind(this)(this._d3ScaleNegative, true));\n    if (this._d3Scale) ticks = ticks.concat(calculateTicks.bind(this)(this._d3Scale, true));\n    return ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the grid lines.\n      @param {D3Selection} *lines*\n      @private\n  */\n  _gridPosition(lines, last = false) {\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset,\n          scale = last ? this._lastScale || this._getPosition.bind(this) : this._getPosition.bind(this),\n          size = [\"top\", \"left\"].includes(this._orient) ? offset : -offset,\n          xDiff = this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0,\n          xPos = d => scale(d.id) + xDiff;\n    lines\n      .call(attrize, this._gridConfig)\n      .attr(`${x}1`, xPos)\n      .attr(`${x}2`, xPos)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, last ? position : position + size);\n  }\n\n  /**\n      @memberof Axis\n      @desc Renders the current Axis to the page. If a *callback* is specified, it will be called once the legend is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    /**\n     * Creates an SVG element to contain the axis if none\n     * has been specified using the \"select\" method.\n     */\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .attr(\"width\", `${this._width}px`)\n        .attr(\"height\", `${this._height}px`)\n        .node());\n    }\n\n    const timeLocale = this._timeLocale || locale[this._locale] || locale[\"en-US\"];\n    timeFormatDefaultLocale(timeLocale).format();\n\n    /**\n     * Declares some commonly used variables.\n     */\n    const {width, height, x, y, horizontal, opposite} = this._position,\n          clipId = `d3plus-Axis-clip-${this._uuid}`,\n          flip = [\"top\", \"left\"].includes(this._orient),\n          p = this._padding,\n          parent = this._select,\n          rangeOuter = [p, this[`_${width}`] - p],\n          t = transition().duration(this._duration);\n\n    const tickValue = this._shape === \"Circle\" ? this._shapeConfig.r\n      : this._shape === \"Rect\" ? this._shapeConfig[width]\n      : this._shapeConfig.strokeWidth;\n    const tickGet = typeof tickValue !== \"function\" ? () => tickValue : tickValue;\n\n    /**\n     * Zeros out the margins for re-calculation.\n     */\n    const margin = this._margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n    let labels, range, ticks;\n\n    /**\n     * Constructs the tick formatter function.\n     */\n    const tickFormat = this._tickFormat ? this._tickFormat : d => {\n      if (isNaN(d) || [\"band\", \"ordinal\", \"point\"].includes(this._scale)) {\n        return d;\n      }\n      else if (this._scale === \"time\") {\n        return formatDate(d, labels);\n      }\n      else if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const locale = typeof this._locale === \"object\" ? this._locale : formatLocale[this._locale];\n        const {separator, suffixes} = locale;\n        const suff = d >= 1000 ? suffixes[this._tickUnit + 8] : \"\";\n        const tick = d / Math.pow(10, 3 * this._tickUnit);\n        const number = formatAbbreviate(tick, locale, `,.${tick.toString().length}r`);\n        return `${number}${separator}${suff}`;\n      }\n      else {\n        return formatAbbreviate(d, this._locale);\n      }\n    };\n\n    /**\n     * (Re)calculates the internal d3 scale\n     * @param {} newRange\n     */\n    function setScale(newRange = this._range) {\n\n      /**\n       * Calculates the internal \"range\" array to use, including\n       * fallbacks if not specified with the \"range\" method.\n       */\n      range = newRange ? newRange.slice() : [undefined, undefined];\n      let [minRange, maxRange] = rangeOuter;\n      if (this._range) {\n        if (this._range[0] !== undefined) minRange = this._range[0];\n        if (this._range[this._range.length - 1] !== undefined) maxRange = this._range[this._range.length - 1];\n      }\n      if (range[0] === undefined || range[0] < minRange) range[0] = minRange;\n      if (range[1] === undefined || range[1] > maxRange) range[1] = maxRange;\n      const sizeInner = maxRange - minRange;\n      if (this._scale === \"ordinal\" && this._domain.length > range.length) {\n        if (newRange === this._range) {\n          const buckets = this._domain.length + 1;\n          range = d3Range(buckets)\n            .map(d => range[0] + sizeInner * (d / (buckets - 1)))\n            .slice(1, buckets);\n          range = range.map(d => d - range[0] / 2);\n        }\n        else {\n          const buckets = this._domain.length;\n          const size = range[1] - range[0];\n          range = d3Range(buckets)\n            .map(d => range[0] + size * (d / (buckets - 1)));\n        }\n      }\n      else if (newRange === this._range) {\n        const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n        const domain = this._scale === \"time\" ? this._domain.map(date) : this._domain;\n        const scaleTicks = d3Ticks(domain[0], domain[1], Math.floor(sizeInner / tickScale(sizeInner)));\n        ticks = (this._ticks\n          ? this._scale === \"time\" ? this._ticks.map(date) : this._ticks\n          : scaleTicks).slice();\n\n        labels = (this._labels\n          ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n          : scaleTicks).slice();\n        const buckets = labels.length;\n\n        if (buckets) {\n          const pad = Math.ceil(sizeInner / buckets / 2);\n          range = [range[0] + pad, range[1] - pad];\n        }\n\n      }\n\n      /**\n       * Sets up the initial d3 scale, using this._domain and the\n       * previously defined range variable.\n       */\n      const scale = `scale${this._scale.charAt(0).toUpperCase()}${this._scale.slice(1)}`;\n      this._d3Scale = scales[scale]()\n        .domain(this._scale === \"time\" ? this._domain.map(date) : this._domain)\n        .range(range);\n\n      if (this._d3Scale.padding) this._d3Scale.padding(this._scalePadding);\n      if (this._d3Scale.paddingInner) this._d3Scale.paddingInner(this._paddingInner);\n      if (this._d3Scale.paddingOuter) this._d3Scale.paddingOuter(this._paddingOuter);\n\n      /**\n       * Constructs a separate \"negative only\" scale for logarithmic\n       * domains, as they cannot pass zero.\n       */\n      this._d3ScaleNegative = null;\n      if (this._scale === \"log\") {\n        const domain = this._d3Scale.domain();\n        if (domain[0] === 0) {\n          domain[0] = Math.abs(domain[domain.length - 1]) <= 1 ? 1e-6 : 1;\n          if (domain[domain.length - 1] < 0) domain[0] *= -1;\n        }\n        else if (domain[domain.length - 1] === 0) {\n          domain[domain.length - 1] = Math.abs(domain[0]) <= 1 ? 1e-6 : 1;\n          if (domain[0] < 0) domain[domain.length - 1] *= -1;\n        }\n        const range = this._d3Scale.range();\n        if (domain[0] < 0 && domain[domain.length - 1] < 0) {\n          this._d3ScaleNegative = this._d3Scale.copy()\n            .domain(domain)\n            .range(range);\n          this._d3Scale = null;\n        }\n        else if (domain[0] > 0 && domain[domain.length - 1] > 0) {\n          this._d3Scale\n            .domain(domain)\n            .range(range);\n        }\n        else {\n          const percentScale = scales.scaleLog().domain([1, domain[domain[1] > 0 ? 1 : 0]]).range([0, 1]);\n          const leftPercentage = percentScale(Math.abs(domain[domain[1] < 0 ? 1 : 0]));\n          let zero = leftPercentage / (leftPercentage + 1) * (range[1] - range[0]);\n          if (domain[0] > 0) zero = range[1] - range[0] - zero;\n          this._d3ScaleNegative = this._d3Scale.copy();\n          (domain[0] < 0 ? this._d3Scale : this._d3ScaleNegative)\n            .domain([Math.sign(domain[1]), domain[1]])\n            .range([range[0] + zero, range[1]]);\n          (domain[0] < 0 ? this._d3ScaleNegative : this._d3Scale)\n            .domain([domain[0], Math.sign(domain[0])])\n            .range([range[0], range[0] + zero]);\n        }\n      }\n\n      /**\n       * Determines the of values array to use\n       * for the \"ticks\" and the \"labels\"\n       */\n      ticks = (this._ticks\n        ? this._scale === \"time\" ? this._ticks.map(date) : this._ticks\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getTicks() : this._domain).slice();\n\n      labels = (this._labels\n        ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getLabels() : ticks).slice();\n\n      if (this._scale === \"log\") {\n        const tens = labels.filter((t, i) =>\n          !i || i === labels.length - 1 ||\n          Math.abs(t).toString().charAt(0) === \"1\" &&\n          (this._d3Scale ? t !== -1 : t !== 1)\n        );\n        if (tens.length > 2) {\n          labels = tens;\n        }\n        else if (labels.length >= 10) {\n          labels = labels.filter(t => t % 5 === 0 || tickFormat(t).substr(-1) === \"1\");\n        }\n        if (labels.includes(-1) && labels.includes (1) && labels.some(d => d > 10 || d < 10)) {\n          labels.splice(labels.indexOf(-1), 1);\n        }\n      }\n      if (this._scale === \"time\") {\n        ticks = ticks.map(Number);\n        labels = labels.map(Number);\n      }\n      ticks = ticks.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n      labels = labels.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n\n      /**\n       * Get the smallest suffix.\n       */\n      if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const suffixes = labels.filter(d => d >= 1000);\n        if (suffixes.length > 0) {\n          const min = Math.min(...suffixes);\n          let i = 1;\n          while (i && i < 7) {\n            const n = Math.pow(10, 3 * i);\n            if (min / n >= 1) {\n              this._tickUnit = i;\n              i += 1;\n            }\n            else {\n              break;\n            }\n          }\n        }\n      }\n\n      /**\n       * Removes ticks when they overlap other ticks.\n       */\n      const pixels = [];\n      this._availableTicks = ticks;\n      ticks.forEach((d, i) => {\n        let s = tickGet({id: d, tick: true}, i);\n        if (this._shape === \"Circle\") s *= 2;\n        const t = this._getPosition(d);\n        if (!pixels.length || Math.abs(closest(t, pixels) - t) > s * 2) pixels.push(t);\n        else pixels.push(false);\n      });\n      ticks = ticks.filter((d, i) => pixels[i] !== false);\n      this._visibleTicks = ticks;\n\n    }\n    setScale.bind(this)();\n\n    /**\n     * Calculates the space available for a given label.\n     * @param {Object} datum\n     */\n    function calculateSpace(datum, diff = 1) {\n      const {i, position} = datum;\n      if (this._scale === \"band\") {\n        return this._d3Scale.bandwidth();\n      }\n      else {\n        const prevPosition = i - diff < 0 ? textData.length === 1 || !this._range ? rangeOuter[0] : (position - textData[i + diff].position) / 2 - position : position - (position - textData[i - diff].position) / 2;\n        const prevSpace = Math.abs(position - prevPosition);\n        const nextPosition = i + diff > textData.length - 1 ? textData.length === 1 || !this._range ? rangeOuter[1] : (position - textData[i - diff].position) / 2 - position : position - (position - textData[i + diff].position) / 2;\n        const nextSpace = Math.abs(position - nextPosition);\n        return min([prevSpace, nextSpace]) * 2;\n      }\n    }\n\n    /**\n     * Pre-calculates the size of the title, if defined, in order\n     * to adjust the internal margins.\n     */\n    if (this._title) {\n      const {fontFamily, fontSize, lineHeight} = this._titleConfig;\n      const titleWrap = textWrap()\n        .fontFamily(typeof fontFamily === \"function\" ? fontFamily() : fontFamily)\n        .fontSize(typeof fontSize === \"function\" ? fontSize() : fontSize)\n        .lineHeight(typeof lineHeight === \"function\" ? lineHeight() : lineHeight)\n        .width(range[range.length - 1] - range[0] - p * 2)\n        .height(this[`_${height}`] - this._tickSize - p * 2);\n      const lines = titleWrap(this._title).lines.length;\n      margin[this._orient] = lines * titleWrap.lineHeight() + p;\n    }\n\n    let hBuff = this._shape === \"Circle\"\n          ? typeof this._shapeConfig.r === \"function\" ? this._shapeConfig.r({tick: true}) : this._shapeConfig.r\n          : this._shape === \"Rect\"\n            ? typeof this._shapeConfig[height] === \"function\" ? this._shapeConfig[height]({tick: true}) : this._shapeConfig[height]\n            : this._tickSize,\n        wBuff = tickGet({tick: true});\n\n    if (typeof hBuff === \"function\") hBuff = max(ticks.map(hBuff));\n    if (this._shape === \"Rect\") hBuff /= 2;\n    if (typeof wBuff === \"function\") wBuff = max(ticks.map(wBuff));\n    if (this._shape !== \"Circle\") wBuff /= 2;\n\n    const {fontFamily, fontSize} = this._shapeConfig.labelConfig;\n\n    /**\n     * Calculates the space each label would take up, given\n     * the provided this._space size.\n     */\n    let textData = labels\n      .map((d, i) => {\n\n        const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n              fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n              position = this._getPosition(d);\n\n        const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n        return {d, i, fF, fS, lineHeight, position};\n\n      });\n\n    /**\n     * Calculates the text wrapping and size of a given textData object.\n     * @param {Object} datum\n     */\n    function calculateLabelSize(datum) {\n      const {d, i, fF, fS, rotate, space} = datum;\n\n      const h = rotate ? \"width\" : \"height\",\n            w = rotate ? \"height\" : \"width\";\n\n      const wSize = min([this._maxSize, this._width]);\n      const hSize = min([this._maxSize, this._height]);\n\n      const wrap = textWrap()\n        .fontFamily(fF)\n        .fontSize(fS)\n        .lineHeight(this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : undefined)\n        [w](horizontal ? space : wSize - hBuff - p - this._margin.left - this._margin.right)\n        [h](horizontal ? hSize - hBuff - p - this._margin.top - this._margin.bottom : space);\n\n      const res = wrap(tickFormat(d));\n      res.lines = res.lines.filter(d => d !== \"\");\n\n      res.width = res.lines.length ? Math.ceil(max(res.widths)) + fS / 4 : 0;\n      if (res.width % 2) res.width++;\n\n      res.height = res.lines.length ? Math.ceil(res.lines.length * wrap.lineHeight()) + fS / 4 : 0;\n      if (res.height % 2) res.height++;\n\n      return res;\n\n    }\n\n    /** Calculates label offsets */\n    function calculateOffset(arr = []) {\n      let offset = 0;\n\n      arr.forEach(datum => {\n        const prev = arr[datum.i - 1];\n\n        const h = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"width\" : \"height\",\n              w = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"height\" : \"width\";\n\n        if (!prev) {\n          offset = 1;\n        }\n        else if (prev.position + prev[w] / 2 > datum.position - datum[w] / 2) {\n          if (offset) {\n            datum.offset = prev[h];\n            offset = 0;\n          }\n          else offset = 1;\n        }\n      });\n    }\n\n    textData = textData\n      .map(datum => {\n        datum.rotate = this._labelRotation;\n        datum.space = calculateSpace.bind(this)(datum);\n        const res = calculateLabelSize.bind(this)(datum);\n        return Object.assign(res, datum);\n      });\n\n    const offsetEnabled = this._labelOffset && textData.some(d => d.truncated);\n\n    if (this._labelRotation) {\n      textData = textData\n        .map(datum => {\n          datum.rotate = true;\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n    }\n    else if (offsetEnabled) {\n\n      textData = textData\n        .map(datum => {\n\n          datum.space = calculateSpace.bind(this)(datum, 2);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n\n      calculateOffset.bind(this)(textData);\n\n    }\n\n    /**\n     * \"spillover\" will contain the pixel spillover of the first and last label,\n     * and then adjust the scale range accordingly.\n     */\n    const spillover = [0, 0];\n    for (let index = 0; index < 2; index++) {\n      const datum = textData[index ? textData.length - 1 : 0];\n      if (!datum) break;\n      const {height, position, rotate, width} = datum;\n      const compPosition = index ? rangeOuter[1] : rangeOuter[0];\n      const halfSpace = (rotate || !horizontal ? height : width) / 2;\n      const spill = index ? position + halfSpace - compPosition : position - halfSpace - compPosition;\n      spillover[index] = spill;\n    }\n\n    const first = range[0];\n    const last = range[range.length - 1];\n    const newRange = [first - spillover[0], last - spillover[1]];\n    if (this._range) {\n      if (this._range[0] !== undefined) newRange[0] = this._range[0];\n      if (this._range[this._range.length - 1] !== undefined) newRange[1] = this._range[this._range.length - 1];\n    }\n\n    if (newRange[0] !== first || newRange[1] !== last) {\n      setScale.bind(this)(newRange);\n\n      textData = labels\n        .map((d, i) => {\n\n          const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n                fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n                position = this._getPosition(d);\n\n          const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n          return {d, i, fF, fS, lineHeight, position};\n\n        });\n\n      textData = textData\n        .map(datum => {\n          datum.rotate = this._labelRotation;\n          datum.space = calculateSpace.bind(this)(datum, offsetEnabled ? 2 : 1);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(res, datum);\n        });\n      calculateOffset.bind(this)(textData);\n    }\n\n    const labelHeight = max(textData, t => t.height) || 0;\n    this._labelRotation = horizontal && this._labelRotation === undefined\n      ? textData.some(datum => {\n        const {i, height, position, truncated} = datum;\n        const prev = textData[i - 1];\n        return truncated || i && prev.position + prev.height / 2 > position - height / 2;\n      }) : this._labelRotation;\n\n    const globalOffset = this._labelOffset ? max(textData, d => d.offset || 0) : 0;\n    textData.forEach(datum => datum.offset = datum.offset ? globalOffset : 0);\n\n    const tBuff = this._shape === \"Line\" ? 0 : hBuff;\n    const bounds = this._outerBounds = {\n      [height]: (max(textData, t => Math.ceil(t[t.rotate || !horizontal ? \"width\" : \"height\"] + t.offset)) || 0) + (textData.length ? p : 0),\n      [width]: rangeOuter[rangeOuter.length - 1] - rangeOuter[0],\n      [x]: rangeOuter[0]\n    };\n\n    bounds[height] = max([this._minSize, bounds[height]]);\n\n    margin[this._orient] += hBuff;\n    margin[opposite] = this._gridSize !== undefined ? max([this._gridSize, tBuff]) : this[`_${height}`] - margin[this._orient] - bounds[height] - p;\n    bounds[height] += margin[opposite] + margin[this._orient];\n    bounds[y] = this._align === \"start\" ? this._padding\n      : this._align === \"end\" ? this[`_${height}`] - bounds[height] - this._padding\n      : this[`_${height}`] / 2 - bounds[height] / 2;\n\n    const group = elem(`g#d3plus-Axis-${this._uuid}`, {parent});\n    this._group = group;\n\n    const grid = elem(\"g.grid\", {parent: group}).selectAll(\"line\")\n      .data((this._gridSize !== 0 ? this._grid || this._scale === \"log\" && !this._gridLog ? labels : ticks : []).map(d => ({id: d})), d => d.id);\n\n    grid.exit().transition(t)\n      .attr(\"opacity\", 0)\n      .call(this._gridPosition.bind(this))\n      .remove();\n\n    grid.enter().append(\"line\")\n        .attr(\"opacity\", 0)\n        .attr(\"clip-path\", `url(#${clipId})`)\n        .call(this._gridPosition.bind(this), true)\n      .merge(grid).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._gridPosition.bind(this));\n\n    const labelOnly = labels.filter((d, i) => textData[i].lines.length && !ticks.includes(d));\n\n    const rotated = textData.some(d => d.rotate);\n\n    let tickData = ticks.concat(labelOnly)\n      .map(d => {\n\n        const data = textData.find(td => td.d === d);\n\n        const xPos = this._getPosition(d);\n        const space = data ? data.space : 0;\n        const lines = data ? data.lines.length : 1;\n        const lineHeight = data ? data.lineHeight : 1;\n\n        const labelOffset = data && this._labelOffset ? data.offset : 0;\n\n        const labelWidth = horizontal ? space : bounds.width - margin[this._position.opposite] - hBuff - margin[this._orient] + p;\n\n        const offset = margin[opposite],\n              size = (hBuff + labelOffset) * (flip ? -1 : 1),\n              yPos = flip ? bounds[y] + bounds[height] - offset : bounds[y] + offset;\n\n        const tickConfig = {\n          id: d,\n          labelBounds: rotated && data\n            ? {\n              x: -data.width / 2 + data.fS / 4,\n              y: this._orient === \"bottom\" ? size + p + (data.width - lineHeight * lines) / 2 : size - p * 2 - (data.width + lineHeight * lines) / 2,\n              width: data.width,\n              height: data.height\n            } : {\n              x: horizontal ? -space / 2 : this._orient === \"left\" ? -labelWidth - p + size : size + p,\n              y: horizontal ? this._orient === \"bottom\" ? size + p : size - p - labelHeight : -space / 2,\n              width: horizontal ? space : labelWidth,\n              height: horizontal ? labelHeight : space\n            },\n          rotate: data ? data.rotate : false,\n          size: labels.includes(d) ? size : this._data && this._data.find(t => +t === d) ? Math.ceil(size / 2) : 0,\n          text: labels.includes(d) ? tickFormat(d) : false,\n          tick: ticks.includes(d),\n          [x]: xPos + (this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0),\n          [y]: yPos\n        };\n\n        return tickConfig;\n\n      });\n\n    if (this._shape === \"Line\") {\n      tickData = tickData.concat(tickData.map(d => {\n        const dupe = Object.assign({}, d);\n        dupe[y] += d.size;\n        return dupe;\n      }));\n    }\n\n    new shapes[this._shape]()\n      .data(tickData)\n      .duration(this._duration)\n      .labelConfig({\n        ellipsis: d => d && d.length ? `${d}...` : \"\",\n        rotate: d => d.rotate ? -90 : 0\n      })\n      .select(elem(\"g.ticks\", {parent: group}).node())\n      .config(this._shapeConfig)\n      .render();\n\n    const bar = group.selectAll(\"line.bar\").data([null]);\n\n    bar.enter().append(\"line\")\n        .attr(\"class\", \"bar\")\n        .attr(\"opacity\", 0)\n        .call(this._barPosition.bind(this))\n      .merge(bar).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._barPosition.bind(this));\n\n    this._titleClass\n      .data(this._title ? [{text: this._title}] : [])\n      .duration(this._duration)\n      .height(margin[this._orient])\n      .rotate(this._orient === \"left\" ? -90 : this._orient === \"right\" ? 90 : 0)\n      .select(elem(\"g.d3plus-Axis-title\", {parent: group}).node())\n      .text(d => d.text)\n      .verticalAlign(\"middle\")\n      .width(range[range.length - 1] - range[0])\n      .x(horizontal ? range[0] : this._orient === \"left\" ? bounds.x + margin.left / 2 - (range[range.length - 1] - range[0]) / 2 : bounds.x + bounds.width - margin.right / 2 - (range[range.length - 1] - range[0]) / 2)\n      .y(horizontal ? this._orient === \"bottom\" ? bounds.y + bounds.height - margin.bottom : bounds.y : range[0] + (range[range.length - 1] - range[0]) / 2 - margin[this._orient] / 2)\n      .config(this._titleConfig)\n      .render();\n\n    this._lastScale = this._getPosition.bind(this);\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the axis line style and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  barConfig(_) {\n    return arguments.length ? (this._barConfig = Object.assign(this._barConfig, _), this) : this._barConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc An array of data points, which helps determine which ticks should be shown and which time resolution should be displayed.\n      @param {Array} [*value*]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale domain of the axis and returns the current class instance.\n      @param {Array} [*value* = [0, 10]]\n      @chainable\n  */\n  domain(_) {\n    return arguments.length ? (this._domain = _, this) : this._domain;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the transition duration of the axis and returns the current class instance.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  grid(_) {\n    return arguments.length ? (this._grid = _, this) : this._grid;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid config of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  gridConfig(_) {\n    return arguments.length ? (this._gridConfig = Object.assign(this._gridConfig, _), this) : this._gridConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid behavior of the axis when scale is logarithmic and returns the current class instance.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  gridLog(_) {\n    return arguments.length ? (this._gridLog = _, this) : this._gridLog;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid size of the axis and returns the current class instance.\n      @param {Number} [*value* = undefined]\n      @chainable\n  */\n  gridSize(_) {\n    return arguments.length ? (this._gridSize = _, this) : this._gridSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall height of the axis and returns the current class instance.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the visible tick labels of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  labels(_) {\n    return arguments.length ? (this._labels = _, this) : this._labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether offsets will be used to position some labels further away from the axis in order to allow space for the text.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelOffset(_) {\n    return arguments.length ? (this._labelOffset = _, this) : this._labelOffset;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether whether horizontal axis labels are rotated -90 degrees.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelRotation(_) {\n    return arguments.length ? (this._labelRotation = _, this) : this._labelRotation;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the maximum size allowed for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  maxSize(_) {\n    return arguments.length ? (this._maxSize = _, this) : this._maxSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the minimum size alloted for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  minSize(_) {\n    return arguments.length ? (this._minSize = _, this) : this._minSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *orient* is specified, sets the orientation of the shape and returns the current class instance. If *orient* is not specified, returns the current orientation.\n      @param {String} [*orient* = \"bottom\"] Supports `\"top\"`, `\"right\"`, `\"bottom\"`, and `\"left\"` orientations.\n      @chainable\n  */\n  orient(_) {\n    if (arguments.length) {\n\n      const horizontal = [\"top\", \"bottom\"].includes(_),\n            opps = {top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\"};\n\n      this._position = {\n        horizontal,\n        width: horizontal ? \"width\" : \"height\",\n        height: horizontal ? \"height\" : \"width\",\n        x: horizontal ? \"x\" : \"y\",\n        y: horizontal ? \"y\" : \"x\",\n        opposite: opps[_]\n      };\n\n      return this._orient = _, this;\n\n    }\n    return this._orient;\n  }\n\n  /**\n      @memberof Axis\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the axis content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the padding between each tick label to the specified number and returns the current class instance.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the inner padding of band scale to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingInner(_) {\n    return arguments.length ? (this._paddingInner = _, this) : this._paddingInner;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the outer padding of band scales to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingOuter(_) {\n    return arguments.length ? (this._paddingOuter = _, this) : this._paddingOuter;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale range (in pixels) of the axis and returns the current class instance. The given array must have 2 values, but one may be `undefined` to allow the default behavior for that value.\n      @param {Array} [*value*]\n      @chainable\n  */\n  range(_) {\n    return arguments.length ? (this._range = _, this) : this._range;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale of the axis and returns the current class instance.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = _, this) : this._scale;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the \"padding\" property of the scale, often used in point scales.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  scalePadding(_) {\n    return arguments.length ? (this._scalePadding = _, this) : this._scalePadding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick shape constructor and returns the current class instance.\n      @param {String} [*value* = \"Line\"]\n      @chainable\n  */\n  shape(_) {\n    return arguments.length ? (this._shape = _, this) : this._shape;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick style of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  shapeConfig(_) {\n    return arguments.length ? (this._shapeConfig = assign(this._shapeConfig, _), this) : this._shapeConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick formatter and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  tickFormat(_) {\n    return arguments.length ? (this._tickFormat = _, this) : this._tickFormat;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  ticks(_) {\n    return arguments.length ? (this._ticks = _, this) : this._ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick size of the axis and returns the current class instance.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  tickSize(_) {\n    return arguments.length ? (this._tickSize = _, this) : this._tickSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the behavior of the abbreviations when you are using linear scale. This method accepts two options: \"normal\" (uses formatAbbreviate to determinate the abbreviation) and \"smallest\" (uses suffix from the smallest tick as reference in every tick).\n      @param {String} [*value* = \"normal\"]\n      @chainable\n  */\n  tickSuffix(_) {\n    return arguments.length ? (this._tickSuffix = _, this) : this._tickSuffix;\n  }\n\n  /**\n      @memberof Axis\n      @desc Defines a custom locale object to be used in time scale. This object must include the following properties: dateTime, date, time, periods, days, shortDays, months, shortMonths. For more information, you can revise [d3p.d3-time-format](https://github.com/d3/d3-time-format/blob/master/README.md#timeFormatLocale).\n      @param {Object} [*value* = undefined]\n      @chainable\n  */\n  timeLocale(_) {\n    return arguments.length ? (this._timeLocale = _, this) : this._timeLocale;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title of the axis and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n  */\n  title(_) {\n    return arguments.length ? (this._title = _, this) : this._title;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title configuration of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  titleConfig(_) {\n    return arguments.length ? (this._titleConfig = Object.assign(this._titleConfig, _), this) : this._titleConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall width of the axis and returns the current class instance.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisBottom\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn below the horizontal domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisBottom extends Axis {\n\n  /**\n      @memberof AxisBottom\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"bottom\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisLeft\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the left of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisLeft extends Axis {\n\n  /**\n      @memberof AxisLeft\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"left\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisRight\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the right of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisRight extends Axis {\n\n  /**\n      @memberof AxisRight\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"right\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisTop\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn above the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisTop extends Axis {\n\n  /**\n      @memberof AxisTop\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"top\");\n  }\n\n}\n"],"names":["d","constructor","Date","Number","length","s","dayFormat","RegExp","exec","strFormat","year","indexOf","replace","substr","date","setFullYear","includes","dateTime","time","periods","days","shortDays","months","shortMonths","calculateTicks","scale","useData","tickScale","scales.scaleSqrt","domain","range","negativeRange","size","Math","abs","step","floor","_scale","_data","dataExtent","extent","distance","reduce","n","i","arr","dist","Infinity","newStep","round","min","ticks","Axis","_align","_barConfig","_domain","_duration","_gridConfig","_gridLog","_height","_labelOffset","_labelRotation","orient","_outerBounds","width","height","x","y","_padding","_paddingInner","_paddingOuter","_scalePadding","_shape","_shapeConfig","fill","tick","label","text","labelBounds","labelConfig","fontColor","fontFamily","TextBox","fontResize","fontSize","constant","padding","textAnchor","rtl","detectRTL","_orient","verticalAlign","r","stroke","strokeWidth","_tickSize","_tickSuffix","_tickUnit","_timeLocale","undefined","_titleClass","_titleConfig","colorDefaults","dark","_width","bar","_position","opposite","offset","_margin","position","x1mod","_d3Scale","bandwidth","x2mod","sortedDomain","concat","_d3ScaleNegative","call","attrize","attr","_getPosition","reverse","labels","bind","lines","last","_lastScale","xDiff","xPos","id","callback","_select","select","append","node","timeLocale","locale","_locale","timeFormatDefaultLocale","format","horizontal","clipId","_uuid","flip","p","parent","rangeOuter","t","transition","duration","tickValue","tickGet","margin","top","right","bottom","left","tickFormat","_tickFormat","isNaN","formatDate","formatLocale","separator","suffixes","suff","pow","number","formatAbbreviate","toString","setScale","newRange","_range","slice","minRange","maxRange","sizeInner","buckets","d3Range","map","scaleTicks","d3Ticks","_ticks","_labels","pad","ceil","charAt","toUpperCase","scales","paddingInner","paddingOuter","copy","percentScale","scales.scaleLog","leftPercentage","zero","sign","_getTicks","_getLabels","tens","filter","some","splice","sort","a","b","pixels","_availableTicks","forEach","closest","push","_visibleTicks","calculateSpace","datum","diff","prevPosition","textData","prevSpace","nextPosition","nextSpace","_title","lineHeight","titleWrap","textWrap","hBuff","wBuff","max","fF","fS","calculateLabelSize","rotate","space","h","w","wSize","_maxSize","hSize","wrap","res","widths","calculateOffset","prev","Object","assign","offsetEnabled","truncated","spillover","index","compPosition","halfSpace","spill","first","labelHeight","globalOffset","tBuff","bounds","_minSize","_gridSize","group","elem","_group","grid","selectAll","data","_grid","exit","_gridPosition","remove","enter","merge","labelOnly","rotated","tickData","find","td","labelOffset","labelWidth","yPos","tickConfig","dupe","shapes","ellipsis","config","render","_barPosition","setTimeout","_","arguments","opps","BaseClass","AxisBottom","AxisLeft","AxisRight","AxisTop"],"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"}