{"version":3,"file":"d3plus-export.js","sources":["../src/svgPresets.js","../src/htmlPresets.js","../src/dom2canvas.js","../src/saveElement.js"],"sourcesContent":["/**\n    @function svgPresets\n    @desc Adds SVG default attributes to a d3 selection in order to render it properly.\n    @param {Selection} selection\n*/\nexport default function(selection) {\n\n  if (!selection || !selection.size()) return;\n\n  // sets \"stroke-width\" attribute to `0` if not defined\n  const strokeWidth = selection.attr(\"stroke-width\");\n  selection.attr(\"stroke-width\", !strokeWidth ? 0 : strokeWidth);\n\n  // if there is no stroke, set the stroke color to \"transparent\" (fixes weird text rendering)\n  if (!strokeWidth) selection.attr(\"stroke\", \"transparent\");\n\n  // sets \"fill\" attribute to black if not defined\n  const fill = selection.attr(\"fill\");\n  if (!fill && selection.node().tagName === \"text\") selection.attr(\"fill\", \"#000\");\n\n  // sets \"fill-opacity\" attribute to `0` if fill is \"transparent\" or \"none\"\n  const transparent = [\"none\", \"transparent\"].includes(selection.attr(\"fill\"));\n  const fillOpacity = selection.attr(\"fill-opacity\");\n  selection.attr(\"fill-opacity\", transparent ? 0 : fillOpacity);\n\n  // \"aria-label\" properties interfere with text labels ¯\\_(ツ)_/¯\n  selection.attr(\"aria-label\", null);\n\n  // sets NaN positions to zero\n  const x = selection.attr(\"x\");\n  if (x === \"NaN\") selection.attr(\"x\", \"0px\");\n  const y = selection.attr(\"y\");\n  if (y === \"NaN\") selection.attr(\"y\", \"0px\");\n\n  // fixed relative URLs for SVG downloads\n  const url = selection.attr(\"xlink:href\");\n  if (url && typeof window !== \"undefined\" && url.charAt(0) === \"/\") {\n    selection.attr(\"xlink:href\", `${window.location.origin}${url}`);\n  }\n\n}\n","import {select} from \"d3-selection\";\n\n/**\n    @function htmlPresets\n    @desc Adds HTML default styles to a d3 selection in order to render it properly.\n    @param {Selection} selection\n*/\nexport default function(selection) {\n\n  selection.selectAll(\"*\")\n    .each(function() {\n      const tag = this.tagName.toLowerCase();\n      if (![\"option\"].includes(tag)) {\n\n        const elem = select(this);\n\n        /* forces minor unnoticible letter-spacing on any element where it is not defined to fix IE */\n        const letterSpacing = elem.style(\"letter-spacing\");\n        elem.style(\"letter-spacing\", letterSpacing === \"normal\" ? \"0.1px\" : letterSpacing);\n\n      }\n    });\n\n}\n","import html2canvas from \"html2canvas\";\nimport canvg from \"canvg-browser\";\nimport {select, selectAll} from \"d3-selection\";\n\nimport svgPresets from \"./svgPresets\";\nimport htmlPresets from \"./htmlPresets\";\n\nconst defaultOptions = {\n  background: false,\n  callback: () => {},\n  exclude: [],\n  padding: 0,\n  scale: 1\n};\n\nconst canvgOptions = {\n  ignoreMouse: true,\n  ignoreAnimation: true,\n  ignoreDimensions: true,\n  ignoreClear: true\n};\n\n/**\n    @function parseTransform\n    @desc Extracts scale, x, and y position from an elements \"transform\" attribute, respecting cross-browser render differences.\n    @param {HTMLElement} elem The element to be analyzed.\n    @private\n*/\nfunction parseTransform(elem) {\n\n  const property = select(elem).attr(\"transform\");\n  let scale = 1, x = 0, y = 0;\n  if (property) {\n    scale = property.match(/scale\\(([^a-z]+)\\)/i);\n    if (scale) scale = parseFloat(scale[1]);\n    else scale = 1;\n    const translate = property.match(/translate\\(([^a-z]+)\\)/i);\n    if (translate) {\n      [x, y] = translate[1]\n        .replace(\", \", \",\")\n        .replace(/([^a-z]),*\\s([^a-z])/gi, \"$1,$2\")\n        .split(\",\")\n        .map(d => parseFloat(d) * scale);\n    }\n  }\n  return [scale, x, y];\n\n}\n\n/**\n    @function dom2canvas\n    @desc Renders HTML/SVG elements to a shared canvas.\n    @param {HTMLElement|Object|Array} elem The element or array of elements to be rendered to a single canvas. Additionally, a complex object can be passed as an element which can contain specific other properties.\n    @param {Number} [elem.x] The x offset of the element within the rendered canvas.\n    @param {Number} [elem.y] The y offset of the element within the rendered canvas.\n    @param {Object} [options] Additional options to specify.\n    @param {String} [options.background] Background color of the rendered canvas.\n    @param {Function} [options.callback] Callback function to be passed the canvas element after rendering.\n    @param {HTMLElement} [options.canvas] A canvas DOM element to draw onto. If no element is supplied, a canvas element will be created in memory and passed to the callback function when drawing is complete.\n    @param {Array} [options.excludes] An array of HTMLElement objects to be excluded from the render.\n    @param {Number} [options.height] Pixel height for the final output. If a height value has not been passed, it will be inferred from the sizing of the first DOM element passed.\n    @param {Number} [options.padding = 0] Outer padding for the final file.\n    @param {Number} [options.scale = 1] Scale for the final file.\n    @param {Number} [options.width] Pixel width for the final output. If a width value has not been passed, it will be inferred from the sizing of the first DOM element passed.\n*/\nexport default function(elem, options) {\n\n  if (!elem) return;\n  if (!(elem instanceof Array)) elem = [elem];\n\n  options = Object.assign({}, defaultOptions, options);\n  const IE = new RegExp(/(MSIE|Trident\\/|Edge\\/)/i).test(navigator.userAgent);\n  const ratio = window ? window.devicePixelRatio || 1 : 1;\n\n  let reference = elem[0];\n  if (reference.constructor === Object) reference = reference.element;\n\n  const height = options.height ||\n          parseFloat(select(reference).style(\"height\")) +\n          parseFloat(select(reference).style(\"padding-top\")) +\n          parseFloat(select(reference).style(\"padding-bottom\")),\n        width = options.width ||\n          parseFloat(select(reference).style(\"width\")) +\n          parseFloat(select(reference).style(\"padding-left\")) +\n          parseFloat(select(reference).style(\"padding-right\"));\n\n  let layerX, layerY, offsetX = 0, offsetY = 0;\n  if (reference.getBoundingClientRect) {\n    const bounds = reference.getBoundingClientRect();\n    offsetX = bounds.left;\n    offsetY = bounds.top;\n  }\n  else {\n    offsetX = reference.offsetLeft;\n    offsetY = reference.offsetTop;\n  }\n\n  const canvas = options.canvas || document.createElement(\"canvas\");\n  canvas.width = (width + options.padding * 2) * options.scale * ratio;\n  canvas.height = (height + options.padding * 2) * options.scale * ratio;\n  canvas.style.width = (width + options.padding * 2) * options.scale;\n  canvas.style.height = (height + options.padding * 2) * options.scale;\n\n  const context = canvas.getContext(\"2d\");\n  context.scale(options.scale * ratio, options.scale * ratio);\n  context.clearRect(0, 0, canvas.width / ratio, canvas.height / ratio);\n\n  if (options.background) {\n    context.beginPath();\n    context.rect(0, 0, canvas.width / ratio, canvas.height / ratio);\n    context.fillStyle = options.background;\n    context.fill();\n  }\n\n  const layers = [];\n\n  /**\n   * Determines how a given DOM element should be rendered.\n   * @param {Object} trans ancestral transform properties\n   * @private\n   */\n  function checkRender(trans) {\n\n    const tag = (this.tagName || \"\").toLowerCase();\n    if (options.exclude.includes(this) || tag === \"foreignobject\") return;\n\n    const transform = Object.assign({}, trans);\n\n    // strips translate and scale from transform property\n    if (this.tagName) {\n\n      const opacity = select(this).attr(\"opacity\") || select(this).style(\"opacity\");\n      const display = select(this).style(\"display\");\n      const visibility = select(this).style(\"visibility\");\n      if (display === \"none\" || visibility === \"hidden\" || opacity && parseFloat(opacity) === 0) return;\n\n      const tag = this.tagName.toLowerCase();\n\n      if (tag.length && [\"defs\", \"title\", \"desc\"].includes(tag)) return;\n\n      if (tag === \"svg\") {\n\n        // do not perform this transform for SVGs nested within other SVGs\n        if (!transform.svg) {\n          const {left, top} = this.getBoundingClientRect();\n          transform.x += left - offsetX;\n          transform.y += top - offsetY;\n          transform.svg = true;\n        }\n\n        let x = select(this).attr(\"x\");\n        x = x ? parseFloat(x) * transform.scale : 0;\n        transform.x += x;\n        let y = select(this).attr(\"y\");\n        y = y ? parseFloat(y) * transform.scale : 0;\n        transform.y += y;\n        transform.clip = {\n          height: parseFloat(select(this).attr(\"height\") || select(this).style(\"height\")),\n          width: parseFloat(select(this).attr(\"width\") || select(this).style(\"width\")),\n          x, y\n        };\n      }\n      else {\n        const x = select(this).attr(\"x\");\n        if (x) transform.x += parseFloat(x) * transform.scale;\n        const y = select(this).attr(\"y\");\n        if (y) transform.y += parseFloat(y) * transform.scale;\n      }\n\n    }\n\n    if (!tag.length) {\n      const test = (this.wholeText || \"\").replace(/\\s/g, \"\");\n      if (test.length) {\n\n        const text = this.nodeValue\n          .replace(/^\\s*/, \"\")\n          .replace(/^\\n/, \"\")\n          .replace(/^\\s*/, \"\")\n          .replace(/\\n$/, \"\")\n          .replace(/\\s*$/, \"\")\n          .replace(/\\n$/, \"\");\n\n        layers.push({type: \"text\", style: this.parentNode, value: text, x: transform.x, y: transform.y});\n\n      }\n    }\n    else if (tag === \"text\") {\n      const elem = this.cloneNode(true);\n      select(elem).call(svgPresets);\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem}));\n    }\n    else if ([\"image\", \"img\"].includes(tag)) {\n\n      const url = select(this).attr(\"href\") || select(this).attr(\"xlink:href\");\n\n      if (url.length) {\n\n        const h = parseFloat(select(this).attr(\"height\")) * transform.scale,\n              w = parseFloat(select(this).attr(\"width\")) * transform.scale;\n\n        const data = {\n          clip: transform.clip,\n          height: h,\n          loaded: false,\n          type: \"img\",\n          width: w,\n          x: transform.x,\n          y: transform.y\n        };\n        layers.push(data);\n\n        const img = new Image();\n        img.crossOrigin = \"Anonymous\";\n        img.onload = function() {\n\n          const canvas2 = document.createElement(\"canvas\");\n          const ctx2 = canvas2.getContext(\"2d\");\n          canvas2.height = h * ratio;\n          canvas2.width = w * ratio;\n          ctx2.drawImage(this, 0, 0, w * ratio, h * ratio);\n          const himg = document.createElement(\"img\");\n          himg.src = canvas2.toDataURL(\"image/png\");\n\n          data.value = himg;\n          data.loaded = true;\n\n        };\n        img.onerror = function() {\n          data.loaded = true;\n          data.value = false;\n        };\n        img.src = url;\n\n      }\n\n    }\n    else if (![\"svg\", \"g\", \"text\"].includes(tag) && !select(this).selectAll(\"svg\").size()) {\n\n      const s = options.scale * ratio;\n\n      const data = {\n        height: Math.floor(height + options.padding * 2 + offsetY),\n        loaded: false,\n        type: \"html\",\n        width: Math.floor(width + options.padding * 2 + offsetX),\n        x: Math.floor(layerX - offsetX),\n        y: Math.floor(layerY - offsetY)\n      };\n\n      const tempCanvas = document.createElement(\"canvas\");\n      tempCanvas.width = data.width * s;\n      tempCanvas.height = data.height * s;\n      tempCanvas.style.width = `${data.width * s}px`;\n      tempCanvas.style.height = `${data.height * s}px`;\n\n      const tempContext = tempCanvas.getContext(\"2d\");\n      tempContext.scale(s, s);\n\n      layers.push(data);\n\n      htmlPresets(select(this));\n\n      html2canvas(this, {\n        allowTaint: true,\n        canvas: tempCanvas,\n        letterRendering: true\n      }).then(c => {\n        data.value = c;\n        data.loaded = true;\n      });\n\n    }\n    else if (tag !== \"svg\" && this.childNodes.length > 0 && !select(this).selectAll(\"image, img, svg\").size()) {\n\n      const elem = this.cloneNode(true);\n      select(elem).selectAll(\"*\").each(function() {\n        select(this).call(svgPresets);\n        if (select(this).attr(\"opacity\") === \"0\") this.parentNode.removeChild(this);\n      });\n\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem, tag}));\n\n    }\n    else if (this.childNodes.length > 0) {\n      const [scale, x, y] = parseTransform(this);\n      transform.scale *= scale;\n      transform.x += x;\n      transform.y += y;\n      checkChildren(this, transform);\n    }\n    else { // catches all SVG shapes\n\n      const elem = this.cloneNode(true);\n      select(elem).selectAll(\"*\").each(function() {\n        if (select(this).attr(\"opacity\") === \"0\") this.parentNode.removeChild(this);\n      });\n\n      if (tag === \"line\") {\n        select(elem).attr(\"x1\", parseFloat(select(elem).attr(\"x1\")) + transform.x);\n        select(elem).attr(\"x2\", parseFloat(select(elem).attr(\"x2\")) + transform.x);\n        select(elem).attr(\"y1\", parseFloat(select(elem).attr(\"y1\")) + transform.y);\n        select(elem).attr(\"y2\", parseFloat(select(elem).attr(\"y2\")) + transform.y);\n      }\n      else if (tag === \"path\") {\n        const [scale, x, y] = parseTransform(elem);\n        if (select(elem).attr(\"transform\")) select(elem).attr(\"transform\", `scale(${scale})translate(${x + transform.x},${y + transform.y})`);\n      }\n      select(elem).call(svgPresets);\n\n      const fill = select(elem).attr(\"fill\");\n      const defFill = fill && fill.indexOf(\"url\") === 0;\n      // if (defFill) select(elem).attr(\"fill-opacity\", 0);\n\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem, tag}));\n      if (defFill) {\n        const def = select(fill.slice(4, -1)).node().cloneNode(true);\n        const defTag = (def.tagName || \"\").toLowerCase();\n        if (defTag === \"pattern\") {\n\n          const [scale, x, y] = parseTransform(elem);\n          transform.scale *= scale;\n          transform.x += x;\n          transform.y += y;\n          checkChildren(def, transform);\n\n        }\n      }\n\n    }\n\n  }\n\n  /**\n   * Performs \"checkRender\" on all childNodes of a DOM element (used recursively by checkRender)\n   * @param {HTMLElement} e DOM node to traverse\n   * @param {Object} trans ancestral transform properties\n   * @private\n   */\n  function checkChildren(e, trans) {\n    selectAll(e.childNodes).each(function() {\n      checkRender.bind(this)(trans);\n    });\n  }\n\n  for (let i = 0; i < elem.length; i++) {\n\n    let e = elem[i],\n        options = {scale: 1, x: 0, y: 0, svg: false};\n\n    if (e.constructor === Object) {\n      options = Object.assign(options, e);\n      e = e.element;\n    }\n    layerX = options.x;\n    layerY = options.y;\n    checkRender.bind(e)(options);\n\n  }\n\n  /**\n   * Checks the status of each render layer every 500ms, and finishes render once all are complete.\n   * @private\n   */\n  function checkStatus() {\n\n    let allDone = true;\n    for (let i = 0; i < layers.length; i++) {\n      if (layers[i].loaded === false) {\n        allDone = false;\n        break;\n      }\n    }\n\n    if (allDone) finish();\n    else setTimeout(checkStatus, 500);\n\n  }\n\n  checkStatus();\n\n  /**\n   * Finishes the render after all layers have been rendered to canvas.\n   * @private\n   */\n  function finish() {\n\n    for (let i = 0; i < layers.length; i++) {\n\n      const layer = layers[i];\n      const clip = layer.clip || {height, width, x: 0, y: 0};\n\n      switch (layer.type) {\n\n        case \"img\":\n          if (layer.value) {\n            context.save();\n            context.beginPath();\n            context.translate(options.padding + clip.x, options.padding + clip.y);\n            context.rect(0, 0, clip.width, clip.height);\n            context.clip();\n            context.drawImage(layer.value, layer.x + clip.x, layer.y + clip.y, layer.width, layer.height);\n            context.restore();\n          }\n          break;\n\n        case \"html\":\n          context.save();\n          context.beginPath();\n          context.translate(options.padding, options.padding);\n          context.drawImage(layer.value, layer.x, layer.y, layer.width, layer.height);\n          context.restore();\n          break;\n\n        case \"text\":\n\n          const parent = select(layer.style);\n          const title = layer.value\n            .replace(/&/g, \"&amp;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n\n          const fC = parent.style(\"color\"),\n                fS = parent.style(\"font-size\");\n\n          let fF = parent.style(\"font-family\").split(\",\")[0];\n\n          if (fF.indexOf(\"'\") !== 0) fF = `'${fF}'`;\n          const text = `<text stroke='none' dy='${fS}' fill='${fC}' font-family=${fF} font-size='${fS}'>${title}</text>`;\n\n          context.save();\n          context.translate(options.padding, options.padding);\n          canvg(canvas, text, Object.assign({}, canvgOptions, {offsetX: layer.x, offsetY: layer.y}));\n          context.restore();\n\n          break;\n\n        case \"svg\":\n          const outer = IE ? new XMLSerializer().serializeToString(layer.value) : layer.value.outerHTML;\n          context.save();\n          context.translate(options.padding + clip.x + layer.x, options.padding + clip.y + layer.y);\n          context.rect(0, 0, clip.width, clip.height);\n          context.clip();\n          canvg(canvas, outer, Object.assign({}, canvgOptions, {offsetX: layer.x + clip.x, offsetY: layer.y + clip.y}));\n          context.restore();\n          break;\n\n        default:\n          console.warn(\"uncaught\", layer);\n          break;\n\n      }\n\n    }\n\n    options.callback(canvas);\n\n  }\n\n}\n","import \"canvas-toBlob\";\nimport {select} from \"d3-selection\";\nimport {saveAs} from \"file-saver\";\n// import JsPDF from \"jspdf\";\n\nimport dom2canvas from \"./dom2canvas\";\nimport svgPresets from \"./svgPresets\";\n\nconst defaultOptions = {\n  filename: \"download\",\n  type: \"png\"\n};\n\n/**\n    @function saveElement\n    @desc Downloads an HTML Element as a bitmap PNG image.\n    @param {HTMLElement|Array} elem A single element or array of elements to be saved to one file.\n    @param {Object} [options] Additional options to specify.\n    @param {String} [options.filename = \"download\"] Filename for the downloaded file, without the extension.\n    @param {String} [options.type = \"png\"] File type of the saved document. Accepted values are `\"png\"` and `\"jpg\"`.\n    @param {Object} [renderOptions] Custom options to be passed to the dom2canvas function.\n*/\nexport default function(elem, options = {}, renderOptions = {}) {\n\n  if (!elem) return;\n  options = Object.assign({}, defaultOptions, options);\n\n  const IE = new RegExp(/(MSIE|Trident\\/|Edge\\/)/i).test(navigator.userAgent);\n\n  if (!(elem instanceof Array) && options.type === \"svg\") {\n    const clone = elem.cloneNode(true);\n    select(clone).call(svgPresets);\n    select(clone).selectAll(\"*\").each(function() {\n      select(this).call(svgPresets);\n    });\n    const outer = IE ? new XMLSerializer().serializeToString(clone) : clone.outerHTML;\n    saveAs(new Blob([outer], {type: \"application/svg+xml\"}), `${options.filename}.svg`);\n  }\n  else {\n\n    dom2canvas(elem, Object.assign({}, renderOptions, {callback: canvas => {\n\n      if (renderOptions.callback) renderOptions.callback(canvas);\n\n      if ([\"jpg\", \"png\"].includes(options.type)) {\n        canvas.toBlob(blob => saveAs(blob, `${options.filename}.${options.type}`));\n      }\n      // else if (options.type === \"pdf\") {\n\n      //   const outputHeight = 11,\n      //         outputWidth = 8.5;\n\n      //   const aspect = canvas.width / canvas.height,\n      //         orientation = aspect > 1 ? \"landscape\" : \"portrait\";\n\n      //   const pdf = new JsPDF({\n      //     orientation,\n      //     unit: \"in\",\n      //     format: [outputWidth, outputHeight]\n      //   });\n\n      //   let h = orientation === \"landscape\" ? outputWidth : outputHeight,\n      //       left,\n      //       top,\n      //       w = orientation === \"landscape\" ? outputHeight : outputWidth;\n\n      //   const margin = 0.5;\n\n      //   if (aspect < w / h) {\n      //     h -= margin * 2;\n      //     const tempWidth = h * aspect;\n      //     top = margin;\n      //     left = (w - tempWidth) / 2;\n      //     w = tempWidth;\n      //   }\n      //   else {\n      //     w -= margin * 2;\n      //     const tempHeight = w / aspect;\n      //     left = margin;\n      //     top = (h - tempHeight) / 2;\n      //     h = tempHeight;\n      //   }\n\n      //   pdf.addImage(canvas, \"canvas\", left, top, w, h);\n      //   pdf.save(options.filename);\n\n      // }\n\n    }}));\n\n  }\n\n}\n"],"names":["selection","size","strokeWidth","attr","fill","node","tagName","transparent","includes","fillOpacity","x","y","url","window","charAt","location","origin","selectAll","each","tag","toLowerCase","elem","select","letterSpacing","style","defaultOptions","background","callback","exclude","padding","scale","canvgOptions","ignoreMouse","ignoreAnimation","ignoreDimensions","ignoreClear","parseTransform","property","match","parseFloat","translate","replace","split","map","d","options","Array","Object","assign","IE","RegExp","test","navigator","userAgent","ratio","devicePixelRatio","reference","constructor","element","height","width","layerX","layerY","offsetX","offsetY","getBoundingClientRect","bounds","left","top","offsetLeft","offsetTop","canvas","document","createElement","context","getContext","clearRect","beginPath","rect","fillStyle","layers","checkRender","trans","transform","opacity","display","visibility","length","svg","clip","wholeText","text","nodeValue","push","type","parentNode","value","cloneNode","call","svgPresets","h","w","data","loaded","img","Image","crossOrigin","onload","canvas2","ctx2","drawImage","himg","src","toDataURL","onerror","s","Math","floor","tempCanvas","tempContext","htmlPresets","html2canvas","allowTaint","letterRendering","then","c","childNodes","removeChild","checkChildren","defFill","indexOf","def","slice","defTag","e","bind","i","checkStatus","allDone","finish","setTimeout","layer","save","restore","parent","title","fC","fS","fF","canvg","outer","XMLSerializer","serializeToString","outerHTML","console","warn","filename","renderOptions","clone","saveAs","Blob","dom2canvas","toBlob","blob"],"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"}