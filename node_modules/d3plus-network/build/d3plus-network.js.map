{"version":3,"file":"d3plus-network.js","sources":["../src/Network.js","../src/Rings.js","../src/Sankey.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, mean, min, merge} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {forceLink, forceManyBody, forceSimulation} from \"d3-force\";\nimport {polygonHull} from \"d3-polygon\";\nimport * as scales from \"d3-scale\";\nimport {zoomTransform} from \"d3-zoom\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n * Fetches the unique ID for a data point, whether it's defined by data or nodes.\n * @private\n */\nfunction getNodeId(d, i) {\n  return `${this._id(d, i) || this._nodeGroupBy[min([this._drawDepth, this._nodeGroupBy.length - 1])](d, i)}`;\n}\n\n/**\n    @class Network\n    @extends external:Viz\n    @desc Creates a network visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/getting-started/) for help getting started using the Network class.\n*/\nexport default class Network extends Viz {\n\n  /**\n      @memberof Network\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodeGroupBy = [accessor(\"id\")];\n    this._nodes = [];\n    this._on[\"click.shape\"] = (d, i, x, event) => {\n\n      this._tooltipClass.data([]).render();\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        const id = getNodeId.bind(this)(d, i);\n\n        if (this._focus && this._focus === id) {\n\n          this.active(false);\n          this._on.mouseenter.bind(this)(d, i, x, event);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const links = this._linkLookup[id],\n                node = this._nodeLookup[id];\n\n          const filterIds = [id];\n          let xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n          links.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return h.source.id === id || h.target.id === id;\n            else return filterIds.includes(getNodeId.bind(this)(h, x));\n          });\n\n          this._focus = id;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n      }\n\n    };\n    this._on[\"click.legend\"] = (d, i, x, event) => {\n\n      const ids = this._id(d);\n      let id = this._ids(d);\n      id = id[id.length - 1];\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        if (this._focus && this._focus === ids) {\n\n          this.active(false);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const nodes = ids.map(id => this._nodeLookup[id]);\n\n          const filterIds = [`${id}`];\n          let xDomain = [nodes[0].x - nodes[0].r, nodes[0].x + nodes[0].r],\n              yDomain = [nodes[0].y - nodes[0].r, nodes[0].y + nodes[0].r];\n\n          nodes.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return filterIds.includes(h.source.id) && filterIds.includes(h.target.id);\n            else {\n              const myIds = this._ids(h, x);\n              return filterIds.includes(`${myIds[myIds.length - 1]}`);\n            }\n          });\n\n          this._focus = ids;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n        this._on.mouseenter.bind(this)(d, i, x, event);\n        this._on[\"mousemove.legend\"].bind(this)(d, i, x, event);\n\n      }\n\n    };\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      const id = getNodeId.bind(this)(d, i),\n            links = this._linkLookup[id] || [],\n            node = this._nodeLookup[id];\n\n      const filterIds = [id];\n      const xDomain = [node.x - node.r, node.x + node.r],\n            yDomain = [node.y - node.r, node.y + node.r];\n\n      links.forEach(l => {\n        filterIds.push(l.id);\n        if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n        if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n        if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n        if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n      });\n\n      this.hover((h, x) => {\n        if (h.source && h.target) return h.source.id === id || h.target.id === id;\n        else return filterIds.includes(`${this._ids(h, x)[this._drawDepth]}`);\n      });\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\"\n      }\n    });\n    this._x = accessor(\"x\");\n    this._y = accessor(\"y\");\n\n    this._zoom = true;\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const duration = this._duration,\n          height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes.reduce((obj, d, i) => {\n      obj[getNodeId.bind(this)(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        fx: d !== undefined && !isNaN(this._x(d)) ? this._x(d) : this._x(n),\n        fy: d !== undefined && !isNaN(this._y(d)) ? this._y(d) : this._y(n),\n        node: n,\n        r: this._size ? d !== undefined && this._size(d) !== undefined ? this._size(d) : this._size(n) : this._sizeMin,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const nodeIndices = nodes.map(n => n.node);\n    const links = this._links.map(l => {\n      const referenceType = typeof l.source;\n      return {\n        size: this._linkSize(l),\n        source: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.source])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.source]\n            : nodeLookup[l.source.id],\n        target: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.target])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.target]\n            : nodeLookup[l.target.id]\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const missingCoords = nodes.some(n => n.fx === undefined || n.fy === undefined);\n\n    if (missingCoords) {\n\n      const linkStrength = scales.scaleLinear()\n        .domain(extent(links, d => d.size))\n        .range([0.1, 0.5]);\n\n      const simulation = forceSimulation()\n        .force(\"link\", forceLink(links)\n          .id(d => d.id)\n          .distance(1)\n          .strength(d => linkStrength(d.size))\n          .iterations(4)\n        )\n        .force(\"charge\", forceManyBody().strength(-1))\n        .stop();\n\n      const iterations = 100;\n      const alphaMin = 0.001;\n      const alphaDecay = 1 - Math.pow(alphaMin, 1 / iterations);\n      simulation.velocityDecay(0);\n      simulation.alphaMin(alphaMin);\n      simulation.alphaDecay(alphaDecay);\n      simulation.alphaDecay(0);\n\n      simulation.nodes(nodes);\n      simulation.tick(iterations).stop();\n\n      const nodePositions = nodes.map(n => [n.vx, n.vy]);\n      let angle = 0, cx = 0, cy = 0;\n      if (nodePositions.length === 2) {\n        angle = 100;\n      }\n      else if (nodePositions.length > 2) {\n        const hull = polygonHull(nodePositions);\n        const rect = shapes.largestRect(hull, {verbose: true});\n        angle = rect.angle;\n        cx = rect.cx;\n        cy = rect.cy;\n      }\n\n      nodes.forEach(n => {\n        const p = shapes.pointRotate([n.vx, n.vy], -1 * (Math.PI / 180 * angle), [cx, cy]);\n        n.fx = p[0];\n        n.fy = p[1];\n      });\n\n    }\n\n    const xExtent = extent(nodes.map(n => n.fx)),\n          yExtent = extent(nodes.map(n => n.fy));\n\n    const x = scales.scaleLinear().domain(xExtent).range([0, width]),\n          y = scales.scaleLinear().domain(yExtent).range([0, height]);\n\n    const nodeRatio = (xExtent[1] - xExtent[0]) / (yExtent[1] - yExtent[0]) || 1,\n          screenRatio = width / height;\n\n    if (nodeRatio > screenRatio) {\n      const h = height * screenRatio / nodeRatio;\n      y.range([(height - h) / 2, height - (height - h) / 2]);\n    }\n    else {\n      const w = width * nodeRatio / screenRatio;\n      x.range([(width - w) / 2, width - (width - w) / 2]);\n    }\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.y = y(n.fy);\n    });\n\n    const rExtent = extent(nodes.map(n => n.r));\n    let rMax = this._sizeMax || max([1, min(\n      merge(nodes\n        .map(n1 => nodes\n          .map(n2 => n1 === n2 ? null : shapes.pointDistance([n1.x, n1.y], [n2.x, n2.y]))\n        )\n      )\n    ) / 2]);\n\n    const r = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n                .domain(rExtent).range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]),\n          xDomain = x.domain(),\n          yDomain = y.domain();\n\n    const xOldSize = xDomain[1] - xDomain[0],\n          yOldSize = yDomain[1] - yDomain[0];\n\n    nodes.forEach(n => {\n      const size = r(n.r);\n      if (xDomain[0] > x.invert(n.x - size)) xDomain[0] = x.invert(n.x - size);\n      if (xDomain[1] < x.invert(n.x + size)) xDomain[1] = x.invert(n.x + size);\n      if (yDomain[0] > y.invert(n.y - size)) yDomain[0] = y.invert(n.y - size);\n      if (yDomain[1] < y.invert(n.y + size)) yDomain[1] = y.invert(n.y + size);\n    });\n\n    const xNewSize = xDomain[1] - xDomain[0],\n          yNewSize = yDomain[1] - yDomain[0];\n\n    rMax *= min([xOldSize / xNewSize, yOldSize / yNewSize]);\n    r.range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]);\n    x.domain(xDomain);\n    y.domain(yDomain);\n\n    const fallbackRadius = (nodeRatio > screenRatio ? width : height) / 2;\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.fx = n.x;\n      n.y = y(n.fy);\n      n.fy = n.y;\n      n.r = r(n.r) || fallbackRadius;\n      n.width = n.r * 2;\n      n.height = n.r * 2;\n    });\n\n    this._container = this._select.selectAll(\"svg.d3plus-network\").data([0]);\n\n    this._container = this._container.enter().append(\"svg\")\n        .attr(\"class\", \"d3plus-network\")\n        .attr(\"opacity\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", this._margin.left)\n        .attr(\"y\", this._margin.top)\n        .style(\"background-color\", \"transparent\")\n      .merge(this._container);\n\n    this._container.transition().duration(duration)\n      .attr(\"opacity\", 1)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"x\", this._margin.left)\n      .attr(\"y\", this._margin.top);\n\n    const hitArea = this._container.selectAll(\"rect.d3plus-network-hitArea\").data([0]);\n    hitArea.enter().append(\"rect\")\n        .attr(\"class\", \"d3plus-network-hitArea\")\n      .merge(hitArea)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"transparent\")\n        .on(\"click\", () => {\n          if (this._focus) {\n            this.active(false);\n            this._focus = undefined;\n            this._zoomToBounds(null);\n          }\n        });\n\n    this._zoomGroup = this._container.selectAll(\"g.d3plus-network-zoomGroup\").data([0]);\n    const parent = this._zoomGroup = this._zoomGroup.enter().append(\"g\")\n        .attr(\"class\", \"d3plus-network-zoomGroup\")\n      .merge(this._zoomGroup);\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, r.range()[0]]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .activeStyle({\n        \"stroke-width\": d => d.size\n      })\n      .d(d => `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(links)\n      .select(elem(\"g.d3plus-network-links\", {parent, duration, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      select: elem(\"g.d3plus-network-nodes\", {parent, duration, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .config(shapeConfig[d.key] || {})\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    if (this._nodes.length < this._dataCutoff) {\n      this._shapes.forEach(s => s.hover(_));\n      if (this._legend) this._legendClass.hover(_);\n    }\n\n    return this;\n  }\n\n  /**\n      @memberof Network\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Network.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = \"id\"]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = (a, c) => {\n            const v = Array.from(new Set(a.map(c)));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Network\n      @desc The list of nodes to be used for drawing the network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the maximum pixel radius used in size scaling. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel radius used in size scaling.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of nodes in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the x accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current x accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = mean;\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the y accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current y accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = mean;\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorLegible} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n    @class Rings\n    @extends external:Viz\n    @desc Creates a ring visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/simple-rings/) for help getting started using the Rings class.\n*/\nexport default class Rings extends Viz {\n\n  /**\n      @memberof Rings\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i, x, event);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n              links = this._linkLookup[id],\n              node = this._nodeLookup[id];\n\n        const filterIds = [node.id];\n        const xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n        links.forEach(l => {\n          filterIds.push(l.id);\n          if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n          if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n          if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n          if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n          else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n        });\n      }\n    };\n    this._on[\"click.shape\"] = d => {\n      this._center = d.id;\n      // Need to resets margins and padding because we are\n      // skipping over the default render method and using\n      // _draw directly.\n      this._margin = {bottom: 0, left: 0, right: 0, top: 0};\n      this._padding = {bottom: 0, left: 0, right: 0, top: 0};\n      this._draw();\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes;\n\n    if (!this._nodes.length && this._links.length) {\n      const nodeIds = Array.from(new Set(this._links.reduce((ids, link) => ids.concat([link.source, link.target]), [])));\n      nodes = nodeIds.map(node => typeof node === \"object\" ? node : {id: node});\n    }\n\n    nodes = nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        node: n,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const links = this._links.map(link => {\n      const check = [\"source\", \"target\"];\n      const edge = check.reduce((result, check) => {\n        result[check] = typeof link[check] === \"number\" ? nodes[link[check]] : nodeLookup[link[check].id || link[check]];\n        return result;\n      }, {});\n      edge.size = this._linkSize(link);\n      return edge;\n    });\n\n    const linkMap = links.reduce((map, link) => {\n      if (!map[link.source.id]) {\n        map[link.source.id] = [];\n      }\n      map[link.source.id].push(link);\n      if (!map[link.target.id]) {\n        map[link.target.id] = [];\n      }\n      map[link.target.id].push(link);\n      return map;\n    }, {});\n\n    const duration = this._duration,\n          height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const edges = [],\n          radius = min([height, width]) / 2,\n          ringWidth = radius / 3;\n\n    const primaryRing = ringWidth,\n          secondaryRing = ringWidth * 2;\n\n    const center = nodeLookup[this._center];\n\n    center.x = width / 2;\n    center.y = height / 2;\n    center.r = this._sizeMin ? max([this._sizeMin, primaryRing * .65]) : this._sizeMax ? min([this._sizeMax, primaryRing * .65]) : primaryRing * .65;\n\n    const claimed = [center],\n          primaries = [];\n\n    linkMap[this._center].forEach(edge => {\n      const node = edge.source.id === this._center ? edge.target : edge.source;\n      node.edges = linkMap[node.id].filter(link => link.source.id !== this._center || link.target.id !== this._center);\n      node.edge = edge;\n\n      claimed.push(node);\n      primaries.push(node);\n    });\n\n    primaries.sort((a, b) => a.edges.length - b.edges.length);\n\n    const secondaries = [];\n    let totalEndNodes = 0;\n\n    primaries.forEach(p => {\n      const primaryId = p.id;\n\n      p.edges = p.edges.filter(edge => !claimed.includes(edge.source) && edge.target.id === primaryId ||\n                                       !claimed.includes(edge.target) && edge.source.id === primaryId);\n\n      totalEndNodes += p.edges.length || 1;\n\n      p.edges.forEach(edge => {\n        const {source, target} = edge;\n        const claim = target.id === primaryId ? source : target;\n        claimed.push(claim);\n      });\n    });\n\n    const tau = Math.PI * 2;\n    let offset = 0;\n\n    primaries.forEach((p, i) => {\n      const children = p.edges.length || 1;\n      const space = tau / totalEndNodes * children;\n\n      if (i === 0) {\n        offset -= space / 2;\n      }\n\n      const angle = offset + space / 2 - tau / 4;\n\n      p.radians = angle;\n      p.x = width / 2 + primaryRing * Math.cos(angle);\n      p.y = height / 2 + primaryRing * Math.sin(angle);\n\n      offset += space;\n\n      p.edges.forEach((edge, i) => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n        const s = tau / totalEndNodes;\n        const a = angle - s * children / 2 + s / 2 + s * i;\n\n        node.radians = a;\n        node.x = width / 2 + secondaryRing * Math.cos(a);\n        node.y = height / 2 + secondaryRing * Math.sin(a);\n\n        secondaries.push(node);\n      });\n    });\n\n    const primaryDistance = ringWidth / 2;\n    const secondaryDistance = ringWidth / 4;\n\n    let primaryMax = primaryDistance / 2 - 4;\n    if (primaryDistance / 2 - 4 < 8) {\n      primaryMax = min([primaryDistance / 2, 8]);\n    }\n\n    let secondaryMax = secondaryDistance / 2 - 4;\n    if (secondaryDistance / 2 - 4 < 4) {\n      secondaryMax = min([secondaryDistance / 2, 4]);\n    }\n\n    if (secondaryMax > ringWidth / 10) {\n      secondaryMax = ringWidth / 10;\n    }\n\n    if (secondaryMax > primaryMax && secondaryMax > 10) {\n      secondaryMax = primaryMax * .75;\n    }\n    if (primaryMax > secondaryMax * 1.5) {\n      primaryMax = secondaryMax * 1.5;\n    }\n\n    primaryMax = Math.floor(primaryMax);\n    secondaryMax = Math.floor(secondaryMax);\n\n    let radiusFn;\n\n    if (this._size) {\n      const domain = extent(data, d => d.size);\n\n      if (domain[0] === domain[1]) {\n        domain[0] = 0;\n      }\n\n      radiusFn = scales.scaleLinear()\n        .domain(domain)\n        .rangeRound([3, min([primaryMax, secondaryMax])]);\n\n      const val = center.size;\n      center.r = radiusFn(val);\n    }\n    else {\n      radiusFn = scales.scaleLinear()\n        .domain([1, 2])\n        .rangeRound([primaryMax, secondaryMax]);\n    }\n\n    secondaries.forEach(s => {\n      s.ring = 2;\n      const val = this._size ? s.size : 2;\n      s.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    primaries.forEach(p => {\n      p.ring = 1;\n      const val = this._size ? p.size : 1;\n      p.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    nodes = [center].concat(primaries).concat(secondaries);\n\n    primaries.forEach(p => {\n      const check = [\"source\", \"target\"];\n      const {edge} = p;\n\n      check.forEach(node => {\n        edge[node] = nodes.find(n => n.id === edge[node].id);\n      });\n\n      edges.push(edge);\n\n      linkMap[p.id].forEach(edge => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n\n        if (node.id !== center.id) {\n          let target = secondaries.find(s => s.id === node.id);\n\n          if (!target) {\n            target = primaries.find(s => s.id === node.id);\n          }\n\n          if (target) {\n            edge.spline = true;\n\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const middleRing = primaryRing + (secondaryRing - primaryRing) * 0.5;\n\n            const check = [\"source\", \"target\"];\n\n            check.forEach((node, i) => {\n              edge[`${node}X`] = edge[node].x + Math.cos(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}Y`] = edge[node].y + Math.sin(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}BisectX`] = centerX + middleRing * Math.cos(edge[node].radians);\n              edge[`${node}BisectY`] = centerY + middleRing * Math.sin(edge[node].radians);\n\n              edge[node] = nodes.find(n => n.id === edge[node].id);\n\n              if (edge[node].edges === undefined) edge[node].edges = {};\n\n              const oppId = i === 0 ? edge.target.id : edge.source.id;\n\n              if (edge[node].id === p.id) {\n                edge[node].edges[oppId] = {\n                  angle: p.radians + Math.PI,\n                  radius: ringWidth / 2\n                };\n              }\n              else {\n                edge[node].edges[oppId] = {\n                  angle: target.radians,\n                  radius: ringWidth / 2\n                };\n              }\n            });\n\n            edges.push(edge);\n          }\n        }\n      });\n    });\n\n    nodes.forEach(node => {\n\n      if (node.id !== this._center) {\n        const fontSize = this._shapeConfig.labelConfig.fontSize && this._shapeConfig.labelConfig.fontSize(node) || 11;\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 5;\n        const width = ringWidth - node.r;\n\n        let angle = node.radians * (180 / Math.PI);\n        let x = node.r + padding;\n        let textAnchor = \"start\";\n\n        if (angle < -90 || angle > 90) {\n          x = -node.r - width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        node.labelBounds = {\n          x,\n          y: -lineHeight / 2,\n          width,\n          height\n        };\n\n        node.rotate = angle;\n        node.textAnchor = textAnchor;\n      }\n      else {\n        node.labelBounds = {\n          x: -primaryRing / 2,\n          y: -primaryRing / 2,\n          width: primaryRing,\n          height: primaryRing\n        };\n      }\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const radius = min(nodes, d => d.r);\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, radius]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .id(d => `${d.source.id}_${d.target.id}`)\n      .d(d => d.spline ? `M${d.sourceX},${d.sourceY}C${d.sourceBisectX},${d.sourceBisectY} ${d.targetBisectX},${d.targetBisectY} ${d.targetX},${d.targetY}` : `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(edges)\n      .select(elem(\"g.d3plus-rings-links\", {parent: this._select, duration, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const that = this;\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: d => d.id === this._center ? configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.fontColor(d) : colorLegible(configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).fill(d)),\n        fontResize: d => d.id === this._center,\n        padding: 0,\n        textAnchor: d => nodeLookup[d.id].textAnchor || configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.textAnchor,\n        verticalAlign: d => d.id === this._center ? \"middle\" : \"top\"\n      },\n      rotate: d => nodeLookup[d.id].rotate || 0,\n      select: elem(\"g.d3plus-rings-nodes\", {parent: this._select, duration, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n   @memberof Rings\n   @desc Sets the center node to be the node with the given id.\n   @param {String}\n   @chainable\n   */\n  center(_) {\n    return arguments.length ? (this._center = _, this) : this._center;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Rings\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Rings.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = (a, c) => {\n            const v = Array.from(new Set(a.map(c)));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Rings\n      @desc The list of nodes to be used for drawing the rings network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyRight\n} from \"d3-sankey\";\n\nconst sankeyAligns = {\n  center: sankeyCenter,\n  justify: sankeyJustify,\n  left: sankeyLeft,\n  right: sankeyRight\n};\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport * as shapes from \"d3plus-shape\";\nimport {addToQueue, Viz} from \"d3plus-viz\";\n\n/**\n    @class Sankey\n    @extends external:Viz\n    @desc Creates a sankey visualization based on a defined set of nodes and links. [Click here](http://d3plus.org/examples/d3plus-network/sankey-diagram/) for help getting started using the Sankey class.\n*/\nexport default class Sankey extends Viz {\n\n  /**\n      @memberof Sankey\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    super();\n    this._nodeId = accessor(\"id\");\n    this._links = accessor(\"links\");\n    this._linksSource = \"source\";\n    this._linksTarget = \"target\";\n    this._noDataMessage = false;\n    this._nodes = accessor(\"nodes\");\n    this._nodeAlign = sankeyAligns.justify;\n    this._nodePadding = 8;\n    this._nodeWidth = 30;\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMove(d, i, x, event);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i, x, event);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeId(d, i),\n              node = this._nodeLookup[id],\n              nodeLookup = Object.keys(this._nodeLookup).reduce((all, item) => {\n                all[this._nodeLookup[item]] = !isNaN(item) ? parseInt(item, 10) : item;\n                return all;\n              }, {});\n\n        const links = this._linkLookup[node];\n        const filterIds = [id];\n\n        links.forEach(l => {\n          filterIds.push(nodeLookup[l]);\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) {\n            return h.source.id === id || h.target.id === id;\n          }\n          else {\n            return filterIds.includes(this._nodeId(h, x));\n          }\n        });\n      }\n    };\n    this._path = sankeyLinkHorizontal();\n    this._sankey = sankey();\n    this._shape = constant(\"Rect\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Path: {\n        fill: \"none\",\n        hoverStyle: {\n          \"stroke-width\": d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n        },\n        label: false,\n        stroke: \"#DBDBDB\",\n        strokeOpacity: 0.5,\n        strokeWidth: d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n\n      },\n      Rect: {}\n    });\n    this._value = constant(1);\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const _nodes = Array.isArray(this._nodes)\n      ? this._nodes\n      : this._links.reduce((all, d) => {\n        if (!all.includes(d[this._linksSource])) all.push(d[this._linksSource]);\n        if (!all.includes(d[this._linksTarget])) all.push(d[this._linksTarget]);\n        return all;\n      }, []).map(id => ({id}));\n\n    const nodes = _nodes\n      .map((n, i) => ({\n        __d3plus__: true,\n        data: n,\n        i,\n        id: this._nodeId(n, i),\n        node: n,\n        shape: \"Rect\"\n      }));\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d, i) => {\n      obj[d.id] = i;\n      return obj;\n    }, {});\n\n    const links = this._links.map((link, i) => {\n      const check = [this._linksSource, this._linksTarget];\n      const linkLookup = check.reduce((result, item) => {\n        result[item] = nodeLookup[link[item]];\n        return result;\n      }, {});\n      return {\n        source: linkLookup[this._linksSource],\n        target: linkLookup[this._linksTarget],\n        value: this._value(link, i)\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source]) obj[d.source] = [];\n      obj[d.source].push(d.target);\n      if (!obj[d.target]) obj[d.target] = [];\n      obj[d.target].push(d.source);\n      return obj;\n    }, {});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._sankey\n      .nodeAlign(this._nodeAlign)\n      .nodePadding(this._nodePadding)\n      .nodeWidth(this._nodeWidth)\n      .nodes(nodes)\n      .links(links)\n      .size([width, height])();\n\n    this._shapes.push(\n      new Path()\n        .config(this._shapeConfig.Path)\n        .data(links)\n        .d(this._path)\n        .select(\n          elem(\"g.d3plus-Links\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .render()\n    );\n    nest()\n      .key(d => d.shape)\n      .entries(nodes)\n      .forEach(d => {\n        this._shapes.push(\n          new shapes[d.key]()\n            .data(d.values)\n            .height(d => d.y1 - d.y0)\n            .width(d => d.x1 - d.x0)\n            .x(d => (d.x1 + d.x0) / 2)\n            .y(d => (d.y1 + d.y0) / 2)\n            .select(\n              elem(\"g.d3plus-sankey-nodes\", {\n                parent: this._select,\n                enter: {transform},\n                update: {transform}\n              }).node()\n            )\n            .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n            .render()\n        );\n      });\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Sankey.node) method. The `source` and `target` keys in each link need to map to the nodes in one of one way:\n1. A *String* value matching the `id` of the node.\n\nThe value passed should be an *Array* of data. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array} *links* = []\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"links\");\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the source node.\n      @param {String} [*value* = \"source\"]\n      @chainable\n  */\n  linksSource(_) {\n    return arguments.length ? (this._linksSource = _, this) : this._linksSource;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the target node.\n      @param {String} [*value* = \"target\"]\n      @chainable\n  */\n  linksTarget(_) {\n    return arguments.length ? (this._linksTarget = _, this) : this._linksTarget;\n  }\n\n  /**\n      @memberof Sankey\n      @desc Sets the nodeAlign property of the sankey layout, which can either be \"left\", \"right\", \"center\", or \"justify\".\n      @param {Function|String} [*value* = \"justify\"]\n      @chainable\n  */\n  nodeAlign(_) {\n    return arguments.length\n      ? (this._nodeAlign = typeof _ === \"function\" ? _ : sankeyAligns[_], this)\n      : this._nodeAlign;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the node id accessor(s) to the specified array of values and returns the current class instance. If *value* is not specified, returns the current node group accessor.\n      @param {String} [*value* = \"id\"]\n      @chainable\n  */\n  nodeId(_) {\n    return arguments.length\n      ? (this._nodeId = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._nodeId;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The list of nodes to be used for drawing the network. The value passed must be an *Array* of data.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array} *nodes* = []\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      addToQueue.bind(this)(_, f, \"nodes\");\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the padding of the node and returns the current class instance. If *value* is not specified, returns the current nodePadding. By default, the nodePadding size is 8.\n      @param {Number} [*value* = 8]\n      @chainable\n  */\n  nodePadding(_) {\n    return arguments.length ? (this._nodePadding = _, this) : this._nodePadding;\n  }\n\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the node and returns the current class instance. If *value* is not specified, returns the current nodeWidth. By default, the nodeWidth size is 30.\n      @param {Number} [*value* = 30]\n      @chainable\n  */\n  nodeWidth(_) {\n    return arguments.length ? (this._nodeWidth = _, this) : this._nodeWidth;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the links and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|Number} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n\n    return arguments.length\n      ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._value;\n  }\n}\n"],"names":["getNodeId","d","i","_id","_nodeGroupBy","min","_drawDepth","length","Network","_links","_linkSize","constant","_linkSizeMin","_linkSizeScale","_noDataMessage","accessor","_nodes","_on","x","event","_tooltipClass","data","render","_hover","_groupBy","id","bind","_focus","active","mouseenter","undefined","_zoomToBounds","hover","links","_linkLookup","node","_nodeLookup","filterIds","xDomain","r","yDomain","y","forEach","l","push","h","source","target","includes","t","zoomTransform","_container","map","k","ids","_ids","nodes","myIds","defaultMouseMove","_sizeMin","_sizeScale","_shape","_shapeConfig","assign","ariaLabel","validSize","_size","_drawLabel","labelConfig","duration","fontMin","fontResize","labelPadding","textAnchor","verticalAlign","Path","fill","label","stroke","_x","_y","_zoom","callback","_duration","height","_height","_margin","top","bottom","transform","left","width","_width","right","_filteredData","reduce","obj","Array","from","Set","Object","keys","concat","n","__d3plus__","fx","isNaN","fy","shape","filter","nodeLookup","nodeIndices","referenceType","size","indexOf","missingCoords","some","linkStrength","scales.scaleLinear","domain","extent","range","simulation","forceSimulation","force","forceLink","distance","strength","iterations","forceManyBody","stop","alphaMin","alphaDecay","Math","pow","velocityDecay","tick","nodePositions","vx","vy","angle","cx","cy","hull","polygonHull","rect","shapes.largestRect","verbose","p","shapes.pointRotate","PI","xExtent","yExtent","nodeRatio","screenRatio","w","rExtent","rMax","_sizeMax","max","merge","n1","n2","shapes.pointDistance","scales","charAt","toUpperCase","slice","xOldSize","yOldSize","invert","xNewSize","yNewSize","fallbackRadius","_select","selectAll","enter","append","attr","style","transition","hitArea","on","_zoomGroup","parent","strokeExtent","strokeScale","link","linkConfig","configPrep","_shapes","shapes.Path","config","strokeWidth","activeStyle","select","elem","update","shapeConfig","_dataCutoff","_active","nest","key","entries","shapes","values","_","s","_legend","_legendClass","f","arguments","addToQueue","_aggs","a","c","v","mean","Viz","Rings","_center","_padding","_draw","nodeIds","check","edge","result","linkMap","edges","radius","ringWidth","primaryRing","secondaryRing","center","claimed","primaries","sort","b","secondaries","totalEndNodes","primaryId","claim","tau","offset","children","space","radians","cos","sin","primaryDistance","secondaryDistance","primaryMax","secondaryMax","floor","radiusFn","rangeRound","val","ring","find","spline","centerX","centerY","middleRing","oppId","fontSize","lineHeight","padding","labelBounds","rotate","sourceX","sourceY","sourceBisectX","sourceBisectY","targetBisectX","targetBisectY","targetX","targetY","that","fontColor","colorLegible","sankeyAligns","sankeyCenter","justify","sankeyJustify","sankeyLeft","sankeyRight","Sankey","_nodeId","_linksSource","_linksTarget","_nodeAlign","_nodePadding","_nodeWidth","all","item","parseInt","_path","sankeyLinkHorizontal","_sankey","sankey","hoverStyle","abs","y1","y0","value","strokeOpacity","Rect","_value","isArray","linkLookup","nodeAlign","nodePadding","nodeWidth","x1","x0"],"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"}