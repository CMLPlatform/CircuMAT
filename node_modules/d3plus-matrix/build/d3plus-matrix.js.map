{"version":3,"file":"d3plus-matrix.js","sources":["../src/helpers/getProp.js","../src/helpers/prepData.js","../src/Matrix.js","../src/RadialMatrix.js"],"sourcesContent":["/**\n *\n * @param {String} type\n * @param {Object} d\n * @param {Number} i\n * @private\n */\nexport default function(type, d, i) {\n  return d[type] || this[`_${type}`](d, i);\n}\n","import {unique} from \"d3plus-common\";\n\nconst cartesian = (a, b) => [].concat(...a.map(d => b.map(e => [].concat(d, e))));\n\n/**\n * @private\n */\nexport default function() {\n\n  const data = this._filteredData;\n  const rowValues = (this._rowList || unique(data.map(this._row))).sort(this._rowSort);\n  const columnValues = (this._columnList || unique(data.map(this._column))).sort(this._columnSort);\n\n  if (!rowValues.length || !columnValues.length) return this;\n\n  const shapeData = cartesian(rowValues, columnValues)\n    .map(([rowValue, columnValue]) => {\n      const dataObj = {\n        __d3plusTooltip__: true,\n        __d3plus__: true,\n        column: columnValue,\n        row: rowValue\n      };\n      const dataIndex = data\n        .findIndex((d, i) => this._row(d, i) === rowValue && this._column(d, i) === columnValue);\n      if (dataIndex >= 0) {\n        dataObj.i = dataIndex;\n        dataObj.data = data[dataIndex];\n      }\n      else {\n        dataObj.data = {row: rowValue, column: columnValue};\n      }\n      return dataObj;\n    });\n\n  return {rowValues, columnValues, shapeData};\n\n}\n","import {Axis} from \"d3plus-axis\";\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\nimport getProp from \"./helpers/getProp\";\nimport prepData from \"./helpers/prepData\";\n\nconst defaultAxisConfig = {\n  align: \"start\",\n  barConfig: {\n    stroke: 0\n  },\n  gridSize: 0,\n  padding: 5,\n  paddingInner: 0,\n  paddingOuter: 0,\n  scale: \"band\",\n  tickSize: 0\n};\n\n/**\n    @class Matrix\n    @extends Viz\n    @desc Creates a simple rows/columns Matrix view of any dataset. See [this example](https://d3plus.org/examples/d3plus-matrix/getting-started/) for help getting started using the Matrix class.\n*/\nexport default class Matrix extends Viz {\n\n  /**\n    @memberof Matrix\n    @desc Invoked when creating a new class instance, and sets any default parameters.\n    @private\n  */\n  constructor() {\n\n    super();\n\n    this._cellPadding = 2;\n\n    this._column = accessor(\"column\");\n    this._columnAxis = new Axis();\n    this._columnConfig = assign({orient: \"top\"}, defaultAxisConfig);\n    this._columnSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n    this._label = (d, i) => `${getProp.bind(this)(\"row\", d, i)} / ${getProp.bind(this)(\"column\", d, i)}`;\n\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMoveShape(d, i, x, event);\n      const row = getProp.bind(this)(\"row\", d, i);\n      const column = getProp.bind(this)(\"column\", d, i);\n      this.hover((h, ii) => getProp.bind(this)(\"row\", h, ii) === row || getProp.bind(this)(\"column\", h, ii) === column);\n    };\n\n    this._row = accessor(\"row\");\n    this._rowAxis = new Axis();\n    this._rowConfig = assign({orient: \"left\"}, defaultAxisConfig);\n    this._rowSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n  }\n\n  /**\n      @memberof Matrix\n      @desc Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    const {rowValues, columnValues, shapeData} = prepData.bind(this)(this._filteredData);\n\n    if (!rowValues.length || !columnValues.length) return this;\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const hidden = {opacity: 0};\n    const visible = {opacity: 1};\n\n    const columnRotation = width / columnValues.length < 120;\n\n    const selectElem = (name, opts) => elem(`g.d3plus-Matrix-${name}`, Object.assign({parent, transition}, opts)).node();\n\n    this._rowAxis\n      .select(selectElem(\"row\", {enter: hidden, update: hidden}))\n      .domain(rowValues)\n      .height(height - this._margin.top - this._margin.bottom - this._padding.bottom - this._padding.top)\n      .maxSize(width / 4)\n      .width(width)\n      .config(this._rowConfig)\n      .render();\n\n    const rowPadding = this._rowAxis.outerBounds().width;\n    this._padding.left += rowPadding;\n    let columnTransform = `translate(0, ${this._margin.top})`;\n    const hiddenTransform = Object.assign({transform: columnTransform}, hidden);\n\n    this._columnAxis\n      .select(selectElem(\"column\", {enter: hiddenTransform, update: hiddenTransform}))\n      .domain(columnValues)\n      .range([this._margin.left + this._padding.left, width - this._margin.right + this._padding.right])\n      .height(height)\n      .maxSize(height / 4)\n      .width(width)\n      .labelRotation(columnRotation)\n      .config(this._columnConfig)\n      .render();\n\n    const columnPadding = this._columnAxis.outerBounds().height;\n    this._padding.top += columnPadding;\n\n    super._draw(callback);\n\n    const rowTransform = `translate(${this._margin.left}, ${this._margin.top})`;\n    columnTransform = `translate(0, ${this._margin.top})`;\n    const visibleTransform = Object.assign({transform: columnTransform}, visible);\n\n    this._rowAxis\n      .select(selectElem(\"row\", {update: Object.assign({transform: rowTransform}, visible)}))\n      .height(height - this._margin.top - this._margin.bottom - this._padding.bottom)\n      .maxSize(rowPadding)\n      .range([columnPadding + this._columnAxis.padding(), undefined])\n      .render();\n\n    this._columnAxis\n      .select(selectElem(\"column\", {update: visibleTransform}))\n      .range([this._margin.left + this._padding.left + this._rowAxis.padding(), width - this._margin.right + this._padding.right])\n      .maxSize(columnPadding)\n      .render();\n\n    const rowScale = this._rowAxis._getPosition.bind(this._rowAxis);\n    const columnScale = this._columnAxis._getPosition.bind(this._columnAxis);\n    const cellHeight = rowValues.length > 1\n      ? rowScale(rowValues[1]) - rowScale(rowValues[0])\n      : this._rowAxis.height();\n    const cellWidth = columnValues.length > 1\n      ? columnScale(columnValues[1]) - columnScale(columnValues[0])\n      : this._columnAxis.width();\n\n    const transform = `translate(0, ${this._margin.top})`;\n    const rectConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\");\n\n    this._shapes.push(new Rect()\n      .data(shapeData)\n      .select(elem(\"g.d3plus-Matrix-cells\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        height: cellHeight - this._cellPadding,\n        width: cellWidth - this._cellPadding,\n        x: d => columnScale(d.column) + cellWidth / 2,\n        y: d => rowScale(d.row) + cellHeight / 2\n      })\n      .config(rectConfig)\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Matrix\n      @desc The pixel padding in between each cell.\n      @param {Number} [*value* = 2]\n  */\n  cellPadding(_) {\n    return arguments.length ? (this._cellPadding = _, this) : this._cellPadding;\n  }\n\n  /**\n      @memberof Matrix\n      @desc Determines which key in your data should be used for each column in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's column value.\n      @param {String|Function} [*value*]\n      @example\nfunction column(d) {\n  return d.name;\n}\n  */\n  column(_) {\n    return arguments.length ? (this._column = typeof _ === \"function\" ? _ : accessor(_), this) : this._column;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the column labels.\n      @param {Object} *value*\n      @chainable\n  */\n  columnConfig(_) {\n    return arguments.length ? (this._columnConfig = assign(this._columnConfig, _), this) : this._columnConfig;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A manual list of IDs to be used for columns.\n      @param {Array} [*value*]\n  */\n  columnList(_) {\n    return arguments.length ? (this._columnList = _, this) : this._columnList;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A sort comparator function that is run on the unique set of column values.\n      @param {Function} [*value*]\n      @example\nfunction column(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  columnSort(_) {\n    return arguments.length ? (this._columnSort = _, this) : this._columnSort;\n  }\n\n  /**\n      @memberof Matrix\n      @desc Determines which key in your data should be used for each row in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's row value.\n      @param {String|Function} [*value*]\n      @example\nfunction row(d) {\n  return d.name;\n}\n  */\n  row(_) {\n    return arguments.length ? (this._row = typeof _ === \"function\" ? _ : accessor(_), this) : this._row;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the row labels.\n      @param {Object} *value*\n      @chainable\n  */\n  rowConfig(_) {\n    return arguments.length ? (this._rowConfig = assign(this._rowConfig, _), this) : this._rowConfig;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A manual list of IDs to be used for rows.\n      @param {Array} [*value*]\n  */\n  rowList(_) {\n    return arguments.length ? (this._rowList = _, this) : this._rowList;\n  }\n\n  /**\n      @memberof Matrix\n      @desc A sort comparator function that is run on the unique set of row values.\n      @param {Function} [*value*]\n      @example\nfunction row(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  rowSort(_) {\n    return arguments.length ? (this._rowSort = _, this) : this._rowSort;\n  }\n\n}\n","import {min} from \"d3-array\";\nimport {arc} from \"d3-shape\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {TextBox} from \"d3plus-text\";\nimport {Viz} from \"d3plus-viz\";\nimport getProp from \"./helpers/getProp\";\nimport prepData from \"./helpers/prepData\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class RadialMatrix\n    @extends Viz\n    @desc Creates a radial layout of a rows/columns Matrix of any dataset. See [this example](https://d3plus.org/examples/d3plus-matrix/radial-matrix/) for help getting started using the Matrix class.\n*/\nexport default class RadialMatrix extends Viz {\n\n  /**\n    @memberof RadialMatrix\n    @desc Invoked when creating a new class instance, and sets any default parameters.\n    @private\n  */\n  constructor() {\n\n    super();\n\n    this._cellPadding = 2;\n\n    this._column = accessor(\"column\");\n    this._columnConfig = {\n      shapeConfig: {\n        labelConfig: {\n          fontColor: \"#000\",\n          padding: 5,\n          textAnchor: d => [0, 180].includes(d.angle) ? \"middle\" : [2, 3].includes(d.quadrant) ? \"end\" : \"start\",\n          verticalAlign: d => [90, 270].includes(d.angle) ? \"middle\" : [2, 1].includes(d.quadrant) ? \"bottom\" : \"top\"\n        }\n      }\n    };\n    this._columnSort = (a, b) => `${a}`.localeCompare(`${b}`);\n    this._innerRadius = radius => radius / 5;\n\n    this._label = (d, i) => `${getProp.bind(this)(\"row\", d, i)} / ${getProp.bind(this)(\"column\", d, i)}`;\n\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i, x, event) => {\n      defaultMouseMoveShape(d, i, x, event);\n      const row = getProp.bind(this)(\"row\", d, i);\n      const column = getProp.bind(this)(\"column\", d, i);\n      this.hover((h, ii) => getProp.bind(this)(\"row\", h, ii) === row || getProp.bind(this)(\"column\", h, ii) === column);\n    };\n\n    this._row = accessor(\"row\");\n    this._rowSort = (a, b) => `${a}`.localeCompare(`${b}`);\n\n    this._columnLabels = new TextBox();\n\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    const {rowValues, columnValues, shapeData} = prepData.bind(this)(this._filteredData);\n\n    if (!rowValues.length || !columnValues.length) return this;\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const labelHeight = 50, labelWidth = 100;\n    const radius = min([height - labelHeight * 2, width - labelWidth * 2]) / 2,\n          transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n\n\n    const flippedColumns = columnValues.slice().reverse();\n    flippedColumns.unshift(flippedColumns.pop());\n    const total = flippedColumns.length;\n\n    const labelData = flippedColumns\n      .map((key, i) => {\n\n        const radians = i / total * tau;\n        const angle = Math.round(radians * 180 / Math.PI);\n        const quadrant = Math.floor((angle + 90) / 90 % 4 + 1);\n\n        const xMod = [0, 180].includes(angle) ? -labelWidth / 2 : [2, 3].includes(quadrant) ? -labelWidth : 0;\n        const yMod = [90, 270].includes(angle) ? -labelHeight / 2 : [2, 1].includes(quadrant) ? -labelHeight : 0;\n\n        return {\n          key, angle, quadrant, radians,\n          x: radius * Math.sin(radians + Math.PI) + xMod,\n          y: radius * Math.cos(radians + Math.PI) + yMod\n        };\n      });\n\n    /**\n     * Extracts the axis config \"labels\" Array, if it exists, it filters\n     * the column labels by the values included in the Array.\n     */\n    const displayLabels = this._columnConfig.labels instanceof Array\n      ? labelData.filter(d => this._columnConfig.labels.includes(d.key))\n      : labelData;\n\n    this._columnLabels\n      .data(displayLabels)\n      .x(d => d.x)\n      .y(d => d.y)\n      .text(d => d.key)\n      .width(labelWidth)\n      .height(labelHeight)\n      .config(this._columnConfig.shapeConfig.labelConfig)\n      .select(\n        elem(\"g.d3plus-RadialMatrix-columns\", {\n          parent, transition,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n\n    const innerRadius = this._innerRadius(radius);\n    const rowHeight = (radius - innerRadius) / rowValues.length;\n    const columnWidth = labelData.length > 1 ? labelData[1].radians - labelData[0].radians : tau;\n    const flippedRows = rowValues.slice().reverse();\n\n    const arcData = arc()\n      .padAngle(this._cellPadding / radius)\n      .innerRadius(d => innerRadius + flippedRows.indexOf(d.row) * rowHeight + this._cellPadding / 2)\n      .outerRadius(d => innerRadius + (flippedRows.indexOf(d.row) + 1) * rowHeight - this._cellPadding / 2)\n      .startAngle(d => labelData[columnValues.indexOf(d.column)].radians - columnWidth / 2)\n      .endAngle(d => labelData[columnValues.indexOf(d.column)].radians + columnWidth / 2);\n\n    this._shapes.push(new Path()\n      .data(shapeData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-RadialMatrix-arcs\", {\n        parent, transition,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc The pixel padding in between each cell.\n      @param {Number} [*value* = 2]\n  */\n  cellPadding(_) {\n    return arguments.length ? (this._cellPadding = _, this) : this._cellPadding;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Determines which key in your data should be used for each column in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's column value.\n      @param {String|Function} [*value*]\n      @example\nfunction column(d) {\n  return d.name;\n}\n  */\n  column(_) {\n    return arguments.length ? (this._column = typeof _ === \"function\" ? _ : accessor(_), this) : this._column;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the column labels.\n      @param {Object} *value*\n      @chainable\n  */\n  columnConfig(_) {\n    return arguments.length ? (this._columnConfig = assign(this._columnConfig, _), this) : this._columnConfig;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A manual list of IDs to be used for columns.\n      @param {Array} [*value*]\n  */\n  columnList(_) {\n    return arguments.length ? (this._columnList = _, this) : this._columnList;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A sort comparator function that is run on the unique set of column values.\n      @param {Function} [*value*]\n      @example\nfunction column(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  columnSort(_) {\n    return arguments.length ? (this._columnSort = _, this) : this._columnSort;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc The radius (in pixels) for the inner donut hole of the diagram. Can either be a static Number, or an accessor function that receives the outer radius as it's only argument.\n      @param {Function|Number} [*value*]\n      @example\nfunction(outerRadius) {\n  return outerRadius / 5;\n}\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = typeof _ === \"function\" ? _ : constant(_), this) : this._innerRadius;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc Determines which key in your data should be used for each row in the matrix. Can be either a String that matches a key used in every data point, or an accessor function that receives a data point and it's index in the data array, and is expected to return it's row value.\n      @param {String|Function} [*value*]\n      @example\nfunction row(d) {\n  return d.name;\n}\n  */\n  row(_) {\n    return arguments.length ? (this._row = typeof _ === \"function\" ? _ : accessor(_), this) : this._row;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A manual list of IDs to be used for rows.\n      @param {Array} [*value*]\n  */\n  rowList(_) {\n    return arguments.length ? (this._rowList = _, this) : this._rowList;\n  }\n\n  /**\n      @memberof RadialMatrix\n      @desc A sort comparator function that is run on the unique set of row values.\n      @param {Function} [*value*]\n      @example\nfunction row(a, b) {\n  return a.localeCompare(b);\n}\n  */\n  rowSort(_) {\n    return arguments.length ? (this._rowSort = _, this) : this._rowSort;\n  }\n\n}\n"],"names":["type","d","i","cartesian","a","b","concat","map","e","data","_filteredData","rowValues","_rowList","unique","_row","sort","_rowSort","columnValues","_columnList","_column","_columnSort","length","shapeData","rowValue","columnValue","dataObj","__d3plusTooltip__","__d3plus__","column","row","dataIndex","findIndex","defaultAxisConfig","align","barConfig","stroke","gridSize","padding","paddingInner","paddingOuter","scale","tickSize","Matrix","_cellPadding","accessor","_columnAxis","Axis","_columnConfig","assign","orient","localeCompare","_label","getProp","bind","defaultMouseMoveShape","_on","x","event","hover","h","ii","_rowAxis","_rowConfig","callback","prepData","height","_height","_margin","top","bottom","parent","_select","transition","_transition","width","_width","left","right","hidden","opacity","visible","columnRotation","selectElem","name","opts","elem","Object","node","select","enter","update","domain","_padding","maxSize","config","render","rowPadding","outerBounds","columnTransform","hiddenTransform","transform","range","labelRotation","columnPadding","rowTransform","visibleTransform","undefined","rowScale","_getPosition","columnScale","cellHeight","cellWidth","rectConfig","configPrep","_shapeConfig","_shapes","push","Rect","y","_","arguments","Viz","tau","Math","PI","RadialMatrix","shapeConfig","labelConfig","fontColor","textAnchor","includes","angle","quadrant","verticalAlign","_innerRadius","radius","_columnLabels","TextBox","labelHeight","labelWidth","min","flippedColumns","slice","reverse","unshift","pop","total","labelData","key","radians","round","floor","xMod","yMod","sin","cos","displayLabels","labels","Array","filter","text","innerRadius","rowHeight","columnWidth","flippedRows","arcData","arc","padAngle","indexOf","outerRadius","startAngle","endAngle","Path","id","_ids","join","constant"],"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"}