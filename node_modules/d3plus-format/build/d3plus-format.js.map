{"version":3,"file":"d3plus-format.js","sources":["../src/locale.js","../src/formatAbbreviate.js","../src/format.js","../src/formatDefaultLocale.js","../src/formatDate.js"],"sourcesContent":["/**\n    @namespace {Object} formatLocale\n    @desc A set of default locale formatters used when assigning suffixes and currency in numbers.\n      *\n      * | Name | Default | Description |\n      * |---|---|---|\n      * | separator | \"\" | Separation between the number with the suffix. |\n      * | suffixes | [] | List of suffixes used to format numbers. |\n      * | grouping | [3] | The array of group sizes, |\n      * | delimiters | {thousands: \",\", decimal: \".\"} | Decimal and group separators. |\n      * | currency | [\"$\", \"\"] | The currency prefix and suffix. |\n*/\n\nexport default {\n  \"en-GB\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"B\", \"T\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"£\", \"\"]\n  },\n  \"en-US\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"B\", \"T\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-CL\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"MM\", \"B\", \"T\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \".\",\n      decimal: \",\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-MX\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"MM\", \"B\", \"T\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \",\",\n      decimal: \".\"\n    },\n    currency: [\"$\", \"\"]\n  },\n  \"es-ES\": {\n    separator: \"\",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"mm\", \"b\", \"t\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \".\",\n      decimal: \",\"\n    },\n    currency: [\"€\", \"\"]\n  },\n  \"et-EE\": {\n    separator: \" \",\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"tuhat\", \"miljonit\", \"miljardit\", \"triljonit\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \" \",\n      decimal: \",\"\n    },\n    currency: [\"\", \"eurot\"]\n  },\n  \"fr-FR\": {\n    suffixes: [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"m\", \"b\", \"t\", \"q\", \"Q\", \"Z\", \"Y\"],\n    grouping: [3],\n    delimiters: {\n      thousands: \" \",\n      decimal: \",\"\n    },\n    currency: [\"€\", \"\"]\n  }\n};\n","import {formatLocale} from \"d3-format\";\nimport defaultLocale from \"./locale\";\n\nconst round = (x, n) =>\n  parseFloat(Math.round(x * Math.pow(10, n)) / Math.pow(10, n)).toFixed(n);\n\n/**\n * @private\n*/\nfunction formatSuffix(str, precision, suffixes) {\n  let i = 0;\n  let value = parseFloat(str.replace(\"−\", \"-\"), 10);\n  if (value) {\n    if (value < 0) value *= -1;\n    i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n    i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n  }\n  const d = suffixes[8 + i / 3];\n\n  return {\n    number: round(d.scale(value), precision),\n    symbol: d.symbol\n  };\n}\n\n/**\n * @private\n*/\nfunction parseSuffixes(d, i) {\n  const k = Math.pow(10, Math.abs(8 - i) * 3);\n  return {\n    scale: i > 8 ? d => d / k : d => d * k,\n    symbol: d\n  };\n}\n\n\n/**\n    @function formatAbbreviate\n    @desc Formats a number to an appropriate number of decimal places and rounding, adding suffixes if applicable (ie. `1200000` to `\"1.2M\"`).\n    @param {Number|String} n The number to be formatted.\n    @param {Object|String} locale The locale config to be used. If *value* is an object, the function will format the numbers according the object. The object must include `suffixes`, `delimiter` and `currency` properties.\n    @returns {String}\n*/\nexport default function(n, locale = \"en-US\", precision = undefined) {\n  if (isFinite(n)) n *= 1;\n  else return \"N/A\";\n\n  const negative = n < 0;\n\n  const length = n.toString().split(\".\")[0].replace(\"-\", \"\").length,\n        localeConfig = typeof locale === \"object\" ? locale : defaultLocale[locale] || defaultLocale[\"en-US\"],\n        suffixes = localeConfig.suffixes.map(parseSuffixes);\n\n  const decimal = localeConfig.delimiters.decimal || \".\",\n        separator = localeConfig.separator || \"\",\n        thousands = localeConfig.delimiters.thousands || \",\";\n\n  const d3plusFormatLocale = formatLocale({\n    currency: localeConfig.currency || [\"$\", \"\"],\n    decimal,\n    grouping: localeConfig.grouping || [3],\n    thousands\n  });\n\n  let val;\n  if (precision) val = d3plusFormatLocale.format(precision)(n);\n  else if (n === 0) val = \"0\";\n  else if (length >= 3) {\n    const f = formatSuffix(d3plusFormatLocale.format(\".3r\")(n), 2, suffixes);\n    const num = parseFloat(f.number).toString().replace(\".\", decimal);\n    const char = f.symbol;\n    val = `${num}${separator}${char}`;\n  }\n  else if (length === 3) val = d3plusFormatLocale.format(\",f\")(n);\n  else if (n < 1 && n > -1) val = d3plusFormatLocale.format(\".2g\")(n);\n  else val = d3plusFormatLocale.format(\".3g\")(n);\n\n  return `${negative && val.charAt(0) !== \"−\" ? \"−\" : \"\"}${val}`\n    .replace(/\\−/g, \"-\") // replace new d3 default minus sign (−) to hyphen-minus (-)\n    .replace(/(\\.[0]*[1-9]*)[0]*$/g, \"$1\") // removes any trailing zeros\n    .replace(/\\.[0]*$/g, \"\"); // removes any trailing decimal point\n\n}\n","import abbreviate from \"./formatAbbreviate\";\nimport {format} from \"d3-format\";\n\n/**\n    @function format\n    @desc An extension to d3's [format](https://github.com/d3/d3-format#api-reference) function that adds more string formatting types and localizations.\n\nThe new specifier strings added by d3plus-format are:\n - `.3~a` - abbreviated decimal notation with a numeric suffix (ie. \"k\", \"M\", \"B\", etc). This is an alias of the `formatAbbreviate` function.\n    @param {String} specifier The string specifier used by the format function.\n    @returns {Function}\n*/\nexport default specifier => {\n  if (specifier === \".3~a\") return abbreviate;\n  return format(specifier);\n};\n","import format from \"./format\";\nimport {formatDefaultLocale} from \"d3-format\";\n\n/**\n    @function formatDefaultLocale\n    @desc An extension to d3's [formatDefaultLocale](https://github.com/d3/d3-format#api-reference) function that allows setting the locale globally for formatters.\n    @param {Object} definition The localization definition.\n    @returns {Object}\n*/\nexport default definition => {\n  const locale = formatDefaultLocale(definition);\n  locale.format = format;\n  return locale;\n};\n","import {timeYear, timeMonth, timeDay, timeHour, timeMinute, timeSecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\n\n/**\n    @function formatDate\n    @desc A default set of date formatters, which takes into account both the interval in between in each data point but also the start/end data points.\n    @param {Date} d The date string to be formatted.\n    @param {Array} dataArray The full array of ordered Date Objects.\n    @returns {String}\n*/\nexport default function(d, dataArray) {\n\n  const formatDay = timeFormat(\"%-d\"),\n        formatHour = timeFormat(\"%I %p\"),\n        formatMillisecond = timeFormat(\".%L\"),\n        formatMinute = timeFormat(\"%I:%M\"),\n        formatMonth = timeFormat(\"%b\"),\n        formatMonthDay = timeFormat(\"%b %-d\"),\n        formatMonthDayYear = timeFormat(\"%b %-d, %Y\"),\n        formatMonthYear = timeFormat(\"%b %Y\"),\n        formatSecond = timeFormat(\":%S\"),\n        formatYear = timeFormat(\"%Y\");\n\n  const labelIndex = dataArray.indexOf(d);\n  const c = dataArray[labelIndex + 1] || dataArray[labelIndex - 1];\n\n  return (timeSecond(d) < d ? formatMillisecond\n    : timeMinute(d) < d ? formatSecond\n    : timeHour(d) < d ? formatMinute\n    : timeDay(d) < d ? labelIndex === 0 ? formatMonthDayYear : formatHour\n    : timeMonth(d) < d ? labelIndex === 0 ? formatMonthDayYear : neighborInInterval(d, c, timeDay) ? formatMonthDay : formatDay\n    : timeYear(d) < d ? labelIndex === 0 ? formatMonthYear : neighborInInterval(d, c, timeMonth) ? formatMonthDay : formatMonth\n    : neighborInInterval(d, c, timeYear) ? formatMonthYear : formatYear)(d);\n\n}\n\n/**\n    @function neighborInInterval\n    @desc Helps determine whether to show the parent level time label, such as \"Jan 2020\" in a monthly chart (where \"Feb\"-only would follow)\n    @returns {Boolean}\n    @private\n*/\nfunction neighborInInterval(d, comparitor, interval) {\n  return comparitor ? +interval.round(d) === +interval.round(d + Math.abs(comparitor - d))  : false;\n}\n"],"names":["separator","suffixes","grouping","delimiters","thousands","decimal","currency","round","x","n","parseFloat","Math","pow","toFixed","formatSuffix","str","precision","i","value","replace","floor","log","LN10","max","min","d","number","scale","symbol","parseSuffixes","k","abs","locale","undefined","isFinite","negative","length","toString","split","localeConfig","defaultLocale","map","d3plusFormatLocale","formatLocale","val","format","f","num","char","charAt","specifier","abbreviate","definition","formatDefaultLocale","dataArray","formatDay","timeFormat","formatHour","formatMillisecond","formatMinute","formatMonth","formatMonthDay","formatMonthDayYear","formatMonthYear","formatSecond","formatYear","labelIndex","indexOf","c","timeSecond","timeMinute","timeHour","timeDay","timeMonth","neighborInInterval","timeYear","comparitor","interval"],"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"}